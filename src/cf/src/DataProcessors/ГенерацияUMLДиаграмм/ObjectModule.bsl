#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Сгенерированное изображение
//           Формирует на основании текстового описания в формате UML изображение, содержащее UML - диаграмму
//           Формат описания см. https://plantuml.com/ru/
// Параметры:
//  Данные		 - Строка	  -  текстовое описание диаграммы
//  Параметры	 - Структура  -  Параметры доступа к серверу рендеринга ( см. функцию ПараметрыПоУмолчанию)
// 
// Возвращаемое значение:
//  Структура - содержащая
//				ОтветСервера      - HTTPОтвет - Данные, полученные от сервера рендеринга
//				АдресИзображения  - Строка - Адрес во временном хранилище, содержащее данные изображения
//
Функция СгенерированноеИзображение(Данные, Параметры) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ОтветСервера", Неопределено);
	Результат.Вставить("АдресИзображения", Неопределено);
	
	Если Данные = "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(Данные);	
	СжатыеДанные = СжатыеДанные(ДвоичныеДанныеСтроки);	
	Base64Строка = Base64Строка(СжатыеДанные);     
	ФорматPlantUML = ФорматPlantUML(Base64Строка);  
	
	Соединение = Новый HTTPСоединение(Параметры.СерверРендеринга, , , , , Параметры.ТаймаутСоединения);
	ТекстЗапроса = Параметры.РесурсСервера + ФорматPlantUML;
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Ответ = Соединение.Получить(Запрос);
	
	// ответ  не анализируется - при необходимости нужно дописать его анализ
	ДвоичныеДанныеКартинки = Ответ.ПолучитьТелоКакДвоичныеДанные();
	
	Результат.ОтветСервера = Ответ;
	Результат.АдресИзображения = ПоместитьВоВременноеХранилище(ДвоичныеДанныеКартинки);
	
	Возврат Результат;
	
КонецФункции

// Функция - Параметры по умолчанию
//           получает параметры по умолчанию, необходимые для доступа к серверу рендеоинша изображения
// Возвращаемое значение:
// Структура  - содержащая
//				СерверРендеринга    - Строка - адрес сервера, осуществляющего рендеринг
//				РесурсСервера  		- Строка - имя ресурса, ответственного за рендеринг 
//                                    Например для svg изображений это может быть "/plantuml/svg/"
//				ТаймаутСоединения   - число - максимальное время ожидания сервера
//
Функция ПараметрыПоУмолчанию() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("СерверРендеринга", "www.plantuml.com");
	Результат.Вставить("РесурсСервера", "/plantuml/png/");
	Результат.Вставить("ТаймаутСоединения", 180);
	Возврат  Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КодированиеДанных

Функция GZipРазмерHeader()

	Возврат 10;

КонецФункции

Функция GZipРазмерFooter()

	Возврат 8;

КонецФункции

Функция ЗаписатьZip(Данные)

#Если МобильноеПриложениеСервер Тогда
	ВызватьИсключение(НСтр("ru = 'Работа с Zip-файлами в мобильной платформе не поддерживается'"));
#Иначе
	ВременныйФайл = ПолучитьИмяВременногоФайла(".bin");
	Данные.Записать(ВременныйФайл);
	ПотокZip = Новый ПотокВПамяти;
	ЗаписьZip = Новый ЗаписьZipФайла(ПотокZip);
	ЗаписьZip.Добавить(ВременныйФайл);
	ЗаписьZip.Записать();
	УдалитьФайлы(ВременныйФайл);

	Возврат ПотокZip.ЗакрытьИПолучитьДвоичныеДанные();
#КонецЕсли

КонецФункции

Функция СжатыеДанные(Данные) 

	ЧтениеДанных = Новый ЧтениеДанных(ЗаписатьZip(Данные));

	НачальноеСмещение = 14;
	ЧтениеДанных.Пропустить(НачальноеСмещение);
	CRC32 = ЧтениеДанных.ПрочитатьЦелое32();

	РазмерСжатыхДанных = ЧтениеДанных.ПрочитатьЦелое32();
	РазмерИсходныхДанных = ЧтениеДанных.ПрочитатьЦелое32();

	РазмерИмениФайла = ЧтениеДанных.ПрочитатьЦелое16();
	РазмерДополнительногоПоля = ЧтениеДанных.ПрочитатьЦелое16();
	ЧтениеДанных.Пропустить(РазмерИмениФайла + РазмерДополнительногоПоля);

	ПотокGZip = Новый ПотокВПамяти;
	ЗаписьДанных = Новый ЗаписьДанных(ПотокGZip);
	ЧтениеДанных.КопироватьВ(ЗаписьДанных, РазмерСжатыхДанных);
	
	Возврат ПотокGZip.ЗакрытьИПолучитьДвоичныеДанные();

КонецФункции

Функция ФорматPlantUML(Данные)
	Результат = "";
	СтрокаИскомая	  = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	СтрокаПодстановки = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_"; 
	Для Счетчик = 0 По СтрДлина(Данные) - 1 Цикл     
		ТекСимвол = Сред(Данные, счетчик + 1, 1);
		Поз = СтрНайти(СтрокаИскомая, ТекСимвол); 
		Если ТекСимвол = Символы.ПС ИЛИ ТекСимвол = Символы.ВК Тогда
		   Продолжить;
		КонецЕсли;
		Если Поз > 0  Тогда
			Результат = Результат + Сред(СтрокаПодстановки, Поз, 1);
		Иначе
			Результат = Результат + ТекСимвол; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции 

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли