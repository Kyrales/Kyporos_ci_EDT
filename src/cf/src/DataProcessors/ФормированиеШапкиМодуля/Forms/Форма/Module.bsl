
#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаИзменений

&НаКлиенте
Процедура ТаблицаИзмененийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаИзменений.ТекущиеДанные;	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущаяСтрокаИзменения = ТекущиеДанные.Изменения;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьШапку(Команда)
	
	Если ТаблицаИдентификаторов.Количество()=0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Таблица идентификаторов не заполнена.'"));
		Возврат;
	КонецЕсли;
	
	ФормированиеШапкиМодуля(Объект.МодульОбъекта,Объект.Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортМодулей(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмпортМодулейПродолжение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Импортировать модули?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортМодулейПродолжение(РезультатВопроса, Параметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмпортМодулейЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(ОписаниеОповещения, НСтр("ru = 'Выберите путь к каталогу файлов модулей'"));
	
КонецПроцедуры // ИмпортМодулейЗавершение()

&НаКлиенте
Процедура ИмпортМодулейЗавершение(Результат, Параметры) Экспорт

	ИмяКаталога = Результат;
	Если Не ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат;
	КонецЕсли;
	
	// АПК:566-выкл Отключение проверки на синхронные вызовы
	МассивФайлов = НайтиФайлы(ИмяКаталога,"*.txt");
	КолВоФайлов = МассивФайлов.Количество();
	Объект.Результат = "";
	сч = 0;
	КолВоИзмМодулей = 0;
	ТаблицаИзменений.Очистить(); ТекущаяСтрокаИзменения = "";
	
	Для каждого ТекФайл Из МассивФайлов Цикл
		сч=сч+1;
		ОбработкаПрерыванияПользователя();
		Прогресс = Окр((сч/КолВоФайлов)*100,0);
		Состояние(НСтр("ru = 'Обработка файла: '") + ТекФайл.ИмяБезРасширения,Прогресс);
		
		// получить текст модуля
		ПомещенныеФайлы = Новый Массив;
		ПоместитьФайлы(, ПомещенныеФайлы, ТекФайл.ПолноеИмя, Ложь);  // АПК:1348  
		Если ПомещенныеФайлы.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИсходныйТекстМодуля = ПолучитьИсходныйТекстМодуля(ПомещенныеФайлы[0].Хранение);
		
		
		РезультатМодуля = "";
		ФормированиеШапкиМодуля(ИсходныйТекстМодуля,РезультатМодуля);
		
		Если РезультатМодуля <> "" Тогда
			
			ДобавитьСтрокуВТаблицуИзмененийОбщую(ТекФайл.ИмяБезРасширения,РезультатМодуля);
			
			Объект.Результат = Объект.Результат + ТекФайл.ИмяБезРасширения+": "+Символы.ПС+РезультатМодуля+Символы.ПС+Символы.ПС;
			КолВоИзмМодулей = КолВоИзмМодулей + 1;
		КонецЕсли;
		
	КонецЦикла;
	// АПК:566-вкл 
	
	Если КолВоИзмМодулей>0 Тогда
		Объект.Результат = Объект.Результат + НСтр("ru = 'Количество измененных модулей всего: '") + Строка(КолВоИзмМодулей);
	КонецЕсли;

КонецПроцедуры // ИмпортМодулейЗавершение()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ФормированиеШапкиМодуля(ТекстМодульОбъекта, Результат) 
	
	СобытиеЗначение = "";
	СтрокиИзменений = "";
	НачалоДобавления = Ложь;
	
	ТаблицаВнутреннихИзменений = Новый ТаблицаЗначений; // используется для подсчета кол-во вложенных изменений и номеров строк
	ТаблицаВнутреннихИзменений.Колонки.Добавить("СтрокаИзменений");
	ТаблицаВнутреннихИзменений.Колонки.Добавить("КолВоИзменений");
	ТаблицаВнутреннихИзменений.Колонки.Добавить("НомераСтрок");
	
	Для Счетчик = 1 По СтрЧислоСтрок(ТекстМодульОбъекта) Цикл
		
		ТекСтрока = СтрПолучитьСтроку(ТекстМодульОбъекта, Счетчик);
		
		Если НайденИдентификаторКомментария(ТекСтрока, ТаблицаИдентификаторов) 
			И СобытиеЗначение <> "" Тогда
			
			НачалоДобавления = Ложь;
			
			// измененные
			НовСтрокаИзменений = "//  * ";
			НовСтрокаИзменений = НовСтрокаИзменений + ?(СобытиеЗначение="","[]", СобытиеЗначение);
			СтрокаИзмененийНаДобавление = "//  + " + ?(СобытиеЗначение="","[]", СобытиеЗначение);
			
			// В случае если есть строка добавленная, то заменяется на измененную, т.к. вложенность, это факт изменения внутри процедуры/функции/
			СтрокиИзменений = СтрЗаменить(СтрокиИзменений, СтрокаИзмененийНаДобавление, НовСтрокаИзменений);
			
			ДобавитьСтрокуВТаблицуВнутреннихИзменений(НовСтрокаИзменений, Счетчик, ТаблицаВнутреннихИзменений);
		
			Если Найти(СтрокиИзменений,НовСтрокаИзменений)=0 Тогда
				СтрокиИзменений = СтрокиИзменений + НовСтрокаИзменений + Символы.ПС;
			КонецЕсли;
			
		ИначеЕсли НайденИдентификаторКомментария(ТекСтрока, ТаблицаИдентификаторов) Тогда
			
			НачалоДобавления = Истина;
			
		КонецЕсли;
		
		СобытиеЗначение = ПолучитьСобытиеМодуляПоСтроке(ТекСтрока, СобытиеЗначение, НачалоДобавления);
		
		Если НачалоДобавления 
			И СобытиеЗначение <> "" Тогда
			// добавленные
			НовСтрокаИзменений = "//  + ";
			НовСтрокаИзменений = НовСтрокаИзменений + ?(СобытиеЗначение="", "[]", СобытиеЗначение+"#");
			
			Если Найти(СтрокиИзменений,НовСтрокаИзменений) = 0 Тогда
				СтрокиИзменений = СтрокиИзменений + НовСтрокаИзменений + Символы.ПС;
			КонецЕсли;
			
		ИначеЕсли НайденЗавершениеКомментария(ТекСтрока, ТаблицаИдентификаторов) Тогда
			// Jтключение флага добавления? если последняя строке ввода была переменной и есть завершающий комментарий/
			ПоследняяСтрокаИзменений = СтрПолучитьСтроку(СтрокиИзменений, СтрЧислоСтрок(СтрокиИзменений));
			Если Найти(ПоследняяСтрокаИзменений,"[Переменные]") > 0 
				Или Найти(ПоследняяСтрокаИзменений,"[Операторы]") > 0 
				Или Найти(ПоследняяСтрокаИзменений,"[Процедура]") > 0 
				Или Найти(ПоследняяСтрокаИзменений,"[Функция]") > 0 
				Или ПоследняяСтрокаИзменений = ""
				Тогда
				 НачалоДобавления = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Если ПоказыватьКолВоВставок Тогда
		ДозаполнитьСтрокиИзмененийИзТаблицыВнутреннихИзменений(ТаблицаВнутреннихИзменений, СтрокиИзменений);	
	КонецЕсли;
	
	Результат = СтрокиИзменений;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСобытиеМодуляПоСтроке(ТекстСтрокиЗначение,СобытиеЗначение,НачалоДобавления=Ложь) 
	
	ТекстСтроки = ТекстСтрокиЗначение;
	
	Если Найти(СобытиеЗначение,"[Процедура]")>0 
		И Найти(ТекстСтроки,"КонецПроцедуры")>0 Тогда
		// Конец процедуры
		Возврат "";
	ИначеЕсли Найти(СобытиеЗначение,"[Процедура]")>0 Тогда	
		Возврат СобытиеЗначение;	
	КонецЕсли;
	Если Найти(СобытиеЗначение,"[Функция]")>0 
		И Найти(ТекстСтроки,"КонецФункции")>0 Тогда
		// Конец функции
		Возврат "";
	ИначеЕсли Найти(СобытиеЗначение,"[Функция]")>0 Тогда	
		Возврат СобытиеЗначение;	
	КонецЕсли;
	
	// инициализация переменных
	Если Найти(ТекстСтроки,"Перем ")>0 Тогда
		
		Если СобытиеЗначение="" 
			И (Не НачалоДобавления) Тогда
			// пустое т.к. вначале переменные
			Возврат "";
		КонецЕсли;
		
		НайденнаяСтрока1 = Найти(ТекстСтроки,"Перем ");
		НайденнаяСтрока2 = Найти(ТекстСтроки,";");
		ТестИмяПроцедуры = Сред(ТекстСтроки,НайденнаяСтрока1 + 6,НайденнаяСтрока2-6-1);
		
		Возврат "[Переменные]"+ТестИмяПроцедуры;
		
	КонецЕсли;
	
	// инициализация процедур
	Если Найти(ТекстСтроки,"Процедура ")>0 
		И Найти(ТекстСтроки,"(")>0 
		И Лев(СокрЛП(ТекстСтроки),2)<>"//" Тогда
		
		НайденнаяСтрока1 = Найти(ТекстСтроки,"Процедура ");
		НайденнаяСтрока2 = Найти(ТекстСтроки,"(");
		
		ТестИмяПроцедуры = Сред(ТекстСтроки,НайденнаяСтрока1 + 10,НайденнаяСтрока2-10-1);
		
		СобытиеЗначение = "[Процедура]"+ТестИмяПроцедуры; 
		
		Возврат СобытиеЗначение+"#";
		
	КонецЕсли;
	
	// инициализация функций
	Если Найти(ТекстСтроки,"Функция ") > 0 
		И Найти(ТекстСтроки,"(") > 0 
		И Лев(СокрЛП(ТекстСтроки),2) <> "//" Тогда
		
		НайденнаяСтрока1 = Найти(ТекстСтроки,"Функция ");
		НайденнаяСтрока2 = Найти(ТекстСтроки,"(");
		
		ТестИмяПроцедуры = Сред(ТекстСтроки,НайденнаяСтрока1 + 8,НайденнаяСтрока2-8-1);
		
		СобытиеЗначение = "[Функция]"+ТестИмяПроцедуры; 
		
		Возврат СобытиеЗначение+"#";
		
	КонецЕсли;
	
	Если СокрЛП(ТекстСтроки)<>"" 
		И Лев(СокрЛП(ТекстСтроки),2) <> "//" 
		И Лев(СокрЛП(ТекстСтроки),1) <> "&" Тогда
		// операторы
		Возврат "[Операторы]"+ТестИмяПроцедуры+"#";
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервереБезКонтекста
Функция НайденИдентификаторКомментария(ИсходнаяСтрока,ТаблицаИдентификаторов) 
	
	Для каждого ТекСтрока Из ТаблицаИдентификаторов Цикл
		
		Если Найти(ИсходнаяСтрока,">> ОПИСАНИЕ ИЗМЕНЕНИЙ >>") > 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если Найти(ИсходнаяСтрока,ТекСтрока.ИдентификаторКомментария) > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайденЗавершениеКомментария(ИсходнаяСтрока,ТаблицаИдентификаторов) 
	
	Для каждого ТекСтрока Из ТаблицаИдентификаторов Цикл
	
		Если Найти(ИсходнаяСтрока,ТекСтрока.ЗавершениеКомментария) > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ПолучитьИсходныйТекстМодуля(АдресФайла) 
	
	ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла("txt");
	
	ФайлДанных = ПолучитьИзВременногоХранилища(АдресФайла);
	ФайлДанных.Записать(ПутьКФайлуНаСервере);
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	ТекстовыйФайл.Прочитать(ПутьКФайлуНаСервере);	
	
	Текст = ТекстовыйФайл.ПолучитьТекст();
	
	УдалитьФайлы(ПутьКФайлуНаСервере);
	
	Возврат Текст;
	
КонецФункции

// Процедура добавляет строку в таблицу внутренних изменений и заполняет дополнительные колонки
&НаСервереБезКонтекста
Процедура ДобавитьСтрокуВТаблицуВнутреннихИзменений(СтрокаДанных,НомерСтрокиИзменения,ТаблицаВнутреннихИзменений) 
	
	НайденнаяСтрока = ТаблицаВнутреннихИзменений.Найти(СтрокаДанных,"СтрокаИзменений");	
	Если НайденнаяСтрока = Неопределено Тогда
		НовСтрока = ТаблицаВнутреннихИзменений.Добавить();
		НовСтрока.СтрокаИзменений = СтрокаДанных; 
		НовСтрока.КолВоИзменений = 1;
		НовСтрока.НомераСтрок = Формат(НомерСтрокиИзменения, "ЧГ=0");
	Иначе
		НайденнаяСтрока.КолВоИзменений = НайденнаяСтрока.КолВоИзменений + 1;
		НайденнаяСтрока.НомераСтрок = НайденнаяСтрока.НомераСтрок + ", "+Формат(НомерСтрокиИзменения, "ЧГ=0");
	КонецЕсли;	
	
КонецПроцедуры

//
&НаСервереБезКонтекста
Процедура ДозаполнитьСтрокиИзмененийИзТаблицыВнутреннихИзменений(ТаблицаВнутреннихИзменений,СтрокиИзменений) 
	
	КолВоИзменений = 0;
	
	Для каждого ТекСтрока Из ТаблицаВнутреннихИзменений Цикл
		
		КолВоИзменений = КолВоИзменений + ТекСтрока.КолВоИзменений;
		ПодстрокаЗамены = СтрШаблон(НСтр("ru = '%1 (кол-во вставок: %2)'"), ТекСтрока.СтрокаИзменений, ТекСтрока.КолВоИзменений);
		СтрокиИзменений = СтрЗаменить(СтрокиИзменений, ТекСтрока.СтрокаИзменений, ПодстрокаЗамены);
	
	КонецЦикла;
	
	СтрокиИзменений = СтрокиИзменений + Символы.ПС + НСтр("ru = 'Количество вставок всего: '") + Строка(КолВоИзменений);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицуИзмененийОбщую(Модуль,Изменения)
	
	НовСтрока = ТаблицаИзменений.Добавить();
	НовСтрока.Модуль = Модуль; 
	НовСтрока.Изменения = Изменения;
	
КонецПроцедуры // ДобавитьСтрокуВТаблицуИзмененийОбщую()

#КонецОбласти
