#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем Команда_ПоказПрезентации;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// БезопасныйРежим - Булево - Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// Информация - Строка- краткая информация по обработке, описание обработки
//
// Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение - Булево - если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор - строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Назначение", Неопределено);
	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = 'Выполнятор кода'"));
	ПараметрыРегистрации.Вставить("Версия", "0.1");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	ПараметрыРегистрации.Вставить("Информация", НСтр("ru = 'Используется для демонстрации подсветки кода 1С'"));
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд,
					НСтр("ru = 'Запустить выполнятор кода...'"),
					Команда_ПоказПрезентации,
					"ОткрытиеФормы");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ РАСКРАШИВАНИЯ

// Возвращает раскрашенную страницу 1С
//
// Параметры:
//  Код1С	 - Строка 
// 
// Возвращаемое значение:
//  Строка - раскрашенная строка в HTML
//
Функция РаскрашеннаяСтраница1C(Код1С) Экспорт
	
	СтраницаHTML = ПолучитьМакет("index").ПолучитьТекст();
	
	СтраницаHTML = СтрЗаменить(СтраницаHTML, "<textarea id='code' name='code'></textarea>","<textarea id='code' name='code'>"+Код1С+"</textarea>");
	
	cm_css = ПолучитьМакет("lib_codemirror_css").ПолучитьТекст();     
	СтраницаHTML = СтрЗаменить(СтраницаHTML, "<link rel='stylesheet' href='https://www-1c.ru/wp-content/plugins/codemirror1c/lib/codemirror.css'>", "<style>"+cm_css+"</style>");
		
	c1_css = ПолучитьМакет("theme_1c_css").ПолучитьТекст();
	СтраницаHTML = СтрЗаменить(СтраницаHTML, "<link rel='stylesheet' href='https://www-1c.ru/wp-content/plugins/codemirror1c/theme/1c.css'>", "<style>"+c1_css+"</style>");
		
	РаботатьЛокально = Истина; //Если ложь - берем с сайта последние обновления файлов js .  // { *Олег Каратаев [2020-11-06] Установлено в Истина, т.к. сайта приходит некорректный код }
	Если РаботатьЛокально Тогда
			
		c1_js = ПолучитьМакет("mode_1c_1c_js").ПолучитьТекст();
		СтраницаHTML = СтрЗаменить(СтраницаHTML, "<script src='https://www-1c.ru/wp-content/plugins/codemirror1c/mode/1c/1c.js'></script>", "<script>"+c1_js+"</script>");		
		
		comment_js = ПолучитьМакет("addon_comment_comment_js").ПолучитьТекст();
		СтраницаHTML = СтрЗаменить(СтраницаHTML, "<script src='https://www-1c.ru/wp-content/plugins/codemirror1c/addon/comment/comment.js'></script>", "<script>"+comment_js+"</script>");
		
		cm_js = ПолучитьМакет("lib_codemirror_js").ПолучитьТекст();
		СтраницаHTML = СтрЗаменить(СтраницаHTML, "<script src='https://www-1c.ru/wp-content/plugins/codemirror1c/lib/codemirror.js'></script>", "<script>"+cm_js+"</script>");	
	КонецЕсли;
	
	Возврат СтраницаHTML;

КонецФункции // РаскрашеннаяСтраница1С()

#КонецОбласти

#Область Инициализация

Команда_ПоказПрезентации = "ВыполняторКода1С-5fb9accd-c79d-4326-b922-5b0721595c45";

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
