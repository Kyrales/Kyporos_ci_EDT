

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Период.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияПоПроектамПриИзменении(Элемент)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();

КонецПроцедуры

&НаКлиенте
Процедура ИерархияПоИсполнителямПриИзменении(Элемент)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();
	
КонецПроцедуры
       
&НаКлиенте
Процедура ДиаграммаГантаПриОкончанииРедактированияИнтервала(Элемент, Интервал, ОтменаРедактирования)
	
	Если ЗадачаВыполнена(Интервал.Расшифровка) Тогда
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;
	
	Интервал.Начало = НачалоДня(Интервал.Начало + ?(Час(Интервал.Начало) < 12, 0, 24 * 60 * 60));
	Интервал.Конец = НачалоДня(Интервал.Конец + ?(Час(Интервал.Конец) < 12, 0, 24 * 60 * 60));
	
	Если Интервал.Начало = Интервал.Конец Тогда
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;	
	
	Оповещение = Новый ОписаниеОповещения("ДиаграммаГантаПриОкончанииРедактированияИнтервалаЗавершение", ЭтотОбъект, Новый Структура("Интервал", Интервал) );
	ПоказатьВопрос(Оповещение, "Вы уверены, что хотите изменить срок задачи?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаПриОкончанииРедактированияИнтервалаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
		
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		ОпределитьНастройкиДиаграммы();
		СформироватьДиаграмму();
		Возврат;
	КонецЕсли;
   
    Интервал = ДополнительныеПараметры.Интервал;
    
    ИзменитьИнтервалНаСервере(Интервал.Расшифровка, Интервал.Начало, Интервал.Конец);

КонецПроцедуры
                   
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьКалендарь(Команда)
	
	ОпределитьНастройкиДиаграммы();
	СформироватьДиаграмму();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОпределитьНастройкиДиаграммы()
	
	ДГ = ДиаграммаГанта;
	
	ДГ.АвтоОпределениеПолногоИнтервала = Ложь;
	ДГ.УстановитьПолныйИнтервал(Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания);
	
	ДГ.ОтображатьЗаголовок = Истина;
	ДГ.ОбластьЗаголовка.Текст = "За период " + ПредставлениеПериода(Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания);	
	
	ДГ.ОтображатьЛегенду = Ложь;
	
	ДГ.РастягиваниеПоВертикали = РастягиваниеПоВертикалиДиаграммыГанта.РастягиватьСтрокиИДанные;
	
	//ДГ.ВертикальнаяПрокрутка = Истина;
	ДГ.ПрозрачныйФон = Истина;
	
	//ДГ.ОтображениеТекстаЗначения = ОтображениеТекстаЗначенияДиаграммыГанта.Право;
	
	ДГ.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	
	ДГ.ОбластьПостроения.Право = 1;
	
	ДГ.ОбластьПостроения.ШкалаВремени.Положение = ПоложениеШкалыВремени.Низ;
	ДГ.ОбластьПостроения.ШкалаВремени.ПрозрачныйФон = Истина;
	
	// Выделим цветом выходные
	ТекДата = НачалоНедели(Объект.Период.ДатаНачала);	
	Пока ТекДата <= Объект.Период.ДатаОкончания + 1 Цикл 		
		ИнтервалФона = ДГ.ИнтервалыФона.Добавить(ТекДата - 2 * 24 * 60 * 60, ТекДата);		
		ТекДата = ТекДата + 7 * 24 * 60 * 60;
	КонецЦикла;
	
	// Выделим цветом текущий день
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ИнтервалФона = ДГ.ИнтервалыФона.Добавить(НачалоДня(ТекущаяДатаСеанса), КонецДня(ТекущаяДатаСеанса) + 1);
	ИнтервалФона.Цвет = WebЦвета.СинеСерый;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграмму()
	
	ДиаграммаГанта.Очистить();
	
	КартинкаКатегории 	= Новый Картинка(РеквизитФормыВЗначение("Объект").ПолучитьМакет("КартинкаКатегории"));
	СинийРеквизит 		= Новый Картинка(РеквизитФормыВЗначение("Объект").ПолучитьМакет("КартинкаАктивнойЗадачи"));
	КрасныйРеквизит 	= Новый Картинка(РеквизитФормыВЗначение("Объект").ПолучитьМакет("КартинкаПросроченнойЗадачи"));
	ЗеленыйРеквизит 	= БиблиотекаКартинок.Успешно;
	Серия = ДиаграммаГанта.УстановитьСерию("Задачи");
	
	ПараметрыДиаграммы = Новый Структура;
	ПараметрыДиаграммы.Вставить("КартинкаКатегории", КартинкаКатегории);
	ПараметрыДиаграммы.Вставить("СинийРеквизит", СинийРеквизит);
	ПараметрыДиаграммы.Вставить("КрасныйРеквизит", КрасныйРеквизит);
	ПараметрыДиаграммы.Вставить("ЗеленыйРеквизит", ЗеленыйРеквизит);
	ПараметрыДиаграммы.Вставить("Серия", Серия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 50
	|	Задачи.Ссылка КАК Ссылка,
	|	Задачи.Представление КАК Представление,
	|	Задачи.Проект КАК Категория,
	|	Задачи.СрокИсполнения КАК СрокИсполнения,
	|	Задачи.Выполнена КАК Завершена,
	|	ВЫБОР
	|		КОГДА НЕ Задачи.Выполнена
	|				И Задачи.СрокИсполнения < &ТекДата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Просрочена,
	|	Задачи.Исполнитель КАК Исполнитель,
	|	Задачи.Трудоемкость КАК Трудоемкость,
	|	Задачи.ДатаПринятияКИсполнению КАК ДатаПринятияКИсполнению,
	|	Задачи.ПринятаКИсполнению КАК ПринятаКИсполнению,
	|	Задачи.ДатаВыполнения КАК ДатаВыполнения
	|ИЗ
	|	Задача.ЗадачиПользователя КАК Задачи
	|ГДЕ
	|	Задачи.СрокИсполнения МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ Задачи.ПометкаУдаления
	|	И (Задачи.Исполнитель = &Исполнитель
	|			ИЛИ &Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|	И (Задачи.Выполнена = ЛОЖЬ
	|			ИЛИ &ПоказыватьВыполненные = ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задачи.Проект.Код,
	|	Задачи.Номер";
	
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("НачалоПериода", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Объект.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Исполнитель", Объект.Исполнитель);
	Запрос.УстановитьПараметр("ПоказыватьВыполненные", ПоказыватьВыполненные);

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ВыводДанныхТочкиДиаграммы(Выборка, ПараметрыДиаграммы);

	КонецЦикла;
	
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.РазвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ВыводДанныхТочкиДиаграммы(Выборка, ПараметрыДиаграммы)
	
	КартинкаКатегории 	= ПараметрыДиаграммы.КартинкаКатегории;
	СинийРеквизит 		= ПараметрыДиаграммы.СинийРеквизит;
	КрасныйРеквизит 	= ПараметрыДиаграммы.КрасныйРеквизит;
	ЗеленыйРеквизит 	= ПараметрыДиаграммы.ЗеленыйРеквизит;
	Серия 				= ПараметрыДиаграммы.Серия;
	
	Проект = ?(ЗначениеЗаполнено(Выборка.Категория), Выборка.Категория, "Без проекта");
	
	Если ИерархияПоПроектам 
		И ИерархияПоИсполнителям Тогда
		// Проект/Исполнитель/Задача
		Точка = ДиаграммаГанта.УстановитьТочку(Проект);
		Точка.Картинка = КартинкаКатегории;
		
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Исполнитель, Проект);
		Точка.Картинка = БиблиотекаКартинок.Пользователь;
		
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Ссылка, Выборка.Исполнитель);
	ИначеЕсли ИерархияПоПроектам 
		И (Не ИерархияПоИсполнителям) Тогда
		// Проект/Задача
		Точка = ДиаграммаГанта.УстановитьТочку(Проект);
		Точка.Картинка = КартинкаКатегории;
		
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Ссылка, Проект);
	ИначеЕсли (Не ИерархияПоПроектам) 
		И ИерархияПоИсполнителям Тогда
		// Исполнитель/Задача
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Исполнитель);
		Точка.Картинка = БиблиотекаКартинок.Пользователь;
		
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Ссылка, Выборка.Исполнитель);
	Иначе
		// Задача	
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Ссылка, Выборка.Исполнитель);
	КонецЕсли;
	
	Значение = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);
	Значение.Редактирование = Истина;
	
	Интервал = Значение.Добавить();
	Интервал.Расшифровка = Выборка.Ссылка; 
	Интервал.Текст = Формат(Выборка.СрокИсполнения, "ДФ='d MMMM (dddd)'");
	Если Выборка.Завершена Тогда
		Интервал.Цвет = WebЦвета.Зеленый;
		Точка.Картинка = ЗеленыйРеквизит;
	ИначеЕсли Выборка.Просрочена Тогда
		Интервал.Цвет = Новый Цвет(204, 0, 0);
		Точка.Картинка = КрасныйРеквизит;
	Иначе
		Интервал.Цвет = WebЦвета.СинийСоСтальнымОттенком;
		Точка.Картинка = СинийРеквизит;
	КонецЕсли;
	
	Если Выборка.Завершена Тогда
		
		Если Выборка.ДатаПринятияКИсполнению = '00010101' Тогда
			Интервал.Начало = НачалоДня(Выборка.ДатаВыполнения);
		Иначе
			Интервал.Начало = НачалоДня(Выборка.ДатаПринятияКИсполнению);
		КонецЕсли;
		
		Интервал.Конец 	= КонецДня(Выборка.ДатаВыполнения);
		
	Иначе
		
		Если Выборка.Трудоемкость > 0 Тогда
			// Расчет периода по рабочим дням из плановой трудоемкости.
			КолВоДней = Цел(Выборка.Трудоемкость / 8);
			Интервал.Начало = НачалоДня(Выборка.СрокИсполнения) - (КолВоДней * 24 * 60 * 60);
		Иначе
			Интервал.Начало = НачалоДня(Выборка.СрокИсполнения);
		КонецЕсли;
		
		Интервал.Конец 	= КонецДня(Выборка.СрокИсполнения);
		
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Процедура ИзменитьИнтервалНаСервере(ЗадачаСсылка, ИнтервалНачало, ИнтервалОкончание)
	
	Если (ЗадачаСсылка.СрокИсполнения = ИнтервалНачало) 
		И (ЗадачаСсылка.СрокИсполнения = ИнтервалОкончание - 24 * 60 * 60) Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
	Если ЗадачаСсылка.СрокИсполнения = ИнтервалНачало Тогда // растягивание вправо
		ЗадачаОбъект.СрокИсполнения = ИнтервалОкончание - 24 * 60 * 60;
	Иначе // растягивание влево или перемещение
		ЗадачаОбъект.СрокИсполнения = ИнтервалНачало;
	КонецЕсли;
	ЗадачаОбъект.Записать();
	
	СформироватьДиаграмму();

КонецПроцедуры

&НаСервере
Функция ЗадачаВыполнена(Ссылка)

	Возврат Ссылка.Выполнена;		

КонецФункции // ЗадачаВыполнена()

#КонецОбласти
