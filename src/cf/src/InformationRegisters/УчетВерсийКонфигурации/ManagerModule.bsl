
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает последнюю версию типа модуля конфигурации относительно указанной версии
//
// Параметры:
//  ОбъектМетаданных - 	 СправочникСсылка.ОбъектыМетаданныхКонфигураций -
//  ТекущаяВерсия	 - 	 СправочникСсылка.ВерсииКонфигураций -
//  ТипМодуля		 - 	 СправочникСсылка.ТипыМодулей -
// 
// Возвращаемое значение:
//   - Неопределено - если не найдены прошлые версии
//   - Структура:
//  	* Конфигурация - СправочникСсылка.Конфигурации
//  	* ВерсияКонфигурации - СправочникСсылка.ВерсииКонфигураций
//  	* ОбъектМетаданных - СправочникСсылка.ОбъектыМетаданныхКонфигураций
//  	* ТипМодуля		 - СправочникСсылка.ТипыМодулей  	
//
Функция ПолучитьПоследнююВерсиюИзменений(ОбъектМетаданных, ТекущаяВерсия, ТипМодуля) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	УчетВерсийКонфигурации.Конфигурация КАК Конфигурация,
	               |	УчетВерсийКонфигурации.ВерсияКонфигурации КАК ВерсияКонфигурации,
	               |	УчетВерсийКонфигурации.ОбъектМетаданных КАК ОбъектМетаданных,
	               |	УчетВерсийКонфигурации.ТипМодуля КАК ТипМодуля,
	               |	УчетВерсийКонфигурации.КомментарийИзменения КАК КомментарийИзменения,
	               |	УчетВерсийКонфигурации.ПроведенАнализИзменений КАК ПроведенАнализИзменений,
	               |	УчетВерсийКонфигурации.ДатаАнализаИзменений КАК ДатаАнализаИзменений,
	               |	УчетВерсийКонфигурации.ВыполненоИзменение КАК ВыполненоИзменение,
	               |	УчетВерсийКонфигурации.ДатаВыполненияИзменений КАК ДатаВыполненияИзменений,
	               |	УчетВерсийКонфигурации.ДействияРезультат КАК ДействияРезультат,
	               |	УчетВерсийКонфигурации.КомментарийРезультата КАК КомментарийРезультата,
	               |	УчетВерсийКонфигурации.АвторИзменений КАК АвторИзменений
	               |ИЗ
	               |	РегистрСведений.УчетВерсийКонфигурации КАК УчетВерсийКонфигурации
	               |ГДЕ
	               |	УчетВерсийКонфигурации.ВерсияКонфигурации <> &ТекущаяВерсия
	               |	И УчетВерсийКонфигурации.ВерсияКонфигурации.ДатаОбновления < &ТекущаяДатаОбновления
	               |	И УчетВерсийКонфигурации.ОбъектМетаданных = &ОбъектМетаданных
	               |	И УчетВерсийКонфигурации.ТипМодуля = &ТипМодуля
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	УчетВерсийКонфигурации.ВерсияКонфигурации.ДатаОбновления УБЫВ";
	
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	Запрос.УстановитьПараметр("ТекущаяВерсия", ТекущаяВерсия);
	Запрос.УстановитьПараметр("ТекущаяДатаОбновления", ТекущаяВерсия.ДатаОбновления);
	Запрос.УстановитьПараметр("ТипМодуля", ТипМодуля);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
    	СтруктураКлюча = Новый Структура();
    	СтруктураКлюча.Вставить("Конфигурация", Справочники.Конфигурации.ПустаяСсылка());
     	СтруктураКлюча.Вставить("ВерсияКонфигурации", Справочники.ВерсииКонфигураций.ПустаяСсылка());
       	СтруктураКлюча.Вставить("ОбъектМетаданных", Справочники.ОбъектыМетаданныхКонфигураций.ПустаяСсылка());
       	СтруктураКлюча.Вставить("ТипМодуля", Справочники.ТипыМодулей.ПустаяСсылка());
     	
    	ЗаполнитьЗначенияСвойств(СтруктураКлюча, Выборка);
	
		Возврат СтруктураКлюча;
	
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает структуру данных по статистике выполненности работ по объектам метаданных
//
// Параметры:
//  Конфигурация						 - СправочникСсылка.Конфигурации
//  ВерсияКонфигурации					 - СправочникСсылка.ВерсииКонфигураций
//
// Возвращаемое значение:
//  Структура - структура свойств:
//  * ОбщееЧислоОМ - Строка
//  * НеПроведенАнализ - Строка
//  * НеВыполненоОбъектов - Строка
//  * ПроцентВыполнения - Строка
//  * ЕстьОписаниеВерсии - Булево
//
Функция СтатистикаОбъектовМетаданных(Знач Конфигурация, Знач ВерсияКонфигурации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ВложенныйЗапрос.ОбъектМетаданных КАК ОбъектМетаданных,
		|	СУММА(ВложенныйЗапрос.ВыполненоИзменений) КАК ВыполненоИзменений,
		|	СУММА(ВложенныйЗапрос.ПроведеноАнализа) КАК ПроведеноАнализа,
		|	СУММА(ВложенныйЗапрос.ИзмененийНеТребуется) КАК ИзмененийНеТребуется,
		|	СУММА(ВложенныйЗапрос.ВсегоЗаписей) КАК ВсегоЗаписей
		|ПОМЕСТИТЬ АнализДанныхУчетаВерсий
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетВерсийКонфигурации.ОбъектМетаданных КАК ОбъектМетаданных,
		|		СУММА(ВЫБОР
		|				КОГДА УчетВерсийКонфигурации.ВыполненоИзменение
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ВыполненоИзменений,
		|		СУММА(ВЫБОР
		|				КОГДА УчетВерсийКонфигурации.ПроведенАнализИзменений
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПроведеноАнализа,
		|		СУММА(ВЫБОР
		|				КОГДА УчетВерсийКонфигурации.ИзмененийНеТребуется
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ИзмененийНеТребуется,
		|		СУММА(1) КАК ВсегоЗаписей
		|	ИЗ
		|		РегистрСведений.УчетВерсийКонфигурации КАК УчетВерсийКонфигурации
		|	ГДЕ
		|		УчетВерсийКонфигурации.ВерсияКонфигурации = &ВерсияКонфигурации
		|	
		|	СГРУППИРОВАТЬ ПО
		|		УчетВерсийКонфигурации.ОбъектМетаданных
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОбъектыМетаданныхКонфигураций.Ссылка,
		|		0,
		|		0,
		|		0,
		|		1
		|	ИЗ
		|		Справочник.ОбъектыМетаданныхКонфигураций КАК ОбъектыМетаданныхКонфигураций
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетВерсийКонфигурации КАК УчетВерсийКонфигурации
		|			ПО (УчетВерсийКонфигурации.ОбъектМетаданных = ОбъектыМетаданныхКонфигураций.Ссылка)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииКонфигураций КАК ВерсииКонфигураций
		|			ПО ОбъектыМетаданныхКонфигураций.Владелец = ВерсииКонфигураций.Владелец
		|				И (ВерсииКонфигураций.Ссылка = &ВерсияКонфигурации)
		|				И ОбъектыМетаданныхКонфигураций.ДатаДобавления <= ВерсииКонфигураций.ДатаОбновления
		|	ГДЕ
		|		УчетВерсийКонфигурации.Конфигурация ЕСТЬ NULL) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ОбъектМетаданных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК ВсегоОбъектов,
		|	СУММА(ВЫБОР
		|			КОГДА АнализДанныхУчетаВерсий.ПроведеноАнализа = АнализДанныхУчетаВерсий.ВсегоЗаписей
		|					ИЛИ АнализДанныхУчетаВерсий.ПроведеноАнализа > 0
		|						И АнализДанныхУчетаВерсий.ПроведеноАнализа + АнализДанныхУчетаВерсий.ИзмененийНеТребуется = АнализДанныхУчетаВерсий.ВсегоЗаписей
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоПроведенАнализ,
		|	СУММА(ВЫБОР
		|			КОГДА АнализДанныхУчетаВерсий.ВыполненоИзменений = АнализДанныхУчетаВерсий.ВсегоЗаписей
		|					ИЛИ АнализДанныхУчетаВерсий.ВыполненоИзменений > 0
		|						И АнализДанныхУчетаВерсий.ВыполненоИзменений + АнализДанныхУчетаВерсий.ИзмененийНеТребуется = АнализДанныхУчетаВерсий.ВсегоЗаписей
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоВыполнено,
		|	СУММА(ВЫБОР
		|			КОГДА АнализДанныхУчетаВерсий.ИзмененийНеТребуется = АнализДанныхУчетаВерсий.ВсегоЗаписей
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоИзмененийНеТребуется
		|ИЗ
		|	Справочник.ОбъектыМетаданныхКонфигураций КАК ОбъектыМетаданныхКонфигураций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АнализДанныхУчетаВерсий КАК АнализДанныхУчетаВерсий
		|		ПО ОбъектыМетаданныхКонфигураций.Ссылка = АнализДанныхУчетаВерсий.ОбъектМетаданных
		|ГДЕ
		|	ОбъектыМетаданныхКонфигураций.ПометкаУдаления = ЛОЖЬ
		|	И ОбъектыМетаданныхКонфигураций.Актуальность
		|	И ОбъектыМетаданныхКонфигураций.Владелец = &Конфигурация";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("ВерсияКонфигурации", ВерсияКонфигурации);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ОбщееЧислоОМ", "");
	СтруктураРезультата.Вставить("НеПроведенАнализ", "");
	СтруктураРезультата.Вставить("НеВыполненоОбъектов", "");
	СтруктураРезультата.Вставить("ПроцентВыполнения", "");
	СтруктураРезультата.Вставить("ЕстьОписаниеВерсии", Ложь);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(); // АПК:566 Выбрать используется корректно.
	
	//@skip-check property-return-type
	Если Выборка.Следующий()
		И ЗначениеЗаполнено(Выборка.ВсегоОбъектов) Тогда
		
		СтруктураРезультата.ОбщееЧислоОМ = Строка(Выборка.ВсегоОбъектов);
		СтруктураРезультата.НеПроведенАнализ = Строка(Выборка.ВсегоОбъектов - Выборка.ВсегоПроведенАнализ - Выборка.ВсегоИзмененийНеТребуется);
		СтруктураРезультата.НеВыполненоОбъектов = Строка(Выборка.ВсегоОбъектов - Выборка.ВсегоВыполнено - Выборка.ВсегоИзмененийНеТребуется);
		
		ПроцентВыполненияАнализ = Окр(((Выборка.ВсегоПроведенАнализ) / Выборка.ВсегоОбъектов) * 50, 2);
		ПроцентВыполненияВсегоВыполнено = Окр(((Выборка.ВсегоВыполнено) / Выборка.ВсегоОбъектов) * 50, 2);
		ПроцентВыполненияВсегоИзмененийНеТребуется = Окр(((Выборка.ВсегоИзмененийНеТребуется) / Выборка.ВсегоОбъектов) * 100, 2);
		ПроцентВыполненияОбщий = Окр(ПроцентВыполненияАнализ + ПроцентВыполненияВсегоВыполнено + ПроцентВыполненияВсегоИзмененийНеТребуется, 0);
		
		Если Выборка.ВсегоВыполнено = Выборка.ВсегоОбъектов Тогда
			СтруктураРезультата.ПроцентВыполнения = Строка(100) + " %";
		Иначе
			СтруктураРезультата.ПроцентВыполнения = Строка(ПроцентВыполненияОбщий) + " %";
		КонецЕсли;
		
	Иначе
		
		СтруктураРезультата.ОбщееЧислоОМ = "00";
		СтруктураРезультата.НеПроведенАнализ = "00";
		СтруктураРезультата.НеВыполненоОбъектов = "00";
		
		СтруктураРезультата.ПроцентВыполнения = "00 %";
		
	КонецЕсли;
	
	СтруктураРезультата.ЕстьОписаниеВерсии = НЕ ВерсияКонфигурации.Пустая()
		И ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВерсияКонфигурации, "Комментарий"));
	
	Возврат СтруктураРезультата;
	
КонецФункции

// Заполнение новой версии конфигурации на основании актуальных данных из объектов метаданных
// 
// Параметры:
//  НоваяВерсия - СправочникСсылка.ВерсииКонфигураций
//  ПоследнейВерсиейИзмененияДляВсех - Булево - по умолчанию Ложь
Процедура ЗаполнитьНовуюВерсиюКонфигурации(Знач НоваяВерсия, Знач ПоследнейВерсиейИзмененияДляВсех = Ложь) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	Конфигурация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяВерсия, "Владелец");
	НаборЗаписей.Отбор.Конфигурация.Установить(Конфигурация);
	НаборЗаписей.Отбор.ВерсияКонфигурации.Установить(НоваяВерсия);
	НаборЗаписей.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка.Владелец КАК Конфигурация,
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка КАК ОбъектМетаданных,
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.ТипМодуля КАК ТипМодуля,
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.ИнформацияПоИзменениям КАК КомментарийИзменения,
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.АвторИзменений КАК АвторИзменений
	               |ИЗ
	               |	Справочник.ОбъектыМетаданныхКонфигураций.ИзмененияПоУмолчанию КАК ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию
	               |ГДЕ
	               |	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка.Владелец = &Конфигурация";
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписиУчетаВерсииКонфигурации = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписиУчетаВерсииКонфигурации, Выборка);
		МенеджерЗаписиУчетаВерсииКонфигурации.ВерсияКонфигурации = НоваяВерсия;
		
		// заполнить теги изменений из описания изменения
		//@skip-check invocation-parameter-type-intersect
		//@skip-check property-return-type
		МенеджерЗаписиУчетаВерсииКонфигурации.ТегиИзменения = УправлениеУчетомКонфигурацийВызовСервера.ТегиИзДанныхПоИзменениям(Выборка.КомментарийИзменения);
		
		МенеджерЗаписиУчетаВерсииКонфигурации.Записать();
		
	КонецЦикла;
	
	Если ПоследнейВерсиейИзмененияДляВсех Тогда
	
		 ЗаполнитьПоследнейВерсиейИзмененияДляВсехОМ(Конфигурация, НоваяВерсия);
	
	КонецЕсли;
	
КонецПроцедуры

// Заполняет последней версией изменения для всех объектов
//
// Параметры:
//  Конфигурация						 - СправочникСсылка.Конфигурации
//  ВерсияКонфигурации					 - СправочникСсылка.ВерсииКонфигураций
//
Процедура ЗаполнитьПоследнейВерсиейИзмененияДляВсехОМ(Знач Конфигурация, Знач ВерсияКонфигурации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетВерсийКонфигурации.ОбъектМетаданных КАК ОбъектМетаданных,
	               |	СУММА(ВЫБОР
	               |			КОГДА УчетВерсийКонфигурации.ВыполненоИзменение
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ВыполненоИзменений,
	               |	СУММА(ВЫБОР
	               |			КОГДА УчетВерсийКонфигурации.ПроведенАнализИзменений
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ПроведеноАнализа,
	               |	СУММА(1) КАК ВсегоЗаписей
	               |ПОМЕСТИТЬ ВТ_АнализДанны
	               |ИЗ
	               |	РегистрСведений.УчетВерсийКонфигурации КАК УчетВерсийКонфигурации
	               |ГДЕ
	               |	УчетВерсийКонфигурации.ВерсияКонфигурации = &ВерсияКонфигурации
	               |	И ВЫБОР
	               |			КОГДА &ТолькоТребующиеИзменения
	               |				ТОГДА НЕ УчетВерсийКонфигурации.ВыполненоИзменение
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УчетВерсийКонфигурации.ОбъектМетаданных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъектыМетаданныхКонфигураций.Ссылка КАК Ссылка,
	               |	ОбъектыМетаданныхКонфигураций.ВерсияДанных КАК ВерсияДанных,
	               |	ОбъектыМетаданныхКонфигураций.ПометкаУдаления КАК ПометкаУдаления,
	               |	ОбъектыМетаданныхКонфигураций.Предопределенный КАК Предопределенный,
	               |	ОбъектыМетаданныхКонфигураций.Владелец КАК Владелец,
	               |	ОбъектыМетаданныхКонфигураций.Код КАК Код,
	               |	ОбъектыМетаданныхКонфигураций.Наименование КАК Наименование,
	               |	ОбъектыМетаданныхКонфигураций.Актуальность КАК Актуальность,
	               |	ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных КАК ТипОбъектаМетаданных,
	               |	ВЫБОР
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.Справочник)
	               |			ТОГДА 1
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.Документ)
	               |			ТОГДА 2
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.РегистрСведений)
	               |			ТОГДА 3
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.РегистрНакопления)
	               |			ТОГДА 4
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.ОбщийМодуль)
	               |			ТОГДА 6
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.БизнесПроцесс)
	               |			ТОГДА 7
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.Задача)
	               |			ТОГДА 8
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.МодульУправляемогоРежима)
	               |				ИЛИ ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.МодульОбычногоРежима)
	               |			ТОГДА 9
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.ОбщаяКоманда)
	               |			ТОГДА 10
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.ОбщаяФорма)
	               |			ТОГДА 11
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.Отчет)
	               |			ТОГДА 12
	               |		КОГДА ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных = ЗНАЧЕНИЕ(Справочник.ТипОбъектаМетаданных.Обработка)
	               |			ТОГДА 13
	               |	КОНЕЦ КАК СостояниеТипОбъектаМетаданных,
	               |	ОбъектыМетаданныхКонфигураций.ТипОбъектаМетаданных.Код КАК КодТипаОбъектаМетаданных,
	               |	ОбъектыМетаданныхКонфигураций.Описание КАК Описание,
	               |	ВЫБОР
	               |		КОГДА ВТ_АнализДанны.ОбъектМетаданных ЕСТЬ NULL
	               |			ТОГДА 0
	               |		КОГДА ВТ_АнализДанны.ВыполненоИзменений = ВТ_АнализДанны.ВсегоЗаписей
	               |			ТОГДА 1
	               |		КОГДА ВТ_АнализДанны.ПроведеноАнализа = ВТ_АнализДанны.ВсегоЗаписей
	               |			ТОГДА 2
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СостояниеОбъекта
	               |ИЗ
	               |	Справочник.ОбъектыМетаданныхКонфигураций КАК ОбъектыМетаданныхКонфигураций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АнализДанны КАК ВТ_АнализДанны
	               |		ПО ОбъектыМетаданныхКонфигураций.Ссылка = ВТ_АнализДанны.ОбъектМетаданных
	               |ГДЕ
	               |	ОбъектыМетаданныхКонфигураций.ПометкаУдаления = ЛОЖЬ
	               |	И ОбъектыМетаданныхКонфигураций.Актуальность
	               |	И ОбъектыМетаданныхКонфигураций.Владелец = &Конфигурация";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("ВерсияКонфигурации", ВерсияКонфигурации);
	Запрос.УстановитьПараметр("ТолькоТребующиеИзменения", Ложь);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьПоследнейВерсиейИзмененийСервер(Конфигурация, ВерсияКонфигурации, Выборка.Ссылка, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

// Перенос информации из предыдущей версии конфигурации Объекта метаданных
Процедура ЗаполнитьПоследнейВерсиейИзмененийСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ОбъектМетаданных, Знач БезПризнаков = Ложь) Экспорт
	
	Если Конфигурация.Пустая()
		ИЛИ ВерсияКонфигурации.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписейУчетаВерсий = РегистрыСведений.УчетВерсийКонфигурации.СоздатьНаборЗаписей();
	НаборЗаписейУчетаВерсий.Отбор.Конфигурация.Установить(Конфигурация);
	НаборЗаписейУчетаВерсий.Отбор.ВерсияКонфигурации.Установить(ВерсияКонфигурации);
	НаборЗаписейУчетаВерсий.Отбор.ОбъектМетаданных.Установить(ОбъектМетаданных);
	
	НаборЗаписейУчетаВерсий.Прочитать();
	
	Если НЕ НаборЗаписейУчетаВерсий.Выбран() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаНабораЗаписей Из НаборЗаписейУчетаВерсий Цикл
		
		ДанныеПоследнейВерсии = РегистрыСведений.УчетВерсийКонфигурации.ПолучитьПоследнююВерсиюИзменений(ОбъектМетаданных,
				ВерсияКонфигурации, СтрокаНабораЗаписей.ТипМодуля);
		Если ДанныеПоследнейВерсии = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаНабораЗаписей, ДанныеПоследнейВерсии);
		
		СтрокаНабораЗаписей.ВерсияКонфигурации = ВерсияКонфигурации;
		
		Если БезПризнаков
			И НЕ ((НЕ СтрокаНабораЗаписей.ВыполненоИзменение)
				И СтрокаНабораЗаписей.ПроведенАнализИзменений) Тогда
			
			СтрокаНабораЗаписей.ПроведенАнализИзменений = Ложь;
			СтрокаНабораЗаписей.ДатаАнализаИзменений = "";
			СтрокаНабораЗаписей.ВыполненоИзменение = Ложь;
			СтрокаНабораЗаписей.ДатаВыполненияИзменений = "";
			
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписейУчетаВерсий.Записать();
	
КонецПроцедуры

// Возвращает параметры заполнения установки изменений ресурсов
//
// Параметры:
//  ИмяРесурсаИзменения	 - Строка - варианты: ПроведенАнализИзменений, ИзмененийНеТребуется, ВыполненоИзменение 
// 
// Возвращаемое значение:
//  Структура:
//  	* ИмяРесурсаИзменения - Строка - ПроведенАнализИзменений, ИзмененийНеТребуется, ВыполненоИзменение будет установлено Истина
//		* ИмяРесурсаДатыИзменения - Строка - ДатаАнализаИзменений, ДатаВыполненияИзменений или пустая строка
//		* ИменаРесурсовБулевоДляУстановкиЛожь - Строка - перечень ресурсов через запятую, которым надо установить Ложь (пример: ВыполненоИзменение)
//		* ИменаРесурсовБулевоДляУстановкиИстина - Строка - перечень ресурсов через запятую, которым надо установить Истина (пример: ПроведенАнализИзменений)
//		* ИменаРесурсовДатыДляУстановкиПустойДаты - Строка - перечень ресурсов через запятую, которым надо установить пустая дата (пример: ДатаВыполненияИзменений 
//
Функция ПараметрыЗаполненияУстановкиИзмененийРесурсов(ИмяРесурсаИзменения) Экспорт

	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ИмяРесурсаИзменения", ИмяРесурсаИзменения);
	ПараметрыЗаполнения.Вставить("ИмяРесурсаДатыИзменения", "");
	ПараметрыЗаполнения.Вставить("ИменаРесурсовБулевоДляУстановкиЛожь", "");
	ПараметрыЗаполнения.Вставить("ИменаРесурсовБулевоДляУстановкиИстина", "");
	ПараметрыЗаполнения.Вставить("ИменаРесурсовДатыДляУстановкиПустойДаты", "");
	
	Если ИмяРесурсаИзменения = "ПроведенАнализИзменений" Тогда
	    ПараметрыЗаполнения.ИмяРесурсаДатыИзменения = "ДатаАнализаИзменений";
		ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиЛожь = "ИзмененийНеТребуется,ВыполненоИзменение"; 
		ПараметрыЗаполнения.ИменаРесурсовДатыДляУстановкиПустойДаты = "ДатаВыполненияИзменений"; 
	ИначеЕсли ИмяРесурсаИзменения = "ИзмененийНеТребуется" Тогда
	    ПараметрыЗаполнения.ИмяРесурсаДатыИзменения = "ДатаАнализаИзменений";
		ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиЛожь = "ПроведенАнализИзменений,ВыполненоИзменение"; 
		ПараметрыЗаполнения.ИменаРесурсовДатыДляУстановкиПустойДаты = "ДатаВыполненияИзменений"; 
	ИначеЕсли ИмяРесурсаИзменения = "ВыполненоИзменение" Тогда
	    ПараметрыЗаполнения.ИмяРесурсаДатыИзменения = "ДатаВыполненияИзменений";
		ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиИстина = "ПроведенАнализИзменений"; 
		ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиЛожь = "ИзмененийНеТребуется"; 
	Иначе
		ТекстОшибки = НСтр("ru = 'Не заполнен обязательный параметр ИмяРесурсаИзменения'");
   	 	ВызватьИсключение(ТекстОшибки, КатегорияОшибки.ОшибкаКонфигурации);	
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;

КонецФункции

// Выполняет установку изменений по объектам метаданных
//
// Параметры:
//  Конфигурация		 - 	СправочникСсылка.Конфигурации
//  ВерсияКонфигурации	 - 	СправочникСсылка.ВерсииКонфигураций
//  ОбъектМетаданных	 - 	СправочникСсылка.ОбъектыМетаданныхКонфигураций
//  ПараметрыЗаполнения	 - 	Структура - см. ПараметрыЗаполненияУстановкиИзмененийРесурсов() 
//
Процедура УстановитьИзмененияПоОбъектамМетаданных(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ОбъектМетаданных, ПараметрыЗаполнения) Экспорт

	Если Конфигурация.Пустая()
		Или ВерсияКонфигурации.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	
	Набор = РегистрыСведений.УчетВерсийКонфигурации.СоздатьНаборЗаписей();
	Набор.Отбор.Конфигурация.Установить(Конфигурация);
	Набор.Отбор.ВерсияКонфигурации.Установить(ВерсияКонфигурации);
	Набор.Отбор.ОбъектМетаданных.Установить(ОбъектМетаданных);
	
	Набор.Прочитать();
	
	Если НЕ Набор.Выбран() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Набор Цикл
		
		ТекСтрока[ПараметрыЗаполнения.ИмяРесурсаИзменения] = Истина;
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.ИмяРесурсаДатыИзменения) Тогда
			ТекСтрока[ПараметрыЗаполнения.ИмяРесурсаДатыИзменения] = ТекущаяДатаСеанса();
		КонецЕсли;
		
		ПризнакиВЛожь = СтрРазделить(ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиЛожь, ",", Ложь);
		Для каждого ТекЗначение Из ПризнакиВЛожь Цикл
			ТекСтрока[ТекЗначение] = Ложь;	
		КонецЦикла;
		
		ПризнакиВИстина = СтрРазделить(ПараметрыЗаполнения.ИменаРесурсовБулевоДляУстановкиИстина, ",", Ложь);
		Для каждого ТекЗначение Из ПризнакиВИстина Цикл
			ТекСтрока[ТекЗначение] = Истина;	
		КонецЦикла;
		
		ДатыУстановитьПустыми = СтрРазделить(ПараметрыЗаполнения.ИменаРесурсовДатыДляУстановкиПустойДаты, ",", Ложь);
		Для каждого ТекЗначение Из ДатыУстановитьПустыми Цикл
			ТекСтрока[ТекЗначение] = '00010101';	
		КонецЦикла;
		
	КонецЦикла;
	
	Набор.Записать();
	
КонецПроцедуры

// Определяет тип модуля для версии объекта на основе приоритетов учета версий конфигурации.
//
// Параметры:
//  ОбъектМетаданных - СправочникСсылка.ОбъектыМетаданныхКонфигураций	 - Ссылка на объект метаданных, для которого определяется тип модуля.
// 
// Возвращаемое значение:
//  СправочникСсылка.ТипыМодулей - Возвращает тип модуля для указанного объекта.
//
Функция ОпределитьТипМодуляДляВерсииОбъекта(Знач ОбъектМетаданных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.ТипМодуля КАК ТипМодуля,
		|	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетВерсийКонфигурации.ТипМодуля, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Приоритет,
		|	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Справочник.ОбъектыМетаданныхКонфигураций.ИзмененияПоУмолчанию КАК ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетВерсийКонфигурации КАК УчетВерсийКонфигурации
		|		ПО ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка = УчетВерсийКонфигурации.ОбъектМетаданных
		|			И ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.ТипМодуля = УчетВерсийКонфигурации.ТипМодуля
		|ГДЕ
		|	ОбъектыМетаданныхКонфигурацийИзмененияПоУмолчанию.Ссылка = &ОбъектМетаданных
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.ТипМодуля;
		
	КонецЕсли;
	
	Возврат Справочники.ТипыМодулей.ПустаяСсылка();
	
КонецФункции

#КонецОбласти

#КонецЕсли
