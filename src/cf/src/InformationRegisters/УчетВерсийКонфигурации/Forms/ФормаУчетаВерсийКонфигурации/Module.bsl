#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборСписковНачальный();
	
	ЭтотОбъект.АдресКартинки = ЗначенияРеквизитаКартинки(Конфигурация, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТекстПредупреждения = НСтр("ru = 'Закрыть форму Учета версий конфигурации?'");
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(ЭтотОбъект, 
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, "ЗакрытьФормуБезПодтверждения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УчетВерсийКонфигурации"
		ИЛИ ИмяСобытия = "Обновить_СписокОбъектовМетаданных"
		ИЛИ ИмяСобытия = "Запись_ВерсииКонфигурации" Тогда
		Элементы.СписокОбъектовМетаданных.Обновить();
		ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонфигурацияПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("Конфигурация", Конфигурация);
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("Конфигурация", Конфигурация);
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("ВерсияКонфигурации", ВерсияКонфигурации);
	
	ЭтотОбъект.АдресКартинки = ЗначенияРеквизитаКартинки(Конфигурация, УникальныйИдентификатор);
	
	ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("ВерсияКонфигураций", ВерсияКонфигурации);
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("ВерсияКонфигурации", ВерсияКонфигурации);
	
	Элементы.СписокОбъектовМетаданных.Обновить();
	ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОбъектовМетаданных

&НаКлиенте
Процедура СписокОбъектовМетаданныхПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("УстановитьОтборПоСтрокеОбъектаМетаданных", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовМетаданныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		
		Отказ = Истина;
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец", Конфигурация);
		ЗначенияЗаполнения.Вставить("Актуальность", Истина);
		
		Если Элементы.СписокОбъектовМетаданных.ТекущиеДанные <> Неопределено Тогда
			Если Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Свойство("ТипОбъектаМетаданных") Тогда
				ЗначенияЗаполнения.Вставить("ТипОбъектаМетаданных", Элементы.СписокОбъектовМетаданных.ТекущиеДанные.ТипОбъектаМетаданных);
			Иначе
				ЗначенияЗаполнения.Вставить("ТипОбъектаМетаданных", ТипОбъектаМетаданных(Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Ссылка));
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.ОбъектыМетаданныхКонфигураций.Форма.ФормаЭлемента", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрПоОбъектамТребующимИзменения(Команда)
	
	Если ВключенФильтрПоОбъектамТребующимИзменения Тогда
		Элементы.ФильтрПоОбъектамТребующимИзменения.Картинка = БиблиотекаКартинок.ВосклицательныйЗнакСерый;
	Иначе
		Элементы.ФильтрПоОбъектамТребующимИзменения.Картинка = БиблиотекаКартинок.ВосклицательныйЗнакСерыйОтмена;
	КонецЕсли;
	
	ВключенФильтрПоОбъектамТребующимИзменения = НЕ ВключенФильтрПоОбъектамТребующимИзменения;
	
	УстановитьОтборСписковНачальный();
	
	УстановитьОтборПоСтрокеОбъектаМетаданных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		
		Отказ = Истина;
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Конфигурация", Конфигурация);
		ЗначенияЗаполнения.Вставить("ВерсияКонфигурации", ВерсияКонфигурации);
		
		Если Элементы.СписокОбъектовМетаданных.ТекущиеДанные <> Неопределено
			И Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Свойство("Ссылка") Тогда
			ТекущееЗначениеОМ = Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Ссылка;
		Иначе
			ТекущееЗначениеОМ = ПредопределенноеЗначение("Справочник.ОбъектыМетаданныхКонфигураций.ПустаяСсылка");
		КонецЕсли;
		ЗначенияЗаполнения.Вставить("ОбъектМетаданных", ТекущееЗначениеОМ);
		ЗначенияЗаполнения.Вставить("ТипМодуля", ОпределитьТипМодуляДляВерсииОбъекта(ТекущееЗначениеОМ));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("РегистрСведений.УчетВерсийКонфигурации.ФормаЗаписи", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

// Команды

&НаКлиенте
Процедура ИмпортМодулейКонфигурации(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Конфигурация", Конфигурация);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.УчетВерсийКонфигурации.Форма.ИмпортИзМодулей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНовуюВерсиюКонфигурации(Команда)
	
	Если ВерсияКонфигурации.Пустая()
		ИЛИ Конфигурация.Пустая() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Создайте/выберите конфигурацию и версию конфигурации для заполнения.'"), , "ВерсияКонфигурации");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьНовуюВерсиюКонфигурацииЗавершение", ЭтотОбъект);
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Все данные по конфигурации %1 будут заменены.'"), Строка(Конфигурация));
	ПоказатьВопрос(ОписаниеОповещения, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНовуюВерсиюКонфигурацииЗавершение(РезультатВопроса, Параметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНовуюВерсиюКонфигурацииСервер(ВерсияКонфигурации);
	
	Элементы.СписокОбъектовМетаданных.Обновить();
	Элементы.Список.Обновить();
	ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	
КонецПроцедуры // ЗаполнитьНовуюВерсиюКонфигурацииЗавершение()

&НаКлиенте
Процедура ЗаполнитьНовуюВерсиюКонфигурацииПоСтаройВерсии(Команда)
	
	Если ВерсияКонфигурации.Пустая()
		ИЛИ Конфигурация.Пустая() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Создайте/выберите конфигурацию и версию конфигурации для заполнения.'"), , "ВерсияКонфигурации");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьНовуюВерсиюКонфигурацииПоСтаройВерсииЗавершение", ЭтотОбъект);
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Все данные по конфигурации %1 будут заменены.'"), Строка(Конфигурация));
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНовуюВерсиюКонфигурацииПоСтаройВерсииЗавершение(РезультатВопроса, Параметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНовуюВерсиюКонфигурацииСервер(ВерсияКонфигурации, Истина);
	
	Элементы.СписокОбъектовМетаданных.Обновить();
	Элементы.Список.Обновить();
	ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроведенАнализИзмененийВсех(Команда)
	
	Если Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.СписокОбъектовМетаданных.ТекущаяСтрока) = Тип("СправочникСсылка.ОбъектыМетаданныхКонфигураций") Тогда
		
		ТекущееЗначениеОМ = Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Ссылка;
		
		//
		ПроведенАнализИзмененийВсехСервер(Конфигурация, ВерсияКонфигурации, ТекущееЗначениеОМ);
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаИзмененийНеТребуетсяВсех(Команда)
	
	Если Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.СписокОбъектовМетаданных.ТекущаяСтрока) = Тип("СправочникСсылка.ОбъектыМетаданныхКонфигураций") Тогда
		
		Для Каждого СтрокаДанных Из Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки Цикл
			
			УстановкаИзмененийНеТребуетсяВсехПоОМ(Конфигурация, ВерсияКонфигурации, СтрокаДанных);
			
		КонецЦикла;
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
		
	ИначеЕсли Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено Тогда
		
		УстановкаИзмененийНеТребуетсяВсехПоТипуОбъектаСервер(Конфигурация, ВерсияКонфигурации, Элементы.СписокОбъектовМетаданных.ТекущаяСтрока.Ключ);
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
		
	Иначе
		// без обработки
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаВыполненоИзменениеВсех(Команда)
	
	Если Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.СписокОбъектовМетаданных.ТекущаяСтрока) = Тип("СправочникСсылка.ОбъектыМетаданныхКонфигураций") Тогда
		
		Для Каждого СтрокаДанных Из Элементы.СписокОбъектовМетаданных.ВыделенныеСтроки Цикл
			
			УстановкаВыполненоИзменениеВсехСервер(Конфигурация, ВерсияКонфигурации, СтрокаДанных);
			
		КонецЦикла;
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
		
	ИначеЕсли Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено Тогда
		
		УстановкаВыполненоИзменениеВсехПоТипуОбъектаСервер(Конфигурация, ВерсияКонфигурации, Элементы.СписокОбъектовМетаданных.ТекущаяСтрока.Ключ);
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
	Иначе
		// без обработки
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоследнейВерсиейИзменений(Команда)
	
	Если Элементы.СписокОбъектовМетаданных.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.СписокОбъектовМетаданных.ТекущаяСтрока) = Тип("СправочникСсылка.ОбъектыМетаданныхКонфигураций") Тогда
		
		ТекущееЗначениеОМ = Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Ссылка;
		
		//
		ЗаполнитьПоследнейВерсиейИзмененийСервер(Конфигурация, ВерсияКонфигурации, ТекущееЗначениеОМ);
		
		Элементы.Список.Обновить();
		Оповестить("Запись_УчетВерсийКонфигурации");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПоследнейВерсиейИзмененийСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ТекущееЗначениеОМ)

	РегистрыСведений.УчетВерсийКонфигурации.ЗаполнитьПоследнейВерсиейИзмененийСервер(Конфигурация, ВерсияКонфигурации, ТекущееЗначениеОМ);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьНеактуальныеОМ(Команда)
	
	Если НЕ ВключенФильтрПоНеактуальнымОбъектам Тогда
		Элементы.СписокОбъектовМетаданныхКонтекстноеМенюПоказатьНеактуальныеОМ.Картинка = БиблиотекаКартинок.Информация;
	Иначе
		Элементы.СписокОбъектовМетаданныхКонтекстноеМенюПоказатьНеактуальныеОМ.Картинка = БиблиотекаКартинок.ИнформацияПоНедоступнымПолям;
	КонецЕсли;
	
	ВключенФильтрПоНеактуальнымОбъектам = НЕ ВключенФильтрПоНеактуальнымОбъектам;
	
	УстановитьОтборСписковНачальный();
	
	УстановитьОтборПоСтрокеОбъектаМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОписаниеВерсии(Команда)
	
	ПоказатьЗначение( , ВерсияКонфигурации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//////////////////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Установка отбора Списка
&НаКлиенте
Процедура УстановитьОтборСписковНачальный()
	
	// Список основной
	Список.Параметры.УстановитьЗначениеПараметра("Конфигурация", Конфигурация);
	Список.Параметры.УстановитьЗначениеПараметра("ОбъектМетаданных", ПредопределенноеЗначение("Справочник.ОбъектыМетаданныхКонфигураций.ПустаяСсылка"));
	Список.Параметры.УстановитьЗначениеПараметра("ВерсияКонфигураций", ВерсияКонфигурации);
	Список.Параметры.УстановитьЗначениеПараметра("ТипОбъектаМетаданных", Неопределено);
	
	
	// Список объектов метаданных
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("Конфигурация", Конфигурация);
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("ВерсияКонфигурации", ВерсияКонфигурации);
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("Актуальность", НЕ ВключенФильтрПоНеактуальнымОбъектам);
	
	СписокОбъектовМетаданных.Параметры.УстановитьЗначениеПараметра("ТолькоТребующиеИзменения", ВключенФильтрПоОбъектамТребующимИзменения);
	
	ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте();
	
КонецПроцедуры

// Установка отбора Списка объектов метаданных
&НаКлиенте
Процедура УстановитьОтборПоСтрокеОбъектаМетаданных()
	
	Если Элементы.СписокОбъектовМетаданных.ТекущиеДанные <> Неопределено Тогда
		
		Если Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Свойство("Ссылка") Тогда
			ТекущееЗначение = Элементы.СписокОбъектовМетаданных.ТекущиеДанные.Ссылка;
			Список.Параметры.УстановитьЗначениеПараметра("ОбъектМетаданных", ТекущееЗначение);
			Список.Параметры.УстановитьЗначениеПараметра("ТипОбъектаМетаданных", ПредопределенноеЗначение("Справочник.ТипОбъектаМетаданных.ПустаяСсылка"));
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("ТипОбъектаМетаданных", Элементы.СписокОбъектовМетаданных.ТекущаяСтрока.Ключ);
			Список.Параметры.УстановитьЗначениеПараметра("ОбъектМетаданных", ПредопределенноеЗначение("Справочник.ОбъектыМетаданныхКонфигураций.ПустаяСсылка"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСводкуСтатистикиОбъектовМетаданныхНаКлиенте()
	
	ДанныеПоСтатистикеОбъектовМетаданных = СтатистикаОбъектовМетаданныхНаСервере();
	
	Элементы.ДекорацияОбщееЧислоОМ.Заголовок = ДанныеПоСтатистикеОбъектовМетаданных.ОбщееЧислоОМ;
	Элементы.ДекорацияЧислоНеПроведенАнализ.Заголовок = ДанныеПоСтатистикеОбъектовМетаданных.НеПроведенАнализ;
	Элементы.ДекорацияЧислоНеВыполненоОбъектов.Заголовок = ДанныеПоСтатистикеОбъектовМетаданных.НеВыполненоОбъектов;
	
	Элементы.ДекорацияПроцентВыполнения.Заголовок = ДанныеПоСтатистикеОбъектовМетаданных.ПроцентВыполнения;
	
	Если ДанныеПоСтатистикеОбъектовМетаданных.ЕстьОписаниеВерсии Тогда
		Элементы.ОткрытьОписаниеВерсии.Заголовок = НСтр("ru = '--Открыть описание версии--'");
		Элементы.ОткрытьОписаниеВерсии.Картинка = БиблиотекаКартинок.Комментарий;
		Элементы.ОткрытьОписаниеВерсии.Ширина = 25;
	Иначе
		Элементы.ОткрытьОписаниеВерсии.Заголовок = НСтр("ru = '--Нет описания версии--'");
		Элементы.ОткрытьОписаниеВерсии.Картинка = Новый Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтатистикаОбъектовМетаданныхНаСервере()

	ДанныеПоСтатистикеОбъектовМетаданных = РегистрыСведений.УчетВерсийКонфигурации.СтатистикаОбъектовМетаданных(Конфигурация, ВерсияКонфигурации);
	
	Возврат ДанныеПоСтатистикеОбъектовМетаданных; 

КонецФункции 

// Заполнение новой версии конфигурации на основании актуальных данных из объектов метаданных
&НаСервереБезКонтекста
Процедура ЗаполнитьНовуюВерсиюКонфигурацииСервер(Знач НоваяВерсия, Знач ПоследнейВерсиейИзмененияДляВсех = Ложь)
	
	РегистрыСведений.УчетВерсийКонфигурации.ЗаполнитьНовуюВерсиюКонфигурации(НоваяВерсия, ПоследнейВерсиейИзмененияДляВсех);
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Предварительное заполнение версии %1 завершено.'"), Строка(НоваяВерсия));
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроведенАнализИзмененийВсехСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ОбъектМетаданных)
	
	ПараметрыЗаполнения = РегистрыСведений.УчетВерсийКонфигурации.ПараметрыЗаполненияУстановкиИзмененийРесурсов("ПроведенАнализИзменений");
	
	РегистрыСведений.УчетВерсийКонфигурации.УстановитьИзмененияПоОбъектамМетаданных(Конфигурация, ВерсияКонфигурации, ОбъектМетаданных, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановкаИзмененийНеТребуетсяВсехПоОМ(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ОбъектМетаданных)
	
	ПараметрыЗаполнения = РегистрыСведений.УчетВерсийКонфигурации.ПараметрыЗаполненияУстановкиИзмененийРесурсов("ИзмененийНеТребуется");
	
	РегистрыСведений.УчетВерсийКонфигурации.УстановитьИзмененияПоОбъектамМетаданных(Конфигурация, ВерсияКонфигурации, ОбъектМетаданных, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановкаВыполненоИзменениеВсехСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ОбъектМетаданных)
	
	ПараметрыЗаполнения = РегистрыСведений.УчетВерсийКонфигурации.ПараметрыЗаполненияУстановкиИзмененийРесурсов("ВыполненоИзменение");
	
	РегистрыСведений.УчетВерсийКонфигурации.УстановитьИзмененияПоОбъектамМетаданных(Конфигурация, ВерсияКонфигурации, ОбъектМетаданных, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановкаИзмененийНеТребуетсяВсехПоТипуОбъектаСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ТипОбъектаОМ)
	
	Если ТипЗнч(ТипОбъектаОМ) <> Тип("СправочникСсылка.ТипОбъектаМетаданных") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("ТипОбъектаМетаданных", ТипОбъектаОМ);
	
	Выборка = Справочники.ОбъектыМетаданныхКонфигураций.Выбрать( , , ПараметрыОтбора);
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления
			Или (Не Выборка.Актуальность) Тогда
			Продолжить;
		КонецЕсли;
		
		УстановкаИзмененийНеТребуетсяВсехПоОМ(Конфигурация, ВерсияКонфигурации, Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановкаВыполненоИзменениеВсехПоТипуОбъектаСервер(Знач Конфигурация, Знач ВерсияКонфигурации, Знач ТипОбъектаОМ)
	
	Если ТипЗнч(ТипОбъектаОМ) <> Тип("СправочникСсылка.ТипОбъектаМетаданных") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("ТипОбъектаМетаданных", ТипОбъектаОМ);
	
	Выборка = Справочники.ОбъектыМетаданныхКонфигураций.Выбрать( , , ПараметрыОтбора);
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления
			Или (Не Выборка.Актуальность) Тогда
			Продолжить;
		КонецЕсли;
		
		УстановкаВыполненоИзменениеВсехСервер(Конфигурация, ВерсияКонфигурации, Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ТипОбъектаМетаданных(Знач ОбъектМетаданных)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектМетаданных, "ТипОбъектаМетаданных");
	
КонецФункции

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(Знач ФайлКартинки, Знач ИдентификаторФормы)
	
	// BSLLS:SetPrivilegedMode-off
	УстановитьПривилегированныйРежим(Истина);
	// BSLLS:SetPrivilegedMode-on
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначенияРеквизитаКартинки(Знач Конфигурация, Знач ИдентификаторФормы)
	
	// Установка значения реквизита АдресКартинки.
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Возврат "";
	КонецЕсли;
	
	ФайлКартинки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Конфигурация, "ФайлКартинки");
	
	Если ЗначениеЗаполнено(ФайлКартинки) Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы);
	Иначе
		АдресКартинки = НавигационнаяСсылкаКартинки(БиблиотекаКартинок.КартинкаУчетаВерсийКонфигураций, ИдентификаторФормы);
	КонецЕсли;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьТипМодуляДляВерсииОбъекта(Знач ОбъектМетаданных)
	
	Возврат РегистрыСведений.УчетВерсийКонфигурации.ОпределитьТипМодуляДляВерсииОбъекта(ОбъектМетаданных);
	
КонецФункции

&НаКлиенте
Процедура СброситьФактТестированияОбъектов(Команда)
	
	СброситьФактТестированияОбъектовНаСервере(Конфигурация);
	Элементы.СписокОбъектовМетаданных.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СброситьФактТестированияОбъектовНаСервере(Знач Конфигурация)
	
	Документы.ТестированиеОбъектовМетаданных.СброситьФактТестированияОбъектовМетаданных(Конфигурация);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьШаблонДляРазработчика(Команда)
	
	ИмяПользователя = "";
	
	Оповещение = Новый ОписаниеОповещения("СформироватьШаблонДляРазработчикаЗавершение", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, ИмяПользователя, НСтр("ru = 'Введите имя разработчика для нового шаблона st:'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьШаблонДляРазработчикаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяПользователя = Результат;
	
	ФайлДанных = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ФайлДанных.Фильтр = "Файл шаблона 1С (*.st)|*.st";
	ФайлДанных.Заголовок = НСтр("ru = 'Выберите или создайте новый файл шаблона'");
	
	Если НЕ ФайлДанных.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстовыйФайла = Новый ТекстовыйДокумент;
	
	ТекстовыйФайла.УстановитьТекст(ТекстИзШаблонаРазработчика(ИмяПользователя));
	ТекстовыйФайла.Записать(ФайлДанных.ПолноеИмяФайла);
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Файл шаблона пользователя сформирован.'"));
	
КонецПроцедуры // СформироватьШаблонДляРазработчикаЗавершение()

&НаСервереБезКонтекста
Функция ТекстИзШаблонаРазработчика(Знач ИмяПользователя)
	
	ТекстовыйДокумент = РегистрыСведений.УчетВерсийКонфигурации.ПолучитьМакет("ШаблонРазработчика_st");
	ТекстДанных = ТекстовыйДокумент.ПолучитьТекст();
	
	ТекстДанных = СтрЗаменить(ТекстДанных, "ИмяРазработчика", ИмяПользователя);
	
	Возврат ТекстДанных;
	
КонецФункции

#КонецОбласти