#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОбновитьТекущееСостояниеЗадачи(Задача,Состояние,СрокСостояния = '00010101',ПричинаСостояния = "",ПринудительноЗафиксироватьВИстории = Ложь, СтатусОбработки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	МенеджерЗаписи = РегистрыСведений.ТекущиеСостоянияЗадач.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Задача = Задача;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран()
		И Состояние = МенеджерЗаписи.Состояние Тогда
		
		Если СтатусОбработки = МенеджерЗаписи.СтатусОбработки
			Или СтатусОбработки = Неопределено Тогда
			// Выход в случае если старое состояние равно новому.
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	МенеджерЗаписи.Задача = Задача;
	
	МенеджерЗаписи.Состояние = Состояние;
	МенеджерЗаписи.СтатусОбработки = СтатусОбработки;
	МенеджерЗаписи.СрокСостояния = СрокСостояния;
	МенеджерЗаписи.ПричинаСостояния = ПричинаСостояния;
	МенеджерЗаписи.Установил = Пользователи.ТекущийПользователь();
	МенеджерЗаписи.ДатаУстановки = ТекущаяДата();
	
	МенеджерЗаписи.Записать(Истина);
	
	// Фиксация прочих изменений состояний в регистре истории.
	Если (Состояние <> Справочники.СостоянияЗадач.ВРаботе 
		И Состояние <> Справочники.СостоянияЗадач.Выполнена
		И Состояние <> Справочники.СостоянияЗадач.ОтмененоВыполнение)
		Или ПринудительноЗафиксироватьВИстории Тогда
	
		Комментарий = СтрШаблон(НСтр("ru = 'Изменение состояния: %1.'"),Состояние);
		Если ЗначениеЗаполнено(СрокСостояния) Тогда
			Комментарий = Комментарий + СтрШаблон(НСтр("ru = ' Установлен срок действия состояния до: %1.'"), СрокСостояния);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПричинаСостояния) Тогда
			Комментарий = Комментарий + СтрШаблон(НСтр("ru = ' Причина: %1'"),ПричинаСостояния);
		КонецЕсли;
		
		ИсторияСобытийЗадачВызовСервера.ЗаписатьСобытие(
			Задача, 
			Перечисления.ВидыСобытийЗадач.ИзмененоСостояниеДругое, 
			Комментарий);
		
	КонецЕсли;
	
	Если Состояние = Справочники.СостоянияЗадач.НаБизнесТестировании
		Или Состояние = Справочники.СостоянияЗадач.Выполнена
		Или Состояние = Справочники.СостоянияЗадач.ОтмененоВыполнение Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадачиВРаботе.Исполнитель КАК Исполнитель
		|ИЗ
		|	РегистрСведений.ЗадачиВРаботе КАК ЗадачиВРаботе
		|ГДЕ
		|	ЗадачиВРаботе.Задача = &Задача";
		
		Запрос.УстановитьПараметр("Задача", Задача);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		ТекстСообщения = НСтр("ru = 'Автоматическая приостановка по состоянию задачи ""%1"".'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Состояние);
		
		Пока Выборка.Следующий() Цикл
			
			РегистрыСведений.ЗадачиВРаботе.ПриостановитьРаботуСЗадачей(Выборка.Исполнитель, Задача, ТекстСообщения);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеПоТекущемуСостояниюЗадачи(Задача) Экспорт
	
	РезультатТекущееСостояние = Новый Структура;
	РезультатТекущееСостояние.Вставить("Задача",Задача);
	РезультатТекущееСостояние.Вставить("Состояние",Справочники.СостоянияЗадач.Зарегистрирована);
	РезультатТекущееСостояние.Вставить("СтатусОбработки",Справочники.СтатусыОбработкиЗадач.ПустаяСсылка());
	РезультатТекущееСостояние.Вставить("СрокСостояния",'00010101');
	РезультатТекущееСостояние.Вставить("ПричинаСостояния","");
	РезультатТекущееСостояние.Вставить("Установил",Справочники.Пользователи.ПустаяСсылка());
	РезультатТекущееСостояние.Вставить("ДатаУстановки",'00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ТекущиеСостоянияЗадач.Задача КАК Задача,
	|	ТекущиеСостоянияЗадач.Состояние КАК Состояние,
	|	ТекущиеСостоянияЗадач.СтатусОбработки КАК СтатусОбработки,
	|	ТекущиеСостоянияЗадач.СрокСостояния КАК СрокСостояния,
	|	ТекущиеСостоянияЗадач.ПричинаСостояния КАК ПричинаСостояния,
	|	ТекущиеСостоянияЗадач.Установил КАК Установил,
	|	ТекущиеСостоянияЗадач.ДатаУстановки КАК ДатаУстановки
	|ИЗ
	|	РегистрСведений.ТекущиеСостоянияЗадач КАК ТекущиеСостоянияЗадач
	|ГДЕ
	|	ТекущиеСостоянияЗадач.Задача = &Задача";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		ЗаполнитьЗначенияСвойств(РезультатТекущееСостояние,Выборка);
	
	КонецЕсли;
	
	Возврат РезультатТекущееСостояние;

КонецФункции

#КонецОбласти

#КонецЕсли
