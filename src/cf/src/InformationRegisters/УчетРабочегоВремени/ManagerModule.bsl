
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Фиксиурет потраченное время по задаче
//
// Параметры:
//  Исполнитель		 - СправочникСсылка.Пользователи 
//  Задача			 - ЗадачаСсылка.ЗадачиПользователя 
//  ДатаНачала		 - 	 - 
//  ДатаОкончания	 - 	 - 
//  ТипРаботы		 - ПеречислениеСсылка.ТипыРаботПоЗадачам - необязательно наличие 
//  Комментарий		 - Строка - необязательно наличие
//
Процедура ЗафиксироватьПотраченноеВремяПоЗадаче(Исполнитель, Задача, ДатаНачала, ДатаОкончания, Знач ТипРаботы = Неопределено, Комментарий = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Исполнитель) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипРаботы = Неопределено Тогда
		
		ТипРаботы = Перечисления.ТипыРаботПоЗадачам.ПустаяСсылка();
		
	КонецЕсли;
	ОписаниеЗаписи = Новый Структура();
	ОписаниеЗаписи.Вставить("Исполнитель", Исполнитель);
	ОписаниеЗаписи.Вставить("Задача", Задача);
	ОписаниеЗаписи.Вставить("ТипРаботы", ТипРаботы);
	
	ЗатраченноеВремя = ПланированиеЗадачСервер.ЗатраченноеВремяНаРаботу(Исполнитель, ДатаНачала, ДатаОкончания);
	
	
	НачатьТранзакцию();
	
	Для каждого КлючИЗначение Из ЗатраченноеВремя Цикл
		
		ОписаниеЗаписи.Вставить("День", НачалоДня(КлючИЗначение.Ключ));
		ОписаниеЗаписи.Вставить("Месяц", НачалоМесяца(КлючИЗначение.Ключ));
		
		ЗаписьПоУчетуВремени = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьПоУчетуВремени, ОписаниеЗаписи);
		ЗаписьПоУчетуВремени.Прочитать();
		
		
		Если Не ЗаписьПоУчетуВремени.Выбран() Тогда
			
			ЗаполнитьЗначенияСвойств(ЗаписьПоУчетуВремени, ОписаниеЗаписи);
		Иначе
			// очищаем старую запись.
			ЗаписьПоУчетуВремени.Удалить();
			
			ЗаписьПоУчетуВремени = СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ЗаписьПоУчетуВремени, ОписаниеЗаписи);

		КонецЕсли;
		
		ЗаписьПоУчетуВремени.Затрачено = ЗаписьПоУчетуВремени.Затрачено + КлючИЗначение.Значение;
		ЗаписьПоУчетуВремени.Комментарий = СокрЛП(ЗаписьПоУчетуВремени.Комментарий + Символы.ПС + Комментарий);
		ЗаписьПоУчетуВремени.Записать();
		
		// #ХронометражЗадач
		// Фиксация данных в регистре затраченного времени. 
		// На текущий момент регистр ЗатраченноеВремяПоЗадачам должен быть синхронизирован с регистром УчетРабочегоВремени, в случае если включено Планирование. 
		ПараметрыДляЗатраченногоВремени = Новый Структура;
		ПараметрыДляЗатраченногоВремени.Вставить("Объект", Задача);
		ПараметрыДляЗатраченногоВремени.Вставить("ДатаОтчета", НачалоДня(КлючИЗначение.Ключ));
		ПараметрыДляЗатраченногоВремени.Вставить("ВидРаботы", Справочники.ВидыРабот.РаботаПоЗадаче);
		ПараметрыДляЗатраченногоВремени.Вставить("ДлительностьРаботы", ЗаписьПоУчетуВремени.Затрачено);
		ПараметрыДляЗатраченногоВремени.Вставить("ТекущийПользователь", Исполнитель);
		
		РаботаСЗадачами.ОбновитьДанныеХронометражаВРегистре(ПараметрыДляЗатраченногоВремени);
		// Конец #ХронометражЗадач
		
	КонецЦикла;
	
	ПланированиеЗадачСервер.ОбновитьСведенияОЗадаче(ОписаниеЗаписи.Исполнитель, ОписаниеЗаписи.Задача);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
