
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет запись в историю сообщений чат-бота телеграм
//
// Параметры:
//  ОсновныеПараметры - Структура - содержит свойства обязательных параметров:
//		* ЧатБот - СправочникСсылка.ТелеграмБоты
//		* IDЧата
//		* Статус - ПеречислениеСсылка.СтатусСообщенийЧатБота
//		* ТипСообщения - ПеречислениеСсылка.ТипыСообщенийЧатБота
//		* СообщениеТекст
//		* СообщениеДвоичныеДанные - ДвоичныеДанные,Неопределено
//		* СообщениеИмяФайла - Строка
//		* Клавиатура - Строка,Неопределено
//	ДополнительныеПараметры - Структура - может содержать свойства:
//		* Внешние_Период 
//		* Внешние_IDСообщения 
//		* УстановитьОжиданиеОтвета 
//		* ЛогинПользователя - Строка 
//		* ПользовательСообщения - СправочникСсылка.Пользователи - заполнено, если ранее был в настройках определен 
//		* Пересланное - Булево - Истина, если сообщение переслали 
//		* Пересланное_Период 
//		* Пересланное_IDЧата 
//		* Пересланное_UserName 
// 
// Возвращаемое значение:
//  Структура - см. структуру регистра сведений "СообщенияЧатБота"
//
Функция ДобавитьЗаписьВИсторию(ОсновныеПараметры, ДополнительныеПараметры = Неопределено) Экспорт
				
	// Инициация базового заполнения доп.параметров в случае если ничего не передавали.
	ДополнительныеПараметры = ?(ДополнительныеПараметры = Неопределено, Новый Структура, ДополнительныеПараметры);
	ДопПараметрыДляОбработки = Новый Структура;
	ДопПараметрыДляОбработки.Вставить("Внешние_Период", Неопределено);
	ДопПараметрыДляОбработки.Вставить("Внешние_IDСообщения", Неопределено);
	ДопПараметрыДляОбработки.Вставить("УстановитьОжиданиеОтвета", Ложь);
	ДопПараметрыДляОбработки.Вставить("ЛогинПользователя", "");
	ДопПараметрыДляОбработки.Вставить("ПользовательСообщения", Неопределено);
	ДопПараметрыДляОбработки.Вставить("Пересланное", Неопределено);
	ДопПараметрыДляОбработки.Вставить("Пересланное_Период", Неопределено);
	ДопПараметрыДляОбработки.Вставить("Пересланное_IDЧата", Неопределено);
	ДопПараметрыДляОбработки.Вставить("Пересланное_UserName", Неопределено);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ДопПараметрыДляОбработки, ДополнительныеПараметры, Истина);
	
	Внешние_Период = ДопПараметрыДляОбработки.Внешние_Период; 
	Внешние_IDСообщения = ДопПараметрыДляОбработки.Внешние_IDСообщения; 
	УстановитьОжиданиеОтвета = ДопПараметрыДляОбработки.УстановитьОжиданиеОтвета; 
	ЛогинПользователя = ДопПараметрыДляОбработки.ЛогинПользователя; 
	ПользовательСообщения = ДопПараметрыДляОбработки.ПользовательСообщения; 
	Пересланное = ДопПараметрыДляОбработки.Пересланное; 
	Пересланное_Период = ДопПараметрыДляОбработки.Пересланное_Период; 
	Пересланное_IDЧата = ДопПараметрыДляОбработки.Пересланное_IDЧата; 
	Пересланное_UserName = ДопПараметрыДляОбработки.Пересланное_UserName; 
				
	// Добавление записи в регистр				
	МенеджерЗаписи = РегистрыСведений.СообщенияЧатБота.СоздатьМенеджерЗаписи();
	Период = ТекущаяДатаСеанса();
	
	ЗаписиБезНаложения = Ложь;
	Пока ЗаписиБезНаложения = Ложь Цикл
		МенеджерЗаписи.Период = Период;
		МенеджерЗаписи.ЧатБот = ОсновныеПараметры.ЧатБот;
		МенеджерЗаписи.IDЧата = ОсновныеПараметры.IDЧата;		
		МенеджерЗаписи.Прочитать();
		ЗаписиБезНаложения = НЕ МенеджерЗаписи.Выбран();
		Если ЗаписиБезНаложения = Ложь Тогда
			Период = Период + 1;
		КонецЕсли;
	КонецЦикла;
	
	МенеджерЗаписи.Период				= Период;
	МенеджерЗаписи.ЧатБот				= ОсновныеПараметры.ЧатБот;
	МенеджерЗаписи.IDЧата	 			= ОсновныеПараметры.IDЧата;
	
	МенеджерЗаписи.Статус			 	= ОсновныеПараметры.Статус;
	МенеджерЗаписи.ТипСообщения			= ОсновныеПараметры.ТипСообщения;
	МенеджерЗаписи.Сообщение			= ОсновныеПараметры.СообщениеТекст;
	МенеджерЗаписи.СообщениеХранимыйФайл= ?(ОсновныеПараметры.СообщениеДвоичныеДанные <> Неопределено, Новый ХранилищеЗначения(ОсновныеПараметры.СообщениеДвоичныеДанные, Новый СжатиеДанных(0)), Неопределено);
	МенеджерЗаписи.ИмяХранимогоФайла	= ?(ОсновныеПараметры.СообщениеДвоичныеДанные <> Неопределено, 
												?(ЗначениеЗаполнено(ОсновныеПараметры.СообщениеИмяФайла), ОсновныеПараметры.СообщениеИмяФайла, СгенерироватьИмяФайлаПоТипуСообщения(ОсновныеПараметры.ТипСообщения)),
												Неопределено);
	МенеджерЗаписи.ДанныеКлавиатуры		= ОсновныеПараметры.Клавиатура;
	
	МенеджерЗаписи.IDЗаписи				 = Новый УникальныйИдентификатор;
	МенеджерЗаписи.ПериодUNIX			 = ТекущаяУниверсальнаяДатаВМиллисекундах();
	МенеджерЗаписи.ПользовательСообщения = ПользовательСообщения;
	МенеджерЗаписи.ЛогинПользователя	 = ЛогинПользователя;
	
	МенеджерЗаписи.Внешние_Период		= Внешние_Период;
	МенеджерЗаписи.Внешние_IDСообщения	= Внешние_IDСообщения;
	МенеджерЗаписи.Пересланное			= Пересланное;
	МенеджерЗаписи.Пересланное_Период	= Пересланное_Период;
	МенеджерЗаписи.Пересланное_IDЧата	= Пересланное_IDЧата;
	МенеджерЗаписи.Пересланное_UserName	= Пересланное_UserName;
	МенеджерЗаписи.ОжидатьОтвет			= УстановитьОжиданиеОтвета;
	
	МенеджерЗаписи.Записать(Истина);
	
	СтруктураВозврата = Новый Структура("Период,ЧатБот,IDЧата,Статус,ТипСообщения,Сообщение,СообщениеХранимыйФайл,ДанныеКлавиатуры,IDЗаписи,ПериодUNIX,Внешние_Период,Внешние_IDСообщения,ДополнительныеДанные,Сценарий,ОжидатьОтвет");
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, МенеджерЗаписи);
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ИзменитьСтатусЗаписиВИстории(ЧатБот, IDЧата, IDЗаписи, НовыйСтатус = Неопределено, НовыйВнешние_Период = Неопределено, НовыйВнешние_IDСообщения = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЧатБот", ЧатБот);
	Запрос.УстановитьПараметр("IDЧата", IDЧата);
	Запрос.УстановитьПараметр("IDЗаписи", IDЗаписи);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	СообщенияЧатБота.Период КАК Период,
	               |	СообщенияЧатБота.ЧатБот КАК ЧатБот,
	               |	СообщенияЧатБота.IDЧата КАК IDЧата
	               |ИЗ
	               |	РегистрСведений.СообщенияЧатБота КАК СообщенияЧатБота
	               |ГДЕ
	               |	СообщенияЧатБота.ЧатБот = &ЧатБот
	               |	И СообщенияЧатБота.IDЧата = &IDЧата
	               |	И СообщенияЧатБота.IDЗаписи = &IDЗаписи";
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		
		// Добавление записи в регистр				
		МенеджерЗаписи = РегистрыСведений.СообщенияЧатБота.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, РезультатЗапроса);
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.Статус				= ?(ЗначениеЗаполнено(НовыйСтатус), НовыйСтатус, МенеджерЗаписи.Статус);
		МенеджерЗаписи.Внешние_Период		= ?(ЗначениеЗаполнено(НовыйВнешние_Период), НовыйВнешние_Период, МенеджерЗаписи.Внешние_Период);
		МенеджерЗаписи.Внешние_IDСообщения	= ?(ЗначениеЗаполнено(НовыйВнешние_IDСообщения), НовыйВнешние_IDСообщения, МенеджерЗаписи.Внешние_IDСообщения);
		МенеджерЗаписи.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСообщениеИзИсторииПоIdЗаписи(IDЗаписи, ВключаяХранимыйФайл = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(IDЗаписи) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("IDЗаписи", IDЗаписи);
	Запрос.УстановитьПараметр("ВключаяХранимыйФайл", ВключаяХранимыйФайл);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	СообщенияЧатБота.Период КАК Период,
	               |	СообщенияЧатБота.ЧатБот КАК ЧатБот,
	               |	СообщенияЧатБота.IDЧата КАК IDЧата,
	               |	СообщенияЧатБота.Статус КАК Статус,
	               |	СообщенияЧатБота.ТипСообщения КАК ТипСообщения,
	               |	СообщенияЧатБота.Сообщение КАК Сообщение,
	               |	СообщенияЧатБота.ДанныеКлавиатуры КАК ДанныеКлавиатуры,
	               |	СообщенияЧатБота.IDЗаписи КАК IDЗаписи,
	               |	СообщенияЧатБота.ПериодUNIX КАК ПериодUNIX,
	               |	СообщенияЧатБота.Внешние_Период КАК Внешние_Период,
	               |	СообщенияЧатБота.Внешние_IDСообщения КАК Внешние_IDСообщения,
	               |	ВЫБОР
	               |		КОГДА &ВключаяХранимыйФайл = ИСТИНА
	               |			ТОГДА СообщенияЧатБота.СообщениеХранимыйФайл
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СообщениеХранимыйФайл,
	               |	СообщенияЧатБота.ИмяХранимогоФайла КАК ИмяХранимогоФайла,
	               |	СообщенияЧатБота.ДополнительныеДанные КАК ДополнительныеДанные,
	               |	СообщенияЧатБота.ОжидатьОтвет КАК ОжидатьОтвет
	               |ИЗ
	               |	РегистрСведений.СообщенияЧатБота КАК СообщенияЧатБота
	               |ГДЕ
	               |	СообщенияЧатБота.IDЗаписи = &IDЗаписи";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает сгенерированное имя файла по типу сообщения
//
// Параметры:
//  ТипСообщения - Перечисление.ТипыСообщенийЧатБота 
// 
// Возвращаемое значение:
//  Строка - собранная строка вида: [УникальныйИдентификатор()].[РасширениеФайла]
//
Функция СгенерироватьИмяФайлаПоТипуСообщения(ТипСообщения) Экспорт
	
	Результат = Строка(Новый УникальныйИдентификатор());
	Если ТипСообщения = Перечисления.ТипыСообщенийЧатБота.Аудио Тогда
		Результат = Результат + "." + "mp3";
	ИначеЕсли ТипСообщения = Перечисления.ТипыСообщенийЧатБота.Видео Тогда
		Результат = Результат + "." + "avi";
	ИначеЕсли ТипСообщения = Перечисления.ТипыСообщенийЧатБота.Картинка Тогда
		Результат = Результат + "." + "jpg";
	Иначе
		// Без расширения
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
