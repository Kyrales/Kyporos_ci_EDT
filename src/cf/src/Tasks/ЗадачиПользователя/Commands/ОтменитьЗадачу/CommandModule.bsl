#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ПараметрКоманды = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбраны задачи.'"));
		Возврат;
	КонецЕсли;
		
	ОчиститьСообщения();
	
	Оповещение = Новый ОписаниеОповещения("ОбработкаКомандыЗавершение",ЭтотОбъект,ПараметрКоманды);
	ПоказатьВопрос(Оповещение, "Отменить выполнение задачи?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат, ПараметрКоманды) Экспорт

	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Задача Из ПараметрКоманды Цикл
		
		Если Не ЕстьДоступНаОтменуЗадачи(Задача) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Отменить задачу нельзя, т.к. пользователь не является ни автором ни исполнителем задачи.'"));
			Продолжить;
		КонецЕсли;
		
		РаботаСЗадачамиВызовСервера.ОтменитьЗадачу(Задача, Истина);
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Задача отменена'"),
				ПолучитьНавигационнуюСсылку(Задача),
				Строка(Задача));
				
	КонецЦикла;
	
	Оповестить("Запись_ЗадачаИсполнителя", Новый Структура("Выполнена", Истина), ПараметрКоманды);

КонецПроцедуры // ОбработкаКомандыЗавершение()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЕстьДоступНаОтменуЗадачи(ЗадачаСсылка) 
	
	// если пользователь не является ни автором, ни исполнителем, то выполнить задачу нельзя
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если РольДоступна("ПолныеПрава") 
		Или РольДоступна("КонтрольЗадачПользователей") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЗадачаСсылка.Исполнитель = ТекущийПользователь 
		И ЗадачаСсылка.Инициатор <> ТекущийПользователь Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

#КонецОбласти
