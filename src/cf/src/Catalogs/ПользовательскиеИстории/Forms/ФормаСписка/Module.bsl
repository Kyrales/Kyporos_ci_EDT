
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("Владелец.Владелец.Проект", Проект);
	УстановитьОтборСписка(Список, ПараметрыОтбора);	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("Владелец.Владелец.Проект", Проект);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйЦветПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("Пометка", ВыбранныйЦвет);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо выбрать проект для создания новых пользовательских историй.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Проект", Проект);	
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СправочникСсылка.ПользовательскиеИстории") Тогда
		Владелец = ОбщегоНазначенияКупоросВызовСервера.ЗначениеРеквизитаОбъекта(Элементы.Список.ТекущаяСтрока, "Владелец");
		Если ЗначениеЗаполнено(Владелец) Тогда
			ЗначенияЗаполнения.Вставить("Владелец", Владелец);	
		КонецЕсли;
	КонецЕсли;
	
	ПутьКФорме = "Справочник.ПользовательскиеИстории.Форма.ФормаЭлемента";
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму(ПутьКФорме, ПараметрыФормы, Элемент);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Не ЗначениеЗаполнено(Строка) Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Необходимо выбрать проект для изменения пользовательских историй.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ИсторияТекущая = ПараметрыПеретаскивания.Значение[0];
	
	Если ТипЗнч(Строка.Ключ) = Тип("СправочникСсылка.ИсторииТребования") 
		Или ТипЗнч(Строка.Ключ) = Тип("СправочникСсылка.ИсторииРоль") Тогда
	
		ПереносИстории(ИсторияТекущая, Строка.Ключ);	
		
		Элементы.Список.Обновить();
		Элементы.Список.ТекущаяСтрока = ИсторияТекущая;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПримерыТребований(Команда)
	
	ЗаполнитьПримерыТребованийНаСервере();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПримерыТребованийНаСервере()
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнен реквизит отбора Проект.'"));
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользовательскиеИстории.Ссылка КАК Ссылка,
	               |	ПользовательскиеИстории.Владелец КАК Требование,
	               |	ПользовательскиеИстории.Владелец.Владелец КАК Тема
	               |ПОМЕСТИТЬ ВТ_Истории
	               |ИЗ
	               |	Справочник.ПользовательскиеИстории КАК ПользовательскиеИстории
	               |ГДЕ
	               |	ПользовательскиеИстории.Владелец.Владелец.Проект = &Проект
	               |	И НЕ ПользовательскиеИстории.ПометкаУдаления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИсторииТема.Ссылка КАК Тема
	               |ИЗ
	               |	Справочник.ИсторииТема КАК ИсторииТема
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторииТребования КАК ИсторииТребования
	               |		ПО (ИсторииТребования.Владелец = ИсторииТема.Ссылка)
	               |ГДЕ
	               |	НЕ ИсторииТема.ПометкаУдаления
	               |	И ИсторииТема.Проект = &Проект
	               |	И ИсторииТребования.Ссылка ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИсторииТребования.Ссылка КАК Требование,
	               |	ИсторииТребования.Владелец КАК Тема,
	               |	ИсторииТребования.Владелец.Проект КАК Проект
	               |ИЗ
	               |	Справочник.ИсторииТребования КАК ИсторииТребования
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Истории КАК ВТ_Истории
	               |		ПО (ВТ_Истории.Требование = ИсторииТребования.Ссылка)
	               |ГДЕ
	               |	ВТ_Истории.Требование ЕСТЬ NULL
	               |	И НЕ ИсторииТребования.ПометкаУдаления
	               |	И ИсторииТребования.Владелец.Проект = &Проект";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[1].Выбрать();
	
	// Заполнение примеров при отсутствии Требования
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектТребование = Справочники.ИсторииТребования.СоздатьЭлемент();
		ОбъектТребование.Наименование = НСтр("ru = 'Пример требования 1'");
		ОбъектТребование.Владелец = Выборка.Тема;
		ОбъектТребование.Записать();
		
		ОбъектИстория = Справочники.ПользовательскиеИстории.СоздатьЭлемент();
		ОбъектИстория.Наименование = СтрШаблон(НСтр("ru = 'Пример истории для %1'"), ОбъектТребование.Ссылка);
		ОбъектИстория.Владелец 	   = ОбъектТребование.Ссылка;
		ОбъектИстория.Проект 	   = Проект;
		ОбъектИстория.Записать();
	
	КонецЦикла;
	
	Выборка = Результат[2].Выбрать();
	
	// Заполнение примеров при отсутствии только Пользовательской истории
	Пока Выборка.Следующий() Цикл
		
		ОбъектИстория = Справочники.ПользовательскиеИстории.СоздатьЭлемент();
		ОбъектИстория.Наименование = НСтр("ru = 'Пример истории 1'");
		ОбъектИстория.Владелец = Выборка.Требование;
		ОбъектИстория.Проект 	   = Выборка.Проект;
		ОбъектИстория.Записать();
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)

	// проект 
	ПараметрСтрокаВладелецПроект = "Владелец.Владелец.Проект";
	Проект = ПараметрыОтбора.Получить(ПараметрСтрокаВладелецПроект);
	Если Проект <> Неопределено Тогда 
		
		Если Не ЗначениеЗаполнено(Проект) Тогда
			
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				ПараметрСтрокаВладелецПроект);
			
		Иначе		
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				ПараметрСтрокаВладелецПроект,
				Проект,
				ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии);
				
		КонецЕсли;
			
	КонецЕсли;
	
	ПараметрСтрокаПометка = "Пометка";
	Пометка = ПараметрыОтбора.Получить(ПараметрСтрокаПометка);
	Если Пометка <> Неопределено Тогда 
		
		Если Не ЗначениеЗаполнено(Пометка) Тогда
			
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				ПараметрСтрокаПометка);
			
		Иначе		
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				ПараметрСтрокаПометка,
				Пометка,
				ВидСравненияКомпоновкиДанных.Равно);
				
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервереБезКонтекста
Процедура ПереносИстории(История, НовоеЗначение)

	ОбъектИстория = История.ПолучитьОбъект();
	
	ФлагИзменения = Ложь;
	
	Если ТипЗнч(НовоеЗначение) = Тип("СправочникСсылка.ИсторииТребования") Тогда
		ОбщегоНазначенияКупоросКлиентСервер.УстановитьРеквизит(ОбъектИстория, "Владелец", НовоеЗначение, ФлагИзменения, Истина);
	КонецЕсли;
	Если ТипЗнч(НовоеЗначение) = Тип("СправочникСсылка.ИсторииРоль") Тогда
		 ОбщегоНазначенияКупоросКлиентСервер.УстановитьРеквизит(ОбъектИстория, "Роль", НовоеЗначение, ФлагИзменения, Истина);
	КонецЕсли;
	
	Если ФлагИзменения Тогда
		ОбъектИстория.Записать();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

