
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Функция формирования данных для сценария по-умолчанию сценария
//
// Возвращаемое значение:
//   Структура:
//		* ЭтапыСостояний - ТаблицаЗначений:
//			** Состояние - СправочникСсылка.СостоянияЗадач
//			** НачальноеПоУмолчанию - Булево - Истина, если этап самый перый в сценарии
//		* ПереходыПоСостояниям - ТаблицаЗначений:
//			** Состояние - СправочникСсылка.СостоянияЗадач
//			** СостояниеПерехода - СправочникСсылка.СостоянияЗадач
//			** ОсновнойПереход - Булево - Истина, если является стандартным ходом сценария без отклонений
//
Функция СтруктураДанныхСценарияПоУмолчанию() Экспорт
	
	ЭтапыСостояний = Новый ТаблицаЗначений;
	ЭтапыСостояний.Колонки.Добавить("Состояние");
	ЭтапыСостояний.Колонки.Добавить("НачальноеПоУмолчанию");
	
	ПереходыПоСостояниям = Новый ТаблицаЗначений;
	ПереходыПоСостояниям.Колонки.Добавить("Состояние");
	ПереходыПоСостояниям.Колонки.Добавить("СостояниеПерехода");
	ПереходыПоСостояниям.Колонки.Добавить("ОсновнойПереход");
	
	// Заполнение всех этапов состояний.
	
	// 1
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.Зарегистрирована;
	НовСтрокаЭтапаСостояния.НачальноеПоУмолчанию = Истина;
	
	// 2
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.Согласование;
	
	// 3
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	
	// 4
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	
	// 5
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.НаБизнесТестировании;
	
	// 6
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.ОжиданиеПереносаИзменений;
	
	// 7
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.Выполнена;
	
	// 8
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.НаУточнении;
	
	// 9
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.Приостановлена;
	
	// 10
	НовСтрокаЭтапаСостояния = ЭтапыСостояний.Добавить();
	НовСтрокаЭтапаСостояния.Состояние = Справочники.СостоянияЗадач.ОтмененоВыполнение;
	
	// Заполнение "Переходы по состояниям".
	
	// Зарегистрирована
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Зарегистрирована;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Зарегистрирована;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Согласование;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Зарегистрирована;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.НаУточнении;
	
	// Согласование
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Согласование;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Согласование;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Согласование;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.НаУточнении;
	
	// ФормированиеТехническогоРешения
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Согласование;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.НаУточнении;
	
	// ВРаботе
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Выполнена;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.НаБизнесТестировании;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.НаУточнении;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Приостановлена;
	
	// НаБизнесТестировании
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаБизнесТестировании;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаБизнесТестировании;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Выполнена;
	
	// ОжиданиеПереносаИзменений
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ОжиданиеПереносаИзменений;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Выполнена;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ОжиданиеПереносаИзменений;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ОтмененоВыполнение;
	
	// Выполнена
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Выполнена;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Выполнена;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Зарегистрирована;
	
	// НаУточнении
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаУточнении;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаУточнении;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Зарегистрирована;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаУточнении;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.Согласование;
	
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.НаУточнении;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	
	// Приостановлена
	НовСтрокаПерехода = ПереходыПоСостояниям.Добавить();
	НовСтрокаПерехода.Состояние = Справочники.СостоянияЗадач.Приостановлена;
	НовСтрокаПерехода.СостояниеПерехода = Справочники.СостоянияЗадач.ВРаботе;
	НовСтрокаПерехода.ОсновнойПереход = Истина;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ЭтапыСостояний", ЭтапыСостояний);
	СтруктураРезультата.Вставить("ПереходыПоСостояниям", ПереходыПоСостояниям);
	
	Возврат СтруктураРезультата;

КонецФункции // СтруктураДанныхБазовогоСценария()

// Заполнение базовым сценарием обработки: Зарегистрирована, ВРаботе, Выполнена, НаУточнении, Приостановлена 
//
// Параметры:
//  СценарийСсылка - СправочникСсылка.СценарииОбработкиЗадач
//
Процедура ЗаполнитьБазовыйСценарийОбработки(СценарийСсылка) Экспорт
	
	ОбъектСценарий = СценарийСсылка.ПолучитьОбъект();
	ОбъектСценарий.Заблокировать();
	
	ОбъектСценарий.Комментарий = НСтр("ru = 'Заполнено базовым сценарием обработки'");
	
	ОбъектСценарий.ЭтапыСостояний.Очистить();
	ОбъектСценарий.ПереходыПоСостояниям.Очистить();
	
	ДанныеСценарияПоУмолчанию = Справочники.СценарииОбработкиЗадач.СтруктураДанныхСценарияПоУмолчанию();

	ОбъектСценарий.ЭтапыСостояний.Загрузить(ДанныеСценарияПоУмолчанию.ЭтапыСостояний);
	ОбъектСценарий.ПереходыПоСостояниям.Загрузить(ДанныеСценарияПоУмолчанию.ПереходыПоСостояниям);

	ОбъектСценарий.Записать();
	
КонецПроцедуры

// Функция возвращает массив состояний, которые являются переходам от состояния параметра.
// Первый элемент массива - это основное состояние перехода.
//
// Параметры:
//  Проект		 - СправочникСсылка.Проекты	 - Проект, за который завязан сценарий обработки
//  Состояние	 - СправочникСсылка.СостоянияЗадач - Базовый сценарий
// 
// Возвращаемое значение:
//  Массив Из СправочникСсылка.СостоянияЗадач - список состояний переходов
//
Функция ПереходыСценарияПоСостоянию(Проект, Состояние) Экспорт
	
	Если Не ЗначениеЗаполнено(Проект) Или Не ЗначениеЗаполнено(Состояние) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	СценарийОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект,"СценарийОбработкиЗадач");
	
	
	Если Не ЗначениеЗаполнено(СценарийОбработки) Тогда
		// Базовый сценарий в случае если основной не определен
		// ..позже: определять по иерархии проектов
		СценарийОбработки = Справочники.СценарииОбработкиЗадач.БазовыйСценарийЗадач;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СценарииОбработкиЗадачПереходыПоСостояниям.СостояниеПерехода КАК СостояниеПерехода,
	               |	СценарииОбработкиЗадачПереходыПоСостояниям.ОсновнойПереход КАК ОсновнойПереход
	               |ИЗ
	               |	Справочник.СценарииОбработкиЗадач.ПереходыПоСостояниям КАК СценарииОбработкиЗадачПереходыПоСостояниям
	               |ГДЕ
	               |	СценарииОбработкиЗадачПереходыПоСостояниям.Ссылка = &СценарийОбработки
	               |	И СценарииОбработкиЗадачПереходыПоСостояниям.Состояние = &Состояние
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОсновнойПереход УБЫВ";
	
	Запрос.УстановитьПараметр("СценарийОбработки", СценарийОбработки);
	Запрос.УстановитьПараметр("Состояние", Состояние);
	
	Результат = Запрос.Выполнить();
	ТаблицаДанных = Результат.Выгрузить();
	
	Возврат ТаблицаДанных.ВыгрузитьКолонку("СостояниеПерехода");

КонецФункции // ПереходыСценарияПоСостоянию()

#КонецОбласти

#КонецЕсли
