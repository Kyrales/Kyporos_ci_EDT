
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает пользователей проекта, в т.ч. из организации, рабочей группы
//
// Параметры:
//  Проект  - СправочникСсылка.Проекты, Массив - Ссылка или массив ссылок проекта
//	ВключатьОтветственногоЗаПроект - Булево
//
// Возвращаемое значение:
//   Массив   - массив пользователей проекта с типом СправочникСсылка.Пользователи
//
Функция МассивПользователейПроекта(Проект,ВключатьОтветственногоЗаПроект=Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВложенныйЗапрос.Пользователь КАК Пользователь
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫРАЗИТЬ(ПроектыПользователиПроекта.Пользователь КАК Справочник.Пользователи) КАК Пользователь
	               |	ИЗ
	               |		Справочник.Проекты.ПользователиПроекта КАК ПроектыПользователиПроекта
	               |	ГДЕ
	               |		ПроектыПользователиПроекта.Пользователь ССЫЛКА Справочник.Пользователи
	               |		И ПроектыПользователиПроекта.Ссылка В (&Ссылка)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		Пользователи.Ссылка
	               |	ИЗ
	               |		Справочник.Проекты.ПользователиПроекта КАК ПроектыПользователиПроекта
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	               |			ПО ПроектыПользователиПроекта.Пользователь = Пользователи.Организация
	               |	ГДЕ
	               |		ПроектыПользователиПроекта.Ссылка В (&Ссылка)
	               |		И ПроектыПользователиПроекта.Пользователь ССЫЛКА Справочник.Организации
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		РабочиеМеста.Сотрудник
	               |	ИЗ
	               |		Справочник.Проекты.ПользователиПроекта КАК ПроектыПользователиПроекта
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК РабочиеМеста
	               |			ПО ПроектыПользователиПроекта.Пользователь = РабочиеМеста.Ссылка
	               |	ГДЕ
	               |		ПроектыПользователиПроекта.Ссылка В (&Ссылка)
	               |		И ПроектыПользователиПроекта.Пользователь ССЫЛКА Справочник.РабочиеМеста) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	НЕ ВложенныйЗапрос.Пользователь.Недействителен
	               |	И НЕ ВложенныйЗапрос.Пользователь.ПометкаУдаления";
	
	МассивПроектов = Новый Массив;
	Если ТипЗнч(Проект) = Тип("СправочникСсылка.Проекты") Тогда
		МассивПроектов.Добавить(Проект);
	Иначе
		МассивПроектов = Проект;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", МассивПроектов);
	
	Результат = Запрос.Выполнить();
	ТаблицаПользователей = Результат.Выгрузить();
	
	МассивПользователей = Новый Массив;
	
	Если ТаблицаПользователей.Количество()>0 Тогда
	
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПользователей,ТаблицаПользователей.ВыгрузитьКолонку("Пользователь"));
	
	КонецЕсли;	
	
	Если ВключатьОтветственногоЗаПроект Тогда
		// добавление из проекта реквизит - "Ответственный за проект"
		
		Для каждого ТекПроект Из МассивПроектов Цикл
			
			 ОтветственныйЗаПроект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекПроект,"ОтветственныйЗаПроект");
			 Если ЗначениеЗаполнено(ОтветственныйЗаПроект) Тогда
			      МассивПользователей.Добавить(ОтветственныйЗаПроект);
			 КонецЕсли; 
		
		КонецЦикла;
		
	КонецЕсли; // ВключатьОтветственногоЗаПроект
	
	Возврат МассивПользователей;

КонецФункции // МассивПользователейПроекта()

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Наименование");
	Поля.Добавить("Родитель");

КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не Параметры.Отбор.Свойство("Актуальность") Тогда
		Параметры.Отбор.Вставить("Актуальность", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" или ВидФормы = "ФормаСписка" Тогда 
		ПараметрИзменен = Ложь;  
		Если Не Параметры.Свойство("Отбор") Тогда
			Параметры.Вставить("Отбор", Новый Структура("Актуальность", Истина));
			ПараметрИзменен = Истина;
		ИначеЕсли Не Параметры.Отбор.Свойство("Недействителен") Тогда
			Параметры.Отбор.Вставить("Актуальность", Истина);
			ПараметрИзменен = Истина;
		КонецЕсли;
		
		// Этот код нужен, чтобы были использованы измененные нами значения параметров
		Если ПараметрИзменен Тогда  
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = ВидФормы; // передаем имя формы выбора
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти

