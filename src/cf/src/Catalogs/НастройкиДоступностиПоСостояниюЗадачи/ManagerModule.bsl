#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает таблицу имени полей и команд для настройки доступности.
// По указанным именам полей на форме происходит ограничение доступности.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - содержит колонки:
//		* ИмяПоляКоманды - Строка - уникально в рамках таблицы
//		* ПредставлениеПоляКоманды - Строка
//		* ИменаПолейНаФорме - Строка
//		* ДоступностьСостоянийПоУмолчанию - Соответствие - структура свойств:
//			** Ключ - СправочникСсылка.СостоянияЗадач
//			** Значение - Строка - Строка перечисления ТипыПользователейЗадач с разделителем ";". Перечислены только поля к которым доступ ЗАПРЕЩЕН
//
Функция ИменаПолейИКомандДляНастройкиДоступности() Экспорт

	ТаблицаИменПолейКоманд = Новый ТаблицаЗначений;
	ТаблицаИменПолейКоманд.Колонки.Добавить("ИмяПоляКоманды");
	ТаблицаИменПолейКоманд.Колонки.Добавить("ПредставлениеПоляКоманды");
	ТаблицаИменПолейКоманд.Колонки.Добавить("ИменаПолейНаФорме");
	ТаблицаИменПолейКоманд.Колонки.Добавить("ДоступностьСостоянийПоУмолчанию");
	
	// АПК:1297-выкл Не проверять на локализацию строк 
	
	// базовые
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Проект", "Проект", "Проект");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ВидЗадачи", "ВидЗадачи", "ВидЗадачи");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ПолучательУслуг", "Получатель услуг", "ПолучательУслуг");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Заголовок", "Заголовок", "Наименование");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Описание", "Описание", "Описание, ДекорацияРазделитель, ФормаПроверитьОрфографию");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Исполнитель", "Исполнитель", "Исполнитель, УстановитьИсполнителемТекущегоПользователя");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "СрокИсполнения", "Срок исполнения", "СрокИсполнения, СрокИсполненияВремя");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Важность", "Важность", "Важность");	
	
	// выполнение задачи
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, 
			"ПринятьКИсполнению", 
			"Принять к исполнению", 
			"ФормаПринятьКИсполнению, ФормаОтменитьПринятиеКИсполнению, ПринятьКИсполнению, ОтменитьПринятиеКИсполнению");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ВыполнитьЗадачу", "Выполнить задачу", "ФормаВыполнитьЗадачу, ФормаВыполнитьЗадачуСУведомлением");	
	
	// файлы
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ДобавлениеФайлов", "Добавление файлов", "ДобавитьФайл, ВставитьКартинкуИзБуфера");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "УдалениеФайлов", "Удаление файлов",  "");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "РедактированиеФайлов", "Редактирование файлов", "");	
	
	// результат
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "РезультатГиперссылка", "Результат (гиперссылка)", "декОтвет");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "РезультатПолный", "Результат (полный)", "ГруппаРезультат");	
	
	// состояние задачи и хронометраж
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "СостояниеЗадачи", "Состояние задачи", "СостояниеЗадачи");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Хронометраж", "Хронометраж", "ПереключитьХронометраж");	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ПроцентЗавершения", "Процент завершения", "ПроцентЗавершения");	
	
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Основание", "Основание", "Основание");	
	
	// рабочая группа
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "РабочаяГруппа", "Рабочая группа", "Пользователи, ПользователиПодобрать, КонтекстноеМенюПользователиПодобрать");	
	
	// затраченное время
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ЗатраченноеВремя", "Затраченное время", "Трудоемкость, РасчетЗатраченныхЧасов");	
	
	// отражение изменения конфигурации
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "ОписаниеИзмененияКонфигурации", "Ввод описания изменения конфигурации", "ИзменениеКонфигурации");	
	
	// подменю "Поделиться"
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Поделиться", "Поделиться по электронной почте задачей", "ОтправитьПисьмоИнициатору, ОтправитьПисьмоИнициаторуСВложением, ОтправитьПисьмоИсполнителю, ДобавитьВEvernote");	
	
	// оценка
	ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, "Оценка", "Оценка", "ОценкаЗадачи, ДатаОценкиЗадачи");	
	
	Возврат ТаблицаИменПолейКоманд;

КонецФункции // ИменаПолейИКомандДляНастройкиДоступности()

// Заполнение сценария по умолчанию для типа пользователя задач
//
// Параметры:
//  ОбъектДоступностиПоСостоянию - СправочникОбъект.НастройкиДоступностиПоСостояниюЗадачи 
//  ТипПользователя				 - ПеречислениеСсылка.ТипыПользователейЗадач 
//
Процедура СценарийПоУмолчаниюДляТипаПользователяЗадач(ОбъектДоступностиПоСостоянию, ТипПользователя) Экспорт

	ТаблицаИменПолейДоступности = ИменаПолейИКомандДляНастройкиДоступности();
	
	ОбъектДоступностиПоСостоянию.НастройкиДоступности.Очистить();
	
	ОбновитьСтрокиДоступностиПоСостоянию(ОбъектДоступностиПоСостоянию, ТипПользователя);
	
КонецПроцедуры

// Обновление на сценарий по умолчанию для указанной команды
//
// Параметры:
//  ОбъектДоступностиПоСостоянию - СправочникОбъект.НастройкиДоступностиПоСостояниюЗадачи 
//  ТипПользователя				 - ПеречислениеСсылка.ТипыПользователейЗадач 
//  ИмяПоляКоманды	 - Строка
//
Процедура ОбновитьНаСценарийПоУмолчаниюДляИмяПоляКоманды(ОбъектДоступностиПоСостоянию, ТипПользователя, ИмяПоляКоманды) Экспорт
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИмяПоляКоманды", ИмяПоляКоманды);
	
	// очищаем строки с текущей командой
	СтрокиНастройкиДоступности = ОбъектДоступностиПоСостоянию.НастройкиДоступности.НайтиСтроки(ПараметрыОтбора);
	Для каждого ТекСтрока Из СтрокиНастройкиДоступности Цикл
		ОбъектДоступностиПоСостоянию.НастройкиДоступности.Удалить(ТекСтрока);
	КонецЦикла;
	
	// обновляем строки
	ОбновитьСтрокиДоступностиПоСостоянию(ОбъектДоступностиПоСостоянию, ТипПользователя, ИмяПоляКоманды);
	
КонецПроцедуры

// Функция возвращает таблицу настройки доступности формы задачи для текущего пользователя
//
// Параметры:
//  Контекст - Форма, ЗадачаСсылка.ЗадачиПользователя, Структура
//	ТипКонтекста - Строка - Варианты: ФормаЗадачи, СсылкаНаЗадачу, СтруктураЗаданныхПараметров
//  ТипыПользователя - Массив - массив определенных перечислений "Типы пользователей задач"
// 
// Возвращаемое значение:
//  ТаблицаЗначений - состоит из колонок:
//		* ИмяПоляНаФорме - Строка
//		* ИмяПоляКоманды - Строка
//		* Доступность - ПеречислениеСсылка.ДоступностьПолей
//		* ВариантОграниченияНаФормеЗадачи - ПеречислениеСсылка.ВариантыОграниченияДоступаНаФорме
//		* НастройкаДоступности - СправочникСсылка.НастройкиДоступностиПоСостояниюЗадачи
//
Функция НастройкиДоступностиФормыЗадачи(Контекст, ТипКонтекста = "ФормаЗадачи", ТипыПользователя = Неопределено) Экспорт
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("ИмяПоляНаФорме");
	ТаблицаНастроек.Колонки.Добавить("ИмяПоляКоманды");
	ТаблицаНастроек.Колонки.Добавить("Доступность");
	ТаблицаНастроек.Колонки.Добавить("ВариантОграниченияНаФормеЗадачи");
	ТаблицаНастроек.Колонки.Добавить("НастройкаДоступности");
	
	// Определение общих параметров.
	Если ТипКонтекста = "ФормаЗадачи" Тогда
	    // форма задачи
		
		ЭтоПолноправныйПользовательЗадач = Контекст.ЭтоПолноправныйПользовательЗадач; 
		ТекущийПользователь = Контекст.ТекущийПользователь;
		Проект = Контекст.Объект.Проект;
		СостояниеЗадачи = ?(Контекст.ЭтоНовый, Справочники.СостоянияЗадач.НоваяЗадача, Контекст.СостояниеЗадачи);
		Исполнитель = Контекст.Объект.Исполнитель;
		Инициатор = Контекст.Объект.Инициатор;
		ПолучательУслуг = Контекст.Объект.ПолучательУслуг;
		РабочаяГруппа = Контекст.Объект.РабочаяГруппа.Выгрузить();
		
	ИначеЕсли ТипКонтекста = "СтруктураДанныхЗадачиИзФормыСписка" Тогда
		// данные из ссылки
		
		ЭтоПолноправныйПользовательЗадач = РаботаСЗадачамиПовтИсп.ЭтоПолноправныйПользовательЗадач(); 
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		Проект = Контекст.ТекущийПроект;
		СостояниеЗадачи = Контекст.СостояниеЗадачи;
		Исполнитель = Контекст.ТекущийИсполнитель;
		Инициатор = Контекст.ТекущийАвтор;
		ПолучательУслуг = Контекст.ТекущийИнициатор;
		РабочаяГруппа = ПолучитьИзВременногоХранилища(Контекст.АдресРабочаяГруппа);
		
	Иначе
		// "СтруктураЗаданныхПараметров"
		
		ЭтоПолноправныйПользовательЗадач = Контекст.ЭтоПолноправныйПользовательЗадач; 
		ТекущийПользователь = Контекст.ТекущийПользователь;
		Проект = Контекст.Проект;
		СостояниеЗадачи = Контекст.СостояниеЗадачи;
		Исполнитель = Контекст.Исполнитель;
		Инициатор = Контекст.Инициатор;
		ПолучательУслуг = Контекст.ПолучательУслуг;
		РабочаяГруппа = Контекст.РабочаяГруппа;
		
	КонецЕсли;
	
	// Определяем типы пользователя в задаче. У одного пользователя может быть несколько типов.
	ТипыПользователя = Новый Массив;
	// АПК:336-выкл Допускаем использование РольДоступна() 
	Если ЭтоПолноправныйПользовательЗадач 
		И РольДоступна("ПолныеПрава") Тогда
	    ТипыПользователя.Добавить(Перечисления.ТипыПользователейЗадач.Администратор);
	КонецЕсли;
	Если ЭтоПолноправныйПользовательЗадач 
		И РольДоступна("КонтрольЗадачПользователей") Тогда
	    ТипыПользователя.Добавить(Перечисления.ТипыПользователейЗадач.КонтрольЗадачПользователей);
	КонецЕсли;
	// АПК:336-вкл
	
	Если ТекущийПользователь = Исполнитель Тогда
	    ТипыПользователя.Добавить(Перечисления.ТипыПользователейЗадач.Исполнитель);
	КонецЕсли;
	
	Если ТекущийПользователь = Инициатор Или ТекущийПользователь = ПолучательУслуг Тогда
	    ТипыПользователя.Добавить(Перечисления.ТипыПользователейЗадач.ИнициаторПолучательУслуг);
	КонецЕсли;
	
	ПользователиРабочейГруппы = РаботаСЗадачами.ПользователиРабочейГруппыЗадачи(РабочаяГруппа);
	Если ПользователиРабочейГруппы.Найти(ТекущийПользователь) <> Неопределено Тогда
	    ТипыПользователя.Добавить(Перечисления.ТипыПользователейЗадач.ПользовательРабочейГруппы);
	КонецЕсли;
	
	// Определяем таблицу доступности для передачи на форму
	
	// Алгоритм определения доступности элементов форм: 
	// 	- Если нет ни разрешения, ни запрещения доступа, то доступ к реквизитам РАЗРЕШЕН. 
	// 	- Если есть пересечения настроек одной настройки с другими настройками: в одной доступность разрешена, а в другой запрещена, то доступ к реквизитам РАЗРЕШЕН.
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя КАК НастройкаДоступностиТекущегоПользователя
	               |ПОМЕСТИТЬ ВТ_НастройкиДоступностиПользователя
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Ссылка КАК НастройкаДоступностиТекущегоПользователя
	               |	ИЗ
	               |		Справочник.НастройкиДоступностиПоСостояниюЗадачи.ИспользоватьДля КАК НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля
	               |	ГДЕ
	               |		НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Участник = &ТекущийПользователь
	               |		И НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Ссылка.ТипПользователяЗадач В(&СписокТипПользователяЗадач)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Ссылка
	               |	ИЗ
	               |		Справочник.НастройкиДоступностиПоСостояниюЗадачи.ИспользоватьДля КАК НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля
	               |	ГДЕ
	               |		НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Ссылка.ТипПользователяЗадач В(&СписокТипПользователяЗадач)
	               |		И НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Участник = ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ВсеПользователи)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Ссылка
	               |	ИЗ
	               |		Справочник.НастройкиДоступностиПоСостояниюЗадачи.ИспользоватьДля КАК НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	               |			ПО НастройкиДоступностиПоСостояниюЗадачиИспользоватьДля.Участник = ГруппыПользователейСостав.Ссылка
	               |	ГДЕ
	               |		ГруппыПользователейСостав.Пользователь = &ТекущийПользователь
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НастройкиДоступностиПоСостояниюЗадачи.Ссылка
	               |	ИЗ
	               |		Справочник.НастройкиДоступностиПоСостояниюЗадачи КАК НастройкиДоступностиПоСостояниюЗадачи
	               |	ГДЕ
	               |		НастройкиДоступностиПоСостояниюЗадачи.ТипПользователяЗадач = ЗНАЧЕНИЕ(Перечисление.ТипыПользователейЗадач.Администратор)) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	НЕ ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя.ПометкаУдаления
	               |	И ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя.ТипПользователяЗадач В(&СписокТипПользователяЗадач)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя КАК НастройкаДоступностиТекущегоПользователя
	               |ПОМЕСТИТЬ ВТ_НастройкиДоступностиСУчетомПроектов
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НастройкиДоступностиПоСостояниюЗадачиПроекты.Ссылка КАК НастройкаДоступностиТекущегоПользователя
	               |	ИЗ
	               |		Справочник.НастройкиДоступностиПоСостояниюЗадачи.Проекты КАК НастройкиДоступностиПоСостояниюЗадачиПроекты
	               |	ГДЕ
	               |		НЕ НастройкиДоступностиПоСостояниюЗадачиПроекты.Ссылка.ПоВсемПроектам
	               |		И НастройкиДоступностиПоСостояниюЗадачиПроекты.Проект = &Проект
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_НастройкиДоступностиПользователя.НастройкаДоступностиТекущегоПользователя.Ссылка
	               |	ИЗ
	               |		ВТ_НастройкиДоступностиПользователя КАК ВТ_НастройкиДоступностиПользователя
	               |	ГДЕ
	               |		ВТ_НастройкиДоступностиПользователя.НастройкаДоступностиТекущегоПользователя.ПоВсемПроектам) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.НастройкаДоступностиТекущегоПользователя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.ИмяПоляКоманды КАК ИмяПоляКоманды,
	               |	НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.ВариантОграниченияНаФормеЗадачи КАК ВариантОграниченияНаФормеЗадачи,
	               |	НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.Доступность КАК Доступность,
	               |	НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.Ссылка КАК НастройкаДоступности
	               |ИЗ
	               |	Справочник.НастройкиДоступностиПоСостояниюЗадачи.НастройкиДоступности КАК НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкиДоступностиСУчетомПроектов КАК ВТ_НастройкиДоступностиСУчетомПроектов
	               |		ПО НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.Ссылка = ВТ_НастройкиДоступностиСУчетомПроектов.НастройкаДоступностиТекущегоПользователя
	               |ГДЕ
	               |	НастройкиДоступностиПоСостояниюЗадачиНастройкиДоступности.Состояние = &Состояние";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", ТекущийПользователь);
	Запрос.УстановитьПараметр("СписокТипПользователяЗадач", ТипыПользователя);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("Состояние", СостояниеЗадачи);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаИменПолейДоступности = ИменаПолейИКомандДляНастройкиДоступности();
	
	Пока Выборка.Следующий() Цикл
		
		НайденнаяСтрока = ТаблицаИменПолейДоступности.Найти(Выборка.ИмяПоляКоманды,"ИмяПоляКоманды");
		
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// определение элементов формы для контроля доступности
		МассивИменПолейНаФорме = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НайденнаяСтрока.ИменаПолейНаФорме, ",", Истина, Истина);
		
		Для каждого ТекИмяПоляНаФорме Из МассивИменПолейНаФорме Цикл
		
			 НовСтрокаНастройки = ТаблицаНастроек.Добавить();
			 ЗаполнитьЗначенияСвойств(НовСтрокаНастройки, Выборка);
			 НовСтрокаНастройки.ИмяПоляНаФорме = ТекИмяПоляНаФорме;
		
		КонецЦикла;
		
	КонецЦикла;
	
	// Удалить записи настройки, если попадает под алгоритм: 
	// 	 Если есть пересечения настроек одной настройки с другими настройками: в одной доступность разрешена, а в другой запрещена, то доступ к реквизитам РАЗРЕШЕН. 
	КолСтрокИсходное = ТаблицаНастроек.Количество();
	Сч = 1;
	ИндексСтроки = 0;
	Пока Сч <= КолСтрокИсходное Цикл
		
		ТекСтрока = ТаблицаНастроек[ИндексСтроки];
		
		ПараметрыОтбора = Новый Структура("ИмяПоляКоманды, Доступность", ТекСтрока.ИмяПоляКоманды, Перечисления.ДоступностьПолей.Доступно);
		
		Если ТекСтрока.Доступность = Перечисления.ДоступностьПолей.Недоступно 
			И ЗначениеЗаполнено(ТаблицаНастроек.НайтиСтроки(ПараметрыОтбора)) Тогда
			// удаляем запись, т.к. найдена разрешающая настойка по данному имени поля
			ТаблицаНастроек.Удалить(ТекСтрока);    
		Иначе
			ИндексСтроки = ИндексСтроки + 1;    
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	// Дополнить разрешениями, которых нет в перечне настроек доступности.
	Для каждого ТекСтрока Из ТаблицаИменПолейДоступности Цикл
		
		Если ТаблицаНастроек.Найти(ТекСтрока.ИмяПоляКоманды, "ИмяПоляКоманды") <> Неопределено Тогда
			// если настройка уже отражена, то пропуск
			Продолжить;
		КонецЕсли;
		
		// Определение разрешенных элементов формы для контроля доступности.
		МассивИменПолейНаФорме = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекСтрока.ИменаПолейНаФорме, ",", Истина, Истина);
		
		Для каждого ТекИмяПоляНаФорме Из МассивИменПолейНаФорме Цикл
		
			 НовСтрокаНастройки = ТаблицаНастроек.Добавить();
			 НовСтрокаНастройки.ИмяПоляКоманды 	   = ТекСтрока.ИмяПоляКоманды;
			 НовСтрокаНастройки.ИмяПоляНаФорме 	   = ТекИмяПоляНаФорме;
			 НовСтрокаНастройки.Доступность 	   = Перечисления.ДоступностьПолей.Доступно;
			 НовСтрокаНастройки.ВариантОграниченияНаФормеЗадачи = ВариантОграниченияПоУмолчаниюДляПоля(ТекСтрока.ИмяПоляКоманды);
		
		КонецЦикла;
	
	КонецЦикла;
	
	ТаблицаНастроек.Сортировать("ИмяПоляКоманды, ИмяПоляНаФорме");
	
	Возврат ТаблицаНастроек;	
	
КонецФункции // НастройкиДоступностиФормы()

// Возвращает информационную строку сокращенных настроек доступности формы задачи
//
// Параметры:
//  Форма 
// 
// Возвращаемое значение:
//  Строка
//
Функция СтрокаНастройкиДоступностиФормыЗадачи(Форма) Экспорт
	
	ТипыПользователя = Новый Массив;
	ТаблицаДанных =  Справочники.НастройкиДоступностиПоСостояниюЗадачи.НастройкиДоступностиФормыЗадачи(Форма, "ФормаЗадачи", ТипыПользователя);
	
	ТекстВывода = НСтр("ru = 'Определенные профили текущего пользователя задачи:'");
	
	Для каждого ТекЗначение Из ТипыПользователя Цикл
	
		ОбщегоНазначенияКупоросКлиентСервер.ПрисоединитьСтроку(ТекстВывода, " - "+ТекЗначение, Символы.ПС);
	
	КонецЦикла;
	
	ОбщегоНазначенияКупоросКлиентСервер.ПрисоединитьСтроку(ТекстВывода, НСтр("ru = 'Права на задачу:'"), Символы.ПС);
	
	Для каждого ТекСтрока Из ТаблицаДанных Цикл
		
		СтрокаТекст = СтрШаблон(" %1 (%2)|%3|%4|%5", ТекСтрока.ИмяПоляКоманды, ТекСтрока.ИмяПоляНаФорме, ТекСтрока.Доступность, ТекСтрока.НастройкаДоступности, ТекСтрока.ВариантОграниченияНаФормеЗадачи);
		
		ОбщегоНазначенияКупоросКлиентСервер.ПрисоединитьСтроку(ТекстВывода, СтрокаТекст, Символы.ПС);
	
	КонецЦикла;
	
	Возврат ТекстВывода;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает соответствие состояние доступности по умолчанию
//
// Параметры:
//  ИмяПоляКоманды	 - Строка
// 
// Возвращаемое значение:
//	Соответствие - структура доступных свойств:
//		* Ключ - СправочникСсылка.СостоянияЗадач
//		* Значение - Строка - Строка с разделителем ";". Поля к которым доступ ЗАПРЕЩЕН
//
Функция СостояниеДоступностиПоУмолчанию(ИмяПоляКоманды)

	СтруктураСостоянийДоступности = Новый Соответствие;
	
	НоваяЗадача 	 	 = Справочники.СостоянияЗадач.НоваяЗадача;
	Зарегистрирована 	 = Справочники.СостоянияЗадач.Зарегистрирована;
	ВРаботе 		 	 = Справочники.СостоянияЗадач.ВРаботе;
	НаБизнесТестировании = Справочники.СостоянияЗадач.НаБизнесТестировании;
	Приостановлена 		 = Справочники.СостоянияЗадач.Приостановлена;
	НаУточнении 		 = Справочники.СостоянияЗадач.НаУточнении;
	ОтмененоВыполнение   = Справочники.СостоянияЗадач.ОтмененоВыполнение;
	Выполнена 			 = Справочники.СостоянияЗадач.Выполнена;
	ОжиданиеПереносаИзменений 		= Справочники.СостоянияЗадач.ОжиданиеПереносаИзменений;
	ФормированиеТехническогоРешения = Справочники.СостоянияЗадач.ФормированиеТехническогоРешения;
	Согласование 					= Справочники.СостоянияЗадач.Согласование;
	
	// Варианты настроек:
	// Администратор = Перечисления.ТипыПользователейЗадач.Администратор;	
	// КонтрольЗадачПользователей = Перечисления.ТипыПользователейЗадач.КонтрольЗадачПользователей;	
	// Исполнитель = Перечисления.ТипыПользователейЗадач.Исполнитель;	         
	// ПользовательРабочейГруппы = Перечисления.ТипыПользователейЗадач.ПользовательРабочейГруппы;	
	// ИнициаторПолучательУслуг = Перечисления.ТипыПользователейЗадач.ИнициаторПолучательУслуг;	
	
	Если ИмяПоляКоманды = "Проект" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,				 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "ВидЗадачи" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,				 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "ПолучательУслуг" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "Заголовок" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "Описание" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "Исполнитель" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "СрокИсполнения" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Исполнитель");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "Важность" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Исполнитель");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "ПринятьКИсполнению" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "ВыполнитьЗадачу" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "ДобавлениеФайлов" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "УдалениеФайлов" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "РедактированиеФайлов" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "РезультатГиперссылка" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "РезультатПолный" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "СостояниеЗадачи" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "Хронометраж" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "ПроцентЗавершения" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	ИначеЕсли ИмяПоляКоманды = "Основание" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	"ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "РабочаяГруппа" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "ЗатраченноеВремя" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "ОписаниеИзмененияКонфигурации" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "Поделиться" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	"ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ПользовательРабочейГруппы");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Выполнена,			 "ПользовательРабочейГруппы");
		СтруктураСостоянийДоступности.Вставить(Согласование,			 "ПользовательРабочейГруппы");
		
	ИначеЕсли ИмяПоляКоманды = "Оценка" Тогда
		
		СтруктураСостоянийДоступности.Вставить(НоваяЗадача,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Зарегистрирована,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ФормированиеТехническогоРешения,	"ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ВРаботе,			     "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(НаБизнесТестировании, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");  
		СтруктураСостоянийДоступности.Вставить(Приостановлена,		 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(НаУточнении,			 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОтмененоВыполнение,	 "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(ОжиданиеПереносаИзменений, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Выполнена, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		СтруктураСостоянийДоступности.Вставить(Согласование, "ИнициаторПолучательУслуг; ПользовательРабочейГруппы; Администратор; Исполнитель; КонтрольЗадачПользователей");
		
	КонецЕсли;
	
	Возврат СтруктураСостоянийДоступности;
	
КонецФункции // СостояниеДоступностиПоУмолчанию()

Процедура ОбновитьСтрокиДоступностиПоСостоянию(ОбъектДоступностиПоСостоянию, ТипПользователя, ИмяПоляКоманды = "", ТаблицаИменПолейДоступности = Неопределено)
	
	Если ТаблицаИменПолейДоступности = Неопределено Тогда
		ТаблицаИменПолейДоступности = ИменаПолейИКомандДляНастройкиДоступности();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяПоляКоманды) Тогда
	
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИмяПоляКоманды", ИмяПоляКоманды);

		НайденныеСтрокиИменПолейДоступности = ТаблицаИменПолейДоступности.НайтиСтроки(ПараметрыОтбора);
		
	Иначе
		
	    НайденныеСтрокиИменПолейДоступности = ТаблицаИменПолейДоступности;
		
	КонецЕсли;
	
	Для каждого ТекСтрока Из НайденныеСтрокиИменПолейДоступности Цикл
	
		// определение состояний и доступности
		ТаблицаНастроекДоступностьСостояний = ТаблицаНастроекДоступностиПоУмолчанию(ТекСтрока.ИмяПоляКоманды, ТекСтрока.ПредставлениеПоляКоманды, ТипПользователя, ТекСтрока.ДоступностьСостоянийПоУмолчанию);
		ПараметрыОтбора = Новый Структура("ИмяПоляКоманды",ТекСтрока.ИмяПоляКоманды);
		НайденныеНастройки = ТаблицаНастроекДоступностьСостояний.Скопировать(ПараметрыОтбора);
		НайденныеНастройки.Сортировать("РеквизитДопУпорядочивания");
		
		Для каждого ТекСтрокаНастроек Из НайденныеНастройки Цикл
			
			НовСтрока = ОбъектДоступностиПоСостоянию.НастройкиДоступности.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрокаНастроек); 
			
			// заполнение "Вариант ограничения на форме" 
			НовСтрока.ВариантОграниченияНаФормеЗадачи = ВариантОграниченияПоУмолчаниюДляПоля(ТекСтрокаНастроек.ИмяПоляКоманды);
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьНовуюСтрокуИменПолейКоманд(ТаблицаИменПолейКоманд, ИмяПоляКоманды, ПредставлениеПоляКоманды, ИменаПолейНаФорме)

	ИменаПолейКоманд = ТаблицаИменПолейКоманд.Добавить();	
	ИменаПолейКоманд.ИмяПоляКоманды = ИмяПоляКоманды;	
	ИменаПолейКоманд.ПредставлениеПоляКоманды = ПредставлениеПоляКоманды;	
	ИменаПолейКоманд.ИменаПолейНаФорме = ИменаПолейНаФорме;	
	ИменаПолейКоманд.ДоступностьСостоянийПоУмолчанию = СостояниеДоступностиПоУмолчанию(ИмяПоляКоманды);
	
КонецПроцедуры

// Функция - Таблица доступности по умолчанию
//
// Параметры:
//  ИмяПоляКоманды					 - Строка 
//  ТипПользователя					 - ПеречислениеСсылка.ТипыПользователейЗадач 
//  ДоступностьСостоянийПоУмолчанию	 - Соответствие - Перечень запрещенных состояний. См. СостояниеДоступностиПоУмолчанию() 
// 
// Возвращаемое значение:
//  Таблица значений - состоит из колонок:
//		* ИмяПоляКоманды - Строка
//		* ПредставлениеПоляКоманды - Строка
//		* Состояние - СправочникСсылка.СостоянияЗадач
//		* Доступность - ПеречислениеСсылка.ДоступностьПолей
//		* РеквизитДопУпорядочивания - Число - для сортировки
//
Функция ТаблицаНастроекДоступностиПоУмолчанию(Знач ИмяПоляКоманды, Знач ПредставлениеПоляКоманды, ТипПользователя, ДоступностьСостоянийПоУмолчанию)
	
	НастройкиДоступности = Новый ТаблицаЗначений;
	НастройкиДоступности.Колонки.Добавить("ИмяПоляКоманды");
	НастройкиДоступности.Колонки.Добавить("ПредставлениеПоляКоманды");
	НастройкиДоступности.Колонки.Добавить("Состояние");
	НастройкиДоступности.Колонки.Добавить("Доступность");
	НастройкиДоступности.Колонки.Добавить("РеквизитДопУпорядочивания");
	
	// запрещенные состояния
	МассивЗапрещенныхСостояний = Новый Массив;
	Для каждого ТекДоступность Из ДоступностьСостоянийПоУмолчанию Цикл
		
		Если Не СостояниеЗапрещено(ТипПользователя, ТекДоступность.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивЗапрещенныхСостояний.Добавить(ТекДоступность.Ключ);
		
		НовСтрокаДоступности = НастройкиДоступности.Добавить();
		НовСтрокаДоступности.ИмяПоляКоманды = ИмяПоляКоманды;
		НовСтрокаДоступности.ПредставлениеПоляКоманды = ПредставлениеПоляКоманды;
		НовСтрокаДоступности.Состояние = ТекДоступность.Ключ;
		НовСтрокаДоступности.Доступность = Перечисления.ДоступностьПолей.Недоступно;
		НовСтрокаДоступности.РеквизитДопУпорядочивания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекДоступность.Ключ, "РеквизитДопУпорядочивания");
		
	КонецЦикла;
	
	// разрешенные состояния (все кроме запрещенных)
	ТаблицаРазрешенныхСостояний = Справочники.СостоянияЗадач.ВсеАктуальныеСостояния(МассивЗапрещенныхСостояний, Истина);
	
	Для каждого РазрешенноеСостояние Из ТаблицаРазрешенныхСостояний Цикл
		
		НовСтрокаДоступности = НастройкиДоступности.Добавить();
		НовСтрокаДоступности.ИмяПоляКоманды = ИмяПоляКоманды;
		НовСтрокаДоступности.ПредставлениеПоляКоманды = ПредставлениеПоляКоманды;
		НовСтрокаДоступности.Состояние = РазрешенноеСостояние.Состояние;
		НовСтрокаДоступности.Доступность = Перечисления.ДоступностьПолей.Доступно;
		НовСтрокаДоступности.РеквизитДопУпорядочивания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РазрешенноеСостояние.Состояние, "РеквизитДопУпорядочивания");
		
	КонецЦикла;
	
	Возврат НастройкиДоступности;	

КонецФункции // ТаблицаНастроекДоступностиПоУмолчанию()

Функция СостояниеЗапрещено(ТипПользователя, Знач СтрокаСРазделителем)
	
	МассивСтрокТипыПользователейЗадач = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаСРазделителем,";",Истина,Истина);
	МассивТипыПользователейЗадач = Новый Массив;
	
	// преобразуем массив строк в массив перечислений ТипыПользователейЗадач	
	Для каждого ТекЗначение Из МассивСтрокТипыПользователейЗадач Цикл
		МассивТипыПользователейЗадач.Добавить(Перечисления.ТипыПользователейЗадач[ТекЗначение]);
	КонецЦикла;
	
	Возврат МассивТипыПользователейЗадач.Найти(ТипПользователя) <> Неопределено;

КонецФункции 

Функция ВариантОграниченияПоУмолчаниюДляПоля(ИмяПоляКоманды)

	Если ИмяПоляКоманды = "Описание" 
		Или ИмяПоляКоманды = "Заголовок" 
		Или ИмяПоляКоманды = "Исполнитель" 
		Или ИмяПоляКоманды = "ВыполнитьЗадачу" 
		Или ИмяПоляКоманды = "ПринятьКИсполнению" 
		Или ИмяПоляКоманды = "ДобавлениеФайлов" 
		Или ИмяПоляКоманды = "СостояниеЗадачи" 
		Или ИмяПоляКоманды = "РезультатГиперссылка" 
		Или ИмяПоляКоманды = "РабочаяГруппа"  
		Или ИмяПоляКоманды = "Оценка" 
		Тогда
		
		Возврат Перечисления.ВариантыОграниченияДоступаНаФорме.ТолькоПросмотр;
		
	КонецЕсли;	
	
	Возврат Перечисления.ВариантыОграниченияДоступаНаФорме.Видимость;
	
КонецФункции // ВариантОграниченияПоУмолчаниюДляПоля()

#КонецОбласти

#КонецЕсли
