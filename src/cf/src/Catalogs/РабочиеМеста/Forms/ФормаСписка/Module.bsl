
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКупоросСервер.ПриСозданииНаСервереФормыВыбора(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" Тогда
		Элементы.Список.Обновить();
		Элементы.СписокОборудования.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если Элемент.ТекущаяСтрока = Неопределено 
		Или ТипЗнч(Элемент.ТекущаяСтрока) <> Тип("СправочникСсылка.РабочиеМеста")  Тогда
		
		СписокОборудования.Параметры.УстановитьЗначениеПараметра("РабочееМесто", ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка"));	
		
		СписокСертификатов.Параметры.УстановитьЗначениеПараметра("РабочееМесто", ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка"));	
		
		Возврат;
		
	КонецЕсли;
	
	СписокОборудования.Параметры.УстановитьЗначениеПараметра("РабочееМесто", Элемент.ТекущаяСтрока);	
	
	СписокСертификатов.Параметры.УстановитьЗначениеПараметра("РабочееМесто", Элемент.ТекущаяСтрока);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		 Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Отказ = Истина;
	
	Организация = ОрганизацияИзСсылки(Элемент.ТекущаяСтрока);
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Организация", Организация);
	ЗначенияЗаполнения.Вставить("Родитель", Элемент.ТекущаяСтрока);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);

	Открытьформу("Справочник.РабочиеМеста.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОборудования

&НаКлиенте
Процедура СписокОборудованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		 Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Отказ = Истина;
	
	СсылкаНаРабочееМеста = Элементы.Список.ТекущаяСтрока;	
	
	Организация = ОрганизацияИзСсылки(СсылкаНаРабочееМеста);
	
	//создать новый элемент оборудования
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Организация", Организация);
	ЗначенияЗаполнения.Вставить("РабочееМесто", СсылкаНаРабочееМеста);
	ЗначенияЗаполнения.Вставить("Количество", 1);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.УчетОборудованияРабочихМест.ФормаЗаписи", ПараметрыФормы, Элемент);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Значение.Количество()>0 Тогда
		СписокПеретаскиваниеНаСервере(ПараметрыПеретаскивания.Значение,Строка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокОборудованияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Элемент.ТекущиеДанные=Неопределено Тогда
	   Возврат;
	КонецЕсли;
	
	Номенклатура = НоменклатураИзСсылки(Строка);
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	МассивИменФайлов = Новый Массив;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл")
	   И ПараметрыПеретаскивания.Значение.ЭтоФайл() = Истина Тогда
		
		МассивИменФайлов.Добавить(ПараметрыПеретаскивания.Значение.ПолноеИмя);
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Если ПараметрыПеретаскивания.Значение.Количество() >= 1
		   И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Файл") Тогда
			
			Для каждого Значение Из ПараметрыПеретаскивания.Значение Цикл
				
				Если ТипЗнч(Значение) = Тип("Файл") И Значение.ЭтоФайл() Тогда
					МассивИменФайлов.Добавить(Значение.ПолноеИмя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
	КонецЕсли;
	
	Если МассивИменФайлов.Количество() > 0 Тогда
		
		РаботаСФайламиСлужебныйКлиент.ДобавитьФайлыПеретаскиванием(
			Номенклатура, УникальныйИдентификатор, МассивИменФайлов);
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСписокИнструментовДляДругихРабочихМест(Команда)
	
	ТС = Элементы.Список.ТекущаяСтрока;
	
	СписокРабочихМест = ПолучитьСписокЗначенийРабочихМест(ТС);

	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ЗаполнитьСписокИнструментовДляДругихРабочихМестЗавершение", ЭтотОбъект, Новый Структура("ТС", ТС)), СписокРабочихМест);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокИнструментовДляДругихРабочихМестЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    ТС = ДополнительныеПараметры.ТС;
    
    ВыбрЗнч = ВыбранныйЭлемент;
    Если ВыбрЗнч<>Неопределено Тогда
        
        СкопироватьСписокИнструментов(ТС,ВыбрЗнч.Значение);
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОрганизацию(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Организация = ОрганизацияИзСсылки(ТекущиеДанные);
	
	ПоказатьЗначение(,Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура УдаленноеУправление(Команда)
	
	УдаленноеУправлениеКлиент.ПодключениеКРабочемуМестуПоОсновнойСхеме(Элементы.Список.ТекущаяСтрока);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)
	
	ТекущиеДанные = Элементы.СписокОборудования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Номенклатура = НоменклатураИзСсылки(ТекущиеДанные);
	
	ПоказатьЗначение(,Номенклатура);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура СписокПеретаскиваниеНаСервере(МассивДанных,НовоеРабочееМесто)
		
	Для каждого ТекСтрокаМассива Из МассивДанных Цикл
		Если ТипЗнч(ТекСтрокаМассива) = Тип("РегистрСведенийКлючЗаписи.УчетОборудованияРабочихМест") Тогда
			
			МенеджерЗаписи = РегистрыСведений.УчетОборудованияРабочихМест.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ТекСтрокаМассива,"Организация,РабочееМесто,Номенклатура");
			МенеджерЗаписи.Прочитать();
			
			МенеджерЗаписи.Организация  = НовоеРабочееМесто.Организация;
			МенеджерЗаписи.РабочееМесто = НовоеРабочееМесто;
			МенеджерЗаписи.Записать();
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЗначенийРабочихМест(ТекущаяСтрока)
  	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	РабочиеМеста.Ссылка
	                |ИЗ
	                |	Справочник.РабочиеМеста КАК РабочиеМеста
	                |ГДЕ
	                |	РабочиеМеста.Ссылка <> &Ссылка
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	РабочиеМеста.Наименование";
	 
	 Запрос.УстановитьПараметр("Ссылка", ТекущаяСтрока);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выгрузить();
	 МассивРабМест = Выборка.ВыгрузитьКолонку("Ссылка");
	 
	 СписокРабочихМест = Новый СписокЗначений;
	 СписокРабочихМест.ЗагрузитьЗначения(МассивРабМест);

	 
	 Возврат СписокРабочихМест;
	 
КонецФункции

&НаСервере
Процедура СкопироватьСписокИнструментов(Источник,Приемник)
	
	ОбъектОбр = Приемник.ПолучитьОбъект();
	ОбъектОбр.СписокРабочихИнструментов.Очистить();
	
	Для каждого стр Из Источник.СписокРабочихИнструментов Цикл
		стрНов = ОбъектОбр.СписокРабочихИнструментов.Добавить();
		стрНов.ВидНоменклатуры = стр.ВидНоменклатуры; 
	КонецЦикла;
	ОбъектОбр.Записать();
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Скопированы инструменты для: %1.'"), Приемник);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОрганизацияИзСсылки(СсылкаНаЭлемент) 
	
	Результат = Справочники.Организации.ПустаяСсылка();
	
	Если СсылкаНаЭлемент = Неопределено Тогда
		Возврат Результат;	
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаЭлемент)=Тип("СправочникСсылка.РабочиеМеста") Тогда
		Результат = СсылкаНаЭлемент.Организация;	
	Иначе
		Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаЭлемент.Ссылка, "Организация");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция НоменклатураИзСсылки(СсылкаНаЭлемент) 
	
	Результат = Справочники.Номенклатура.ПустаяСсылка();
	
	Если СсылкаНаЭлемент = Неопределено Тогда
		Возврат Результат;	
	КонецЕсли;
	
	Результат = СсылкаНаЭлемент.Номенклатура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

