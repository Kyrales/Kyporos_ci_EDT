#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СОЗДАНИЯ ФАЙЛА v8i

Процедура СоздатьФайл_v8iНаСервере(Объект, ПутьПолныйКФайлу) Экспорт
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	
	// название базы
	ТекстовыйФайл.ДобавитьСтроку("["+Объект.Наименование+"]");
	
	// Connect
	Если Объект.ТипРасположенияИБ=0 Тогда
	    // сервер
		СтрокаПодключения = "Srvr = """ + СокрЛП(Объект.Сервер1С) + """; Ref = """ + СокрЛП(Объект.ИмяБазыНаСервере) + """";
	ИначеЕсли Объект.ТипРасположенияИБ=1 Тогда
		// файловая база
		СтрокаПодключения = "File=""" + СокрЛП(Объект.КаталогИБ) + """";
	Иначе
		// веб-сервер
		СтрокаПодключения = "ws=""" + СокрЛП(Объект.КаталогИБ) + """";	
	КонецЕсли;	
	ТекстовыйФайл.ДобавитьСтроку("Connect="+СтрокаПодключения);
	
	// Folder
	ТекстовыйФайл.ДобавитьСтроку("Folder="+?(Объект.Родитель.Пустая(),"/",ПолучитьСтроковыйПутьFolder(Объект.Родитель)));
	
	// Режим запуска
	ТекстовыйФайл.ДобавитьСтроку("App="+Объект.РежимЗапуска);
	
	// Система должна использовать windows авторизацию
	ТекстовыйФайл.ДобавитьСтроку("WA=1");
	
	// Версия 1С
	ТекстовыйФайл.ДобавитьСтроку("Version="+Объект.ВерсияПлатформы);
	
	Если СокрЛП(Объект.ДополнительныеПараметрыЗапуска)<>"" Тогда
		ТекстовыйФайл.ДобавитьСтроку("AdditionalParameters="+Объект.ДополнительныеПараметрыЗапуска);
	КонецЕсли;
	
	Попытка
		ТекстовыйФайл.Записать(ПутьПолныйКФайлу, КодировкаТекста.UTF8);	
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
		
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Обновлен файл параметров базы 1С: %1.'"), ПутьПолныйКФайлу);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
	Объект.ОписаниеВФормате_v8i = ТекстовыйФайл.ПолучитьТекст();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАПУСКА ПРЕДПРИЯТИЯ И КОНФИГУРАТОРА

Функция ПолучитьКомандуОткрытияВРежимеКонфигуратора(ИнформационнаяБаза, ПутьКИсполняемомуФайлуПлатформы = Неопределено) Экспорт 			
	
	Если ПутьКИсполняемомуФайлуПлатформы = Неопределено Тогда 
		ПутьКИсполняемомуФайлуПлатформы = ПолучитьПутьКИсполняемомуФайлуПлатформы(ИнформационнаяБаза, Истина); 
	КонецЕсли;
	
	Возврат ПутьКИсполняемомуФайлуПлатформы + " CONFIG " + ПолучитьПараметрПодключенияПоТипуБазы(ИнформационнаяБаза) + " /DisableStartupMessages " + ПолучитьСтрокуПараметровАвторизации(ИнформационнаяБаза);
	
КонецФункции

Функция ПолучитьКомандуОткрытияВРежимеПредприятия(ИнформационнаяБаза, ПутьКИсполняемомуФайлуПлатформы = Неопределено) Экспорт 			
	
	Если ПутьКИсполняемомуФайлуПлатформы = Неопределено Тогда 
		ПутьКИсполняемомуФайлуПлатформы = ПолучитьПутьКИсполняемомуФайлуПлатформы(ИнформационнаяБаза); 
	КонецЕсли;
	
	Возврат ПутьКИсполняемомуФайлуПлатформы + " ENTERPRISE " + ПолучитьПараметрПодключенияПоТипуБазы(ИнформационнаяБаза) + " /DisableStartupMessages " + ПолучитьСтрокупараметровАвторизации(ИнформационнаяБаза);
	
КонецФункции

Функция ПолучитьПутьКИсполняемомуФайлуПлатформы(ИнформационнаяБаза, ЭтоКонфигуратор = Ложь) Экспорт
	
	Если ЭтоКонфигуратор Тогда	
		Возврат """" + КаталогПрограммы() + "1cv8.exe""";
	КонецЕсли;
	
	РеквизитыИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИнформационнаяБаза, "РежимЗапуска, ТипРасположенияИБ");
	ЗначениеТолстыйКлиент = "ThickClient";
	ЗначениеТипРасположенияНаВебСервере = 2;
	
	Если РеквизитыИБ.ТипРасположенияИБ = ЗначениеТипРасположенияНаВебСервере Тогда
		// веб-сервер
		Возврат "" + КаталогПрограммы() + "1cv8s.exe""";
	ИначеЕсли РеквизитыИБ.РежимЗапуска = ЗначениеТолстыйКлиент Тогда
		Возврат "" + КаталогПрограммы() + "1cv8.exe""";
	Иначе	
		Возврат "" + КаталогПрограммы() + "1cv8c.exe""";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПараметрПодключенияПоТипуБазы(ИнформационнаяБаза) Экспорт
	
	СтрокаДанных = "";
	Если ИнформационнаяБаза.ТипРасположенияИБ = 1 Тогда
		// файловый
		СтрокаДанных =  "/F""" + ИнформационнаяБаза.КаталогИБ + """";
	ИначеЕсли ИнформационнаяБаза.ТипРасположенияИБ = 0 
		Или ИнформационнаяБаза.ТипРасположенияИБ = 2 Тогда
		// серверный/веб-серверный
		СтрокаДанных = ?(ИнформационнаяБаза.ТипРасположенияИБ = 2, "/WS""","/S""")
					+  ?(ИнформационнаяБаза.ТипРасположенияИБ = 2,
								ИнформационнаяБаза.КаталогИБ+ """", 
								СокрЛП(ИнформационнаяБаза.Сервер1С) + "\" + ИнформационнаяБаза.ИмяБазыНаСервере + """");
	КонецЕсли;
	
	Возврат СтрокаДанных;	
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтрокуПараметровАвторизации(ИнформационнаяБаза)
	
	//Пользователь = "";
	//Пароль = "";
	//КодБлокировкиСеансов = "";
	//АвторизацияWindows = "/WA-";
	//Если ЗначениеЗаполнено(ИнформационнаяБаза.Пользователь) Тогда 
	//	Пользователь = ИнформационнаяБаза.Пользователь.Наименование;
	//	Пароль = ИнформационнаяБаза.Пользователь.Пароль;		
	//	Если ИнформационнаяБаза.Пользователь.АвторизацияWindows Тогда АвторизацияWindows = "/WA+"; КонецЕсли;
	//	Если ЗначениеЗаполнено(ИнформационнаяБаза.Пользователь.КодБлокировкиСеансов) Тогда 
	//		КодБлокировкиСеансов = "/UC """ + ИнформационнаяБаза.Пользователь.КодБлокировкиСеансов + """";
	//	КонецЕсли;
	//КонецЕсли;
	//Возврат АвторизацияWindows + " /N""" + Пользователь + """ /P""" + Пароль + """" + " " + КодБлокировкиСеансов;
	
	Возврат "";
	
КонецФункции

Функция ПолучитьСтроковыйПутьFolder(Родитель) 
	// Пример: /Администрирование/Группа1
	
	Если Родитель.Пустая() Тогда
		 Возврат "";
	КонецЕсли;
	
	МассивЗначенийДанных = Новый Массив;
	
	ТекущийРодитель = Родитель;	
	МассивЗначенийДанных.Добавить(ТекущийРодитель);
	Пока Не ТекущийРодитель.Родитель.Пустая() Цикл
		МассивЗначенийДанных.Вставить(0,ТекущийРодитель.Родитель);
		ТекущийРодитель = ТекущийРодитель.Родитель;
	КонецЦикла;
	
	// формируем строку
	СтрокаОбрабатываемая = "";
	Для каждого ТекСтрокаЗначения Из МассивЗначенийДанных Цикл
		 СтрокаОбрабатываемая = СтрокаОбрабатываемая + "/"+ТекСтрокаЗначения.Наименование;
	КонецЦикла;
	
	Возврат СтрокаОбрабатываемая;
	
КонецФункции

#КонецОбласти

#КонецЕсли

