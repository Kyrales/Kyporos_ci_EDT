#Область ОписаниеПеременных

&НаКлиенте
Перем НужноЗаписатьФорму; // Для возможности подконтрольной записи файлов настроек 1С.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	Если Не Объект.Ссылка.Пустая() Тогда
		ЗаполнитьНачальнуюТаблицуСпискаПравДоступаОбъектов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииТипаРасположенияИБ();
	
	УстановитьСписокВыбораПоВыражению();
	
	ОбновитьОтображениеЭлементовФормы();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не НужноЗаписатьФорму Тогда
		Если ТребуетсяОбновитьНастройкиФайлаСпискаБаз1С 
			И Объект.ПутьКФайлуБазы_v8i <> "" Тогда
			
			Отказ = Истина;
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Есть изменения в параметрах базы! Произвести обновления файла v8i?'"), 
				РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
			
		КонецЕсли;
	КонецЕсли;
	
	НужноЗаписатьФорму = Ложь;
	
	ОбновитьОтображениеЭлементовФормы();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(РезультатВопроса, Параметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СоздатьФайл_v8iСервер(Объект.ПутьКФайлуБазы_v8i);
		ТребуетсяОбновитьНастройкиФайлаСпискаБаз1С = Ложь;
	КонецЕсли;
	
	НужноЗаписатьФорму = Истина;
	Записать();
	
КонецПроцедуры // ПослеЗаписиЗавершение()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ПутьКФайлуБазы_v8i <> "" Тогда
	
		ОбновитьФайлыНастроекСпискаБазПользователейСервер(Объект.Ссылка, Истина);
	
	КонецЕсли;
	
	Оповестить("Запись_СпискаИнформационныхБаз1С");

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ИспользоватьВебСервисДляОбновленияСпискаБаз Тогда
		
		НачальнаяТаблица = НачальныйСписокПользователейДоступа.Выгрузить();
		
		ТаблицаДоступа = Объект.СписокПравДоступа.Выгрузить();
		МассивДоступов = ТаблицаДоступа.ВыгрузитьКолонку("ОбъектДоступа");
		КонечнаяТаблица = РаботаСоСтруктуройКаталоговAD.СписокПользователейПоМассивуОбъектовДоступа(МассивДоступов);
		
		РаботаСоСтруктуройКаталоговAD.СравнениеТаблицДляОбновленияСпискаОбщихБазПользователей(НачальнаяТаблица, КонечнаяТаблица);			
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();

КонецПроцедуры

&НаКлиенте
Процедура ТипРасположенияИБПриИзменении(Элемент)
	
	ПриИзмененииТипаРасположенияИБ();
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПлатформыПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура Сервер1СПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
	Если Объект.ИмяБазыНаСервере <> "" Тогда
		Объект.ИмяБазыНаСервереSQL = Объект.ИмяБазыНаСервере;
		Объект.ИмяФайлаВыгрузки    = Объект.ИмяБазыНаСервере + ".bak";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяБазыНаСервереПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗапускаПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогИБПриИзменении(Элемент)
	
	Если Объект.ТипРасположенияИБ = 1 
		И Объект.КаталогИБ <> "" Тогда
		Объект.КаталогИБ = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Объект.КаталогИБ);
	КонецЕсли;
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуБазы_v8iПриИзменении(Элемент)
	
	ОбновитьОтображениеЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПараметрыЗапускаПриИзменении(Элемент)
	
	ТребуетсяИзменениеФайлаСпискаБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеСпискаПравДоступаНажатие(Элемент)
	
	Если Объект.ИспользоватьВебСервисДляОбновленияСпискаБаз Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Установлен режим ""Использовать веб-сервис для обновления списка баз"". 
                                                          |В данном режиме обновление файлов настроек не актуально.'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Объект необходимо записать перед обновлением файла настроек списка баз пользователей.'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.ПутьКФайлуБазы_v8i <> "" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Путь к файлу базы v8i не заполнен.'"));
		Возврат;
	КонецЕсли;
	
	ОбновитьФайлыНастроекСпискаБазПользователейСервер(Объект.Ссылка);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПравДоступа

&НаКлиенте
Процедура СписокПравДоступаОбъектДоступаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = Истина;	
	Если ЗначениеЗаполнено(Элементы.СписокПравДоступа.ТекущиеДанные.ОбъектДоступа) Тогда
		Элемент.ВыбиратьТип = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьФайл_v8i(Команда)
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ВыборФайла.ПолноеИмяФайла = Объект.ПутьКФайлуБазы_v8i;
	ВыборФайла.Фильтр = "Файлы (*.v8i|*.v8i";
	ВыборФайла.Заголовок = НСтр("ru = 'Выберите или создайте новый файл v8i'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьФайл_v8iЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОписаниеОповещения, ВыборФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайл_v8iЗавершение(СписокИменФайлов, ДополнительныеПараметры) Экспорт
	
	Если СписокИменФайлов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = СписокИменФайлов[0];
	
	Объект.ПутьКФайлуБазы_v8i = ПолноеИмяФайла;
	
	СоздатьФайл_v8iСервер(ПолноеИмяФайла);

КонецПроцедуры 

&НаСервере
Процедура СоздатьФайл_v8iСервер(ПутьКФайлуБазы_v8i)
	
	Справочники.СписокИнформационныхБаз1С.СоздатьФайл_v8iНаСервере(Объект, ПутьКФайлуБазы_v8i);

КонецПроцедуры // СоздатьФайл_v8iСервер()

&НаКлиенте
Процедура ИзменитьДатуПараметровБазы(Команда)
	
	Объект.ДатаИзмененияПараметровБазы = ОбщегоНазначенияКлиент.ДатаСеанса();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЗакладкиРезервноеКопирование

//////////////////////////////////////////////////////////////////////////////////////////
// ЗАКЛАДКА "Резервное копирование"

&НаКлиенте
Процедура ПапкаДляВыгрузокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПапкаДляВыгрузокНачалоВыбораЗавершение", ЭтотОбъект);
	ФайловаяСистемаКлиент.ВыбратьКаталог(ОписаниеОповещения, НСтр("ru = 'Выберите каталог'"), Объект.ПапкаДляВыгрузок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаДляВыгрузокНачалоВыбораЗавершение(ИмяКаталога, Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПапкаДляВыгрузок = ИмяКаталога;

КонецПроцедуры 

&НаКлиенте
Процедура ПапкаДляВыгрузокПриИзменении(Элемент)
	
	Если Объект.ПапкаДляВыгрузок <> "" Тогда
		Объект.ПапкаДляВыгрузок = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Объект.ПапкаДляВыгрузок);
		Объект.ПапкаДляВыгрузок = Лев(Объект.ПапкаДляВыгрузок, СтрДлина(Объект.ПапкаДляВыгрузок) - 1);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СерверSQLПриИзменении(Элемент)
	
	Объект.ПапкаДляВыгрузок = ПолучитьПапкуДляВыгрузкиSQLПоУмолчанию();

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоединениеSQL(Команда)
	
	Записать();
	
	УправлениеРезервнымКопированиемВызовСервера.ВыполнитьПодключениеПоНастройке(СоздатьОбразНастройкиПоЭлементуСервер(), Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРезервноеКопированиеБазыДанных(Команда)
	
	Записать();
	
	УправлениеРезервнымКопированиемВызовСервера.ВыполнитьРезервноеКопированиеПоНастройке(СоздатьОбразНастройкиПоЭлементуСервер(), Истина);	
	
КонецПроцедуры

&НаСервере
Функция СоздатьОбразНастройкиПоЭлементуСервер() 
	
	ОбъектДанных = РеквизитФормыВЗначение("Объект");
	
	Возврат УправлениеРезервнымКопированиемВызовСервера.СоздатьОбразНастройкиПоЭлементу(ОбъектДанных);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВосстановленияБазыДанных(Команда)
	
	Записать();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Источник",  Объект.Ссылка);
	
	ОткрытьФорму("Справочник.СписокИнформационныхБаз1С.Форма.ВосстановлениеИнформационнойБазы", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриИзменении(Элемент)
	
	УстановитьСписокВыбораПоВыражению();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСписокВыбораПоВыражению() 
	
	Если Объект.Выражение Тогда
		Элементы.ИмяФайлаВыгрузки.КнопкаВыпадающегоСписка = Истина;
		Элементы.ИмяФайлаВыгрузки.СписокВыбора.Очистить();
		Элементы.ИмяФайлаВыгрузки.СписокВыбора.Добавить("""" + Объект.ИмяБазыНаСервереSQL + "_""" 
			+ "+Формат(ТекущаяДата(), ""ДФ=yyyy_MM_dd"")" + "+"".bak""");
		Элементы.ИмяФайлаВыгрузки.СписокВыбора.Добавить("""" + Объект.ИмяБазыНаСервереSQL + "_""" 
			+ "+Формат(ТекущаяДата(), ""ДФ=yyyyMMddЧмм"")" + "+"".bak""");
	Иначе
		Элементы.ИмяФайлаВыгрузки.КнопкаВыпадающегоСписка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПапкуДляВыгрузкиSQLПоУмолчанию() 
		
	Возврат Объект.СерверSQL.ПапкаДляВыгрузокПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииТипаРасположенияИБ()
	
	Если Объект.ТипРасположенияИБ = 0 Тогда
		
		Элементы.ПанельПараметрыПодключенияКИБ.ТекущаяСтраница = Элементы.СтраницаПараметрыПодключенияКИБКлиентСервер;
		
	Иначе
		
		Элементы.ПанельПараметрыПодключенияКИБ.ТекущаяСтраница = Элементы.СтраницаПараметрыПодключенияКИБФайлСервер;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура установки флага требования обновления файла базы 1С при записи
&НаКлиенте
Процедура ТребуетсяИзменениеФайлаСпискаБаз() 
	
	Если (Не Объект.Ссылка.Пустая()) 
		И Объект.ПутьКФайлуБазы_v8i <> "" Тогда
		ТребуетсяОбновитьНастройкиФайлаСпискаБаз1С = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлыНастроекСпискаБазПользователейСервер(ИнформационнаяБазаЗапуска, ТолькоИзменения = Ложь) 
	
	Если ИнформационнаяБазаЗапуска.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НачальныйФлагИспользуется <> Объект.Используется Тогда
		// При отличии флага использования от начального состояния обновлять необходимо всех.
		
		МассивПользователей = ПолучитьМассивИзмененныхПравДоступа();
		МассивПользователей2 = ИнформационнаяБазаЗапуска.СписокПравДоступа.ВыгрузитьКолонку("ОбъектДоступа");	
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПользователей, МассивПользователей2, Истина);
		
	ИначеЕсли ТолькоИзменения Тогда
		
		МассивПользователей = ПолучитьМассивИзмененныхПравДоступа();
		
	Иначе
		
		МассивПользователей = ИнформационнаяБазаЗапуска.СписокПравДоступа.ВыгрузитьКолонку("ОбъектДоступа");	
		
	КонецЕсли;
	
	Если МассивПользователей.Количество() > 0 Тогда
		
		РаботаСоСтруктуройКаталоговAD.ОбновитьФайлыНастроекСпискаБазПользователейПоСписку(МассивПользователей);
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Обновление настроек списка баз пользователей по элементу %1 завершено.'"), Объект.Ссылка);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;	
	
	ЗаполнитьНачальнуюТаблицуСпискаПравДоступаОбъектов();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальнуюТаблицуСпискаПравДоступаОбъектов()

	ТаблицаДоступа = Объект.СписокПравДоступа.Выгрузить();
	НачальныйСписокОбъектовДоступа.Загрузить(ТаблицаДоступа);
	
	МассивДоступов = ТаблицаДоступа.ВыгрузитьКолонку("ОбъектДоступа");
	ТаблицаНачальныхПользователей = РаботаСоСтруктуройКаталоговAD.СписокПользователейПоМассивуОбъектовДоступа(МассивДоступов);
	НачальныйСписокПользователейДоступа.Загрузить(ТаблицаНачальныхПользователей);
	
	НачальныйФлагИспользуется = Объект.Используется;
	
КонецПроцедуры // ЗаполнитьНачальнуюТаблицуСпискаПравДоступаОбъектов()

&НаСервере
Функция ПолучитьМассивИзмененныхПравДоступа()

	МассивИзмененныхДанных = Новый Массив;
	ТаблицаНачальная = РеквизитФормыВЗначение("НачальныйСписокОбъектовДоступа");
		
	Для каждого ТекСтрока Из Объект.СписокПравДоступа Цикл
		
		 НайденнаяСтрокаТаблицыНачальной = ТаблицаНачальная.Найти(ТекСтрока.ОбъектДоступа, "ОбъектДоступа"); 
		 Если НайденнаяСтрокаТаблицыНачальной = Неопределено Тогда
		 	 МассивИзмененныхДанных.Добавить(ТекСтрока.ОбъектДоступа);
		 Иначе
			 ТаблицаНачальная.Удалить(НайденнаяСтрокаТаблицыНачальной);
		 КонецЕсли;
	
	КонецЦикла;
	
	Для каждого ТекСтрока Из ТаблицаНачальная Цикл
	     // все оставшиеся требуют изменения, т.к. были удалены из таблицы
		 МассивИзмененныхДанных.Добавить(ТекСтрока.ОбъектДоступа);
	КонецЦикла;
	
	Возврат МассивИзмененныхДанных;
	
КонецФункции // ПолучитьМассивИзмененныхПравДоступа()

&НаКлиенте
Процедура ОбновитьОтображениеЭлементовФормы()

	Если Объект.ПутьКФайлуБазы_v8i <> "" Тогда
		Элементы.ПараметрыПути.ЗаголовокСвернутогоОтображения = "Параметры пути: " + Объект.ПутьКФайлуБазы_v8i;	
	Иначе
		Элементы.ПараметрыПути.ЗаголовокСвернутогоОтображения = "Параметры пути";
	КонецЕсли;

КонецПроцедуры // ОбновитьОтображениеЭлементовФормы()

#КонецОбласти

#Область Инициализация

НужноЗаписатьФорму = Ложь;

#КонецОбласти
