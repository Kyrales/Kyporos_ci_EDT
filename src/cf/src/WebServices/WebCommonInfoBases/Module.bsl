
// Вызываемый сервис из окна запуска 1С для попытки получения списка информационных баз
//	см. описание сервиса: https://its.1c.ru/db/v836doc#bookmark:adm:TI000000424
//
// Параметры:
//  ClientID			 - Число 
//  InfoBasesCheckCode	 - Число 
//  InfoBasesChanged	 - Булево 
//  URL					 - Строка - адрес передаваемый ответом для дальнейшего вызова операциии GetInfoBases 
// 
// Возвращаемое значение:
//  Булево - Истина, в случае если процедура прошла успешна 
//
Функция CheckInfoBases(ClientID, InfoBasesCheckCode, InfoBasesChanged, URL)
	
	// Фиксация в журнале.
	ИмяСобытияВход = "Администрирование.УправлениеСетью.WebCommonInfoBases.CheckInfoBases";
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Начало работы CheckInfoBases. ClientID: %1, InfoBasesCheckCode: %2'"), ClientID, InfoBasesCheckCode);
	
	ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
			
	БазоваяСсылкаДляАутентификации = "/webcommoninfobasesauth/ws/webcommoninfobases";
			
    Если ClientID = "00000000-0000-0000-0000-000000000000"
        И InfoBasesCheckCode = "00000000-0000-0000-0000-000000000000" Тогда
        // Это первое обращение к ярлыку баз пользователя.
        InfoBasesChanged = Истина;
        URL = БазоваяСсылкаДляАутентификации;
        Возврат Истина;
    КонецЕсли;	
	
	ПользовательСписка = Справочники.СписокОбщихБазПользователей.НайтиПоКоду(ClientID);
	
	Если ПользовательСписка.Пустая() Тогда
		// Пользователь ранее обращался к ярлыку, но в спр. СписокОбщихБазПользователей не был заведен.
		
        InfoBasesChanged = Истина;
        URL = БазоваяСсылкаДляАутентификации;
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Пользователь в списке общих баз не найден, отправляем на переидентификацию ClientID в GetInfoBases. 
                                         |ClientID: %1, InfoBasesCheckCode: %2'"), ClientID, InfoBasesCheckCode);
	
		ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);

		
		Возврат Истина;
		
	КонецЕсли;
	
	Если ПользовательСписка.КодСписка = InfoBasesCheckCode Тогда
		
		// Список не поменялся, запрос к базам не делаем.
		InfoBasesChanged = Ложь;
		URL = "";
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Список баз не менялся у пользователя %1. ClientID: %2, InfoBasesCheckCode: %3'"), 
			ПользовательСписка, ClientID, InfoBasesCheckCode);
	
		ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
		
		Возврат Ложь;
		
	КонецЕсли;
	
	// Есть изменения в списке баз для пользователя.
	URL = БазоваяСсылкаДляАутентификации;
	InfoBasesChanged = Истина;
	
	// Фиксация в журнале.
	ТекстСообщения = СтрШаблон(НСтр("ru = 'У пользователя %1 менялся список баз, отправляем на идентификацию в GetInfoBases. 
                                     |ClientID: %2, InfoBasesCheckCode: %3'"), ПользовательСписка, ClientID, InfoBasesCheckCode);
	
	ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
	
	Возврат Истина;
	
КонецФункции

// Получение списка информационных баз из сервиса 1С. 1С обращается из сервису окна запуска
//	см. описание сервиса: https://its.1c.ru/db/v836doc#bookmark:adm:TI000000424
//
// Параметры:
//  ClientID			 - Число 
//  InfoBasesCheckCode	 - Число 
//  InfoBases			 - Строка - список информационных баз в формате v8i
// 
// Возвращаемое значение:
//  Булево - Истина, в случае если процедура прошла успешна 
//
Функция GetInfoBases(ClientID, InfoBasesCheckCode, InfoBases)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Фиксация в журнале.
	ИмяСобытияВход = "Администрирование.УправлениеСетью.WebCommonInfoBases.GetInfoBases";
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Начало работы GetInfoBases. ClientID: %1, InfoBasesCheckCode: %2'"), 
		ClientID, InfoBasesCheckCode);
	
	ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
	
	ClientID = "00000000-0000-0000-0000-000000000000";	
	InfoBases = "";
	
	// Определение текущего пользователя подключившегося по веб-сервису с аутентификацией Windows.
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	
	
	// Поиск ранее подготовленных списков общих баз для текущего пользователя.
	НайденныйСписокБаз = Справочники.СписокОбщихБазПользователей.НайтиПоРеквизиту("Пользователь", ТекущийПользователь);
	
	Если Не ЗначениеЗаполнено(НайденныйСписокБаз) Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Пользователь %4 не найден в справочнике ""Список общих баз пользователей"", 
                                         |ClientID: %1, InfoBasesCheckCode: %2, InfoBases: %3'"), 
			ClientID, InfoBasesCheckCode, InfoBases, ТекущийПользователь);
		
		ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
		Возврат Ложь;
		
	КонецЕсли;
	
	РеквизитыДанныхПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НайденныйСписокБаз, "Код, КодСписка, СписокИБ");
	
	// Заполнение выходных параметров для кэша пользователя.
	ClientID = РеквизитыДанныхПользователя.Код;
	InfoBasesCheckCode = РеквизитыДанныхПользователя.КодСписка;
	InfoBases = РеквизитыДанныхПользователя.СписокИБ;
	
	// Фиксация в журнале.
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Список баз актуализирован у пользователя: %4, ClientID: %1, InfoBasesCheckCode: %2, InfoBases: %3'"), 
		ClientID, InfoBasesCheckCode, InfoBases, ТекущийПользователь);
	
	ОбщегоНазначенияКупоросСервер.ЗаписьЖурналаРегистрацииРасширенная(ИмяСобытияВход, 
			ТекстСообщения, 
			УровеньЖурналаРегистрации.Информация);
	
	Возврат Истина;
	
КонецФункции
