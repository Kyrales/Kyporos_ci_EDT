//{{ *Олег Каратаев >>>>>>>>>>>>>>>>>>>>>>> ОПИСАНИЕ ИЗМЕНЕНИЙ >>>>>>>>>>>>>>>>>>>>>>>>>>>
// 
// ИЗМЕНЕННЫЕ СВОЙСТВА ОБЪЕКТА ОТСУТСТВУЮТ
// 
// НОВЫЕ/ИЗМЕНЕННЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//  * [Процедура]ЗаполнитьНаборыСвойствОбъекта - заполнение доп. набора свойств
//  * [Процедура]ПриПолученииПредопределенныхНаборовСвойств
//  * [Процедура]ПриПолученииНаименованийНаборовСвойств
//  + [Процедура]ЗаполнитьНаборСвойствПоВидуНоменклатуры
//  + [Процедура]ЗаполнитьНаборСвойствПоПроектуЗадачи
//  + [Процедура]ЗаполнитьНаборСвойствПоВидуРабочегоМеста
// 
//}} *Олег Каратаев <<<<<<<<<<<<<<<<<<<<<<< ОПИСАНИЕ ИЗМЕНЕНИЙ <<<<<<<<<<<<<<<<<<<<<<<<<<<

// Разделитель описания изменений общего модуля >> *Олег Каратаев
Функция ИзмененияОбщегоМодуля()

	Возврат Неопределено;	

КонецФункции // Конец Разделитель описания изменений общего модуля


///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений:
//     * Имя           - Строка - имя набора свойств. Формируется из полного имени объекта
//          метаданных заменой символа "." на "_".
//          Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - уникальный идентификатор предопределенного набора свойств.
//          Не должен повторяться в других наборах свойств.
//          Формат идентификатора Random UUID (Version 4).
//          Чтобы получить идентификатор, нужно в режиме 1С:Предприятие вычислить значение
//          конструктора платформы "Новый УникальныйИдентификатор" или воспользоваться online-генератором,
//          например, https://www.uuidgenerator.net/version4.
//     * Используется  - Неопределено
//                     - Булево - признак того, что набор свойств используется.
//          Например, можно использовать для скрытия набора по функциональным опциям.
//          Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	// { *Олег Каратаев
	// Справочник_Номенклатура
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Номенклатура";
	Набор.Идентификатор = Новый УникальныйИдентификатор("fd6591fc-7982-463e-95ef-4d2d2368496d");
	Набор.Используется  = Истина;
	Набор.ЭтоГруппа  = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_Номенклатура_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("128ff4ef-0f86-427e-8ee7-ce0bbb5a7527");
	ДочернийНабор.Используется  = Истина;
	
	// Справочник_Организации
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_Организации";
	Набор.Идентификатор = Новый УникальныйИдентификатор("d46af9e6-dadb-4a58-90c9-c7f399335c88");
	Набор.Используется  = Истина;
	
	// Справочник_РабочиеМеста
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_РабочиеМеста";
	Набор.Идентификатор = Новый УникальныйИдентификатор("c8bd41d7-e901-4988-9e81-f0212f5ab4c0");
	Набор.Используется  = Истина;
	Набор.ЭтоГруппа  = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_РабочиеМеста_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("5de8496c-0c8a-49f6-82b9-535611fc6e8d");
	ДочернийНабор.Используется  = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_РабочиеМеста_Сервер";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("4fb0b7e7-d0ec-4724-bcdf-749e893967f2");
	ДочернийНабор.Используется  = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Справочник_РабочиеМеста_ПрочиеНеСервер";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("30ae433d-a8b0-4621-a8d6-be470c7b0041");
	ДочернийНабор.Используется  = Истина;
	
	// Задача_ЗадачиПользователя
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Задача_ЗадачиПользователя";
	Набор.Идентификатор = Новый УникальныйИдентификатор("cc0d3645-9ea9-40fc-85c4-07ef892517bb");
	Набор.Используется  = Истина;
	Набор.ЭтоГруппа  = Истина;
	
	ДочернийНабор = Набор.Строки.Добавить();
	ДочернийНабор.Имя = "Задача_ЗадачиПользователя_Общие";
	ДочернийНабор.Идентификатор = Новый УникальныйИдентификатор("f7ebdf41-d7b1-44cf-b307-a7f31cb0a271");
	ДочернийНабор.Используется  = Истина;
	
	// Документ_ПриоритизацияЗадач
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПриоритизацияЗадач";
	Набор.Идентификатор = Новый УникальныйИдентификатор("c4c92e96-cd67-4a1a-b02d-68f158b09f13");
	Набор.Используется  = Истина;
	// }
	
КонецПроцедуры

// Получает наименования наборов свойств второго уровня на разных языках.
//
// Параметры:
//  Наименования - Соответствие из КлючИЗначение - представление набора на переданном языке:
//     * Ключ     - Строка - имя набора свойств. Например, "Справочник_Партнеры_Общие".
//     * Значение - Строка - наименование набора для переданного кода языка.
//  КодЯзыка - Строка - код языка. Например, "en".
//
// Пример:
//  Наименования["Справочник_Партнеры_Общие"] = НСтр("ru='Общие'; en='General';", КодЯзыка);
//
Процедура ПриПолученииНаименованийНаборовСвойств(Наименования, КодЯзыка) Экспорт
	
	// { *Олег Каратаев
	Наименования["Задача_ЗадачиПользователя_Общие"] = НСтр("ru = 'Общие';
																|en = 'General'", КодЯзыка);
	
	Наименования["Справочник_Номенклатура_Общие"] = НСтр("ru = 'Общие';
																|en = 'General'", КодЯзыка);
	Наименования["Справочник_РабочиеМеста_Общие"] = НСтр("ru = 'Общие';
																|en = 'General'", КодЯзыка);
	
	Наименования["Справочник_РабочиеМеста_Сервер"] = НСтр("ru = 'Сервер';
																|en = 'Server'", КодЯзыка);
	
	Наименования["Справочник_РабочиеМеста_ПрочиеНеСервер"] = НСтр("ru = 'Прочие (не сервера)'; en = 'Other (not server)'", КодЯзыка);
	// }
	
КонецПроцедуры

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - ЛюбаяСсылка      - ссылка на объект со свойствами.
//               - ФормаКлиентскогоПриложения - форма объекта, к которому подключены свойства.
//               - ДанныеФормыСтруктура - описание объекта, к которому подключены свойства.
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений:
//     * Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений
//     * ОбщийНабор - Булево - Истина, если набор свойств содержит свойства,
//                             общие для всех объектов.
//    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//    // или страница, которая создается, если наборов больше одного без учета
//    // пустого набора, который описывает свойства группы удаленных реквизитов.
//
//    // Если значение Неопределено, значит, использовать значение по умолчанию.
//
//    // Для любой группы управляемой формы.
//     * Высота                   - Число
//     * Заголовок                - Строка
//     * Подсказка                - Строка
//     * РастягиватьПоВертикали   - Булево
//     * РастягиватьПоГоризонтали - Булево
//     * ТолькоПросмотр           - Булево
//     * ЦветТекстаЗаголовка      - Цвет
//     * Ширина                   - Число
//     * ШрифтЗаголовка           - Шрифт
//                    
//    // Для обычной группы и страницы.
//     * Группировка              - ГруппировкаПодчиненныхЭлементовФормы
//
//    // Для обычной группы.
//     * Отображение              - ОтображениеОбычнойГруппы
//
//    // Для страницы.
//     * Картинка                 - Картинка
//     * ОтображатьЗаголовок      - Булево
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает, получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                   - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хеш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Знач Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	// { *Олег Каратаев
	Если ТипСсылки = Тип("СправочникСсылка.Номенклатура") Тогда
		ЗаполнитьНаборСвойствПоВидуНоменклатуры(Объект, ТипСсылки, НаборыСвойств);
	ИначеЕсли ТипСсылки = Тип("ЗадачаСсылка.ЗадачиПользователя") Тогда	
		ЗаполнитьНаборСвойствПоПроектуОбъекта(Объект, ТипСсылки, НаборыСвойств);	
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.РабочиеМеста") Тогда	
		ЗаполнитьНаборСвойствПоВидуРабочегоМеста(Объект, ТипСсылки, НаборыСвойств);
	КонецЕсли;
	// }
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
//
// Параметры:
//  Объект                  - СправочникОбъект.РолиИсполнителей - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти


// { *Олег Каратаев

// Получает набор свойств объекта по виду номенклатуры.
Процедура ЗаполнитьНаборСвойствПоВидуНоменклатуры(Номенклатура, ТипСсылки, НаборыСвойств)
	
	Строка = НаборыСвойств.Добавить();
	//Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие;
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Номенклатура_Общие");
	Строка.ОбщийНабор = Истина;
	
	Если ТипЗнч(Номенклатура) = ТипСсылки Тогда
		Номенклатура = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Номенклатура, "ЭтоГруппа, ВидНоменклатуры");
	КонецЕсли;
	
	Если Номенклатура.ЭтоГруппа = Ложь Тогда
		
		НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура.ВидНоменклатуры, "НаборСвойств");
			
		Если НаборСвойств <> Неопределено Тогда
		
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = НаборСвойств;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаборСвойствПоВидуРабочегоМеста(РабочееМесто, ТипСсылки, НаборыСвойств)
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_РабочиеМеста_Общие");
	Строка.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	Строка.ОтображатьЗаголовок = Истина;
	Строка.ОбщийНабор = Истина;
	Строка.Заголовок  = НСтр("ru = 'Для всех рабочих мест'");
	
	Если РабочееМесто.Сервер Тогда
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_РабочиеМеста_Сервер");
		Строка.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
		Строка.Заголовок = НСтр("ru = 'Только для серверов'");
		Строка.ОтображатьЗаголовок = Истина;
		
	Иначе
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_РабочиеМеста_ПрочиеНеСервер");
		Строка.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
		Строка.Заголовок = НСтр("ru = 'Для прочих (не серверов)'");
		Строка.ОтображатьЗаголовок = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаборСвойствПоПроектуОбъекта(Знач Объект, ТипСсылки, НаборыСвойств)
	
	Строка = НаборыСвойств.Добавить();
	//Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Задача_ЗадачиПользователя_Общие;
	Строка.Набор = УправлениеСвойствами.НаборСвойствПоИмени("Задача_ЗадачиПользователя_Общие");
	Строка.ОбщийНабор = Истина;
	
	Если ТипЗнч(Объект) = ТипСсылки Тогда
		Объект = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Проект");
	КонецЕсли;
	
	Если Объект.Проект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Проект, "НаборСвойств");
	
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = НаборСвойств;
		
	КонецЕсли;

КонецПроцедуры

