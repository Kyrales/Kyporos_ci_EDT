
#Область ПрограммныйИнтерфейс

// Вставить картинки в тело письма
//
// Параметры:
//  СтруктураКартинок	 - Структура - см. Документы.ЭлектронныеПисьмаВходящие.ПодготовитьТекстПисьмаИСтруктуруКартинок()
//  ТекстПисьма			 - Строка 
//
Процедура ВставитьКартинкиВТелоПисьма(СтруктураКартинок, ТекстПисьма) Экспорт
	
    Для Каждого ВложеннаяКартинка Из СтруктураКартинок Цикл
        
        ТекстПисьма = СтрЗаменить(ТекстПисьма, ВложеннаяКартинка.Ключ, СохранитьКартинкуВоВременныйФайл(ВложеннаяКартинка.Значение.Картинка, ВложеннаяКартинка.Значение.Расширение));
        
    КонецЦикла;

КонецПроцедуры

// Возвращает Код 1С c из раскрашенного HTML (обработка "ВыполняторКода")
// Обратная функция в модуле объекта обработки "ВыполняторКода": РаскрашеннаяСтраница1C(...).
//
// Параметры:
//  ЭлементСтраницаHTML	 - ЭлементФормы - Вид "Поле HTML документа" 
// 
// Возвращаемое значение:
//  Строка - возвращаемый коды 1С
//
Функция КодПрограммыИзРаскрашенногоHTML(ЭлементСтраницаHTML) Экспорт
	
	
	#Если ВебКлиент Тогда
		// Берем код из копии в textarea id=code.
		
		Если ЭлементСтраницаHTML.Документ = Неопределено Тогда
			 Возврат "";
		КонецЕсли;
		
		Код = ЭлементСтраницаHTML.Документ.body.ChildNodes[1].innerHTML;
		
	#Иначе
		
		Если ЭлементСтраницаHTML.Document = Неопределено Тогда
			 Возврат "";
		КонецЕсли;
		
		Код = ЭлементСтраницаHTML.Document.editor.getValue();
		
	#КонецЕсли	
	
	Возврат Код;

КонецФункции // КодПрограммыИзРаскрашенногоHTML()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СохранитьКартинкуВоВременныйФайл(Картинка, Расширение)
    
    #Если Не ВебКлиент Тогда
        // BSLLS:MissingTemporaryFileDeletion-off 
		// Не нужно удалять файл, т.к. в дальнейшем будет использовать в HTML форме. 
		// Должен удалится позже платформой автоматически.
	    ИмяФайла = ПолучитьИмяВременногоФайла(Расширение); 
	    Картинка.Записать(ИмяФайла);     
		// BSLLS:MissingTemporaryFileDeletion-on 
	
	    Возврат ИмяФайла;
    
    #КонецЕсли
	
	Возврат "";
	
КонецФункции

#КонецОбласти
