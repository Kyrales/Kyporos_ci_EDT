
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
	Если ЗначениеЗаполнено(АдресВременногоХранилища) Тогда 
		ЭтапыПроверки.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	КонецЕсли;	
	
	
	ОбъектыМетаданныхАдресХранилища = Параметры.ОбъектыМетаданныхАдресХранилища;
	ТаблицаОбъектовМетаданныхГотовая.Загрузить(ПолучитьИзВременногоХранилища(ОбъектыМетаданныхАдресХранилища));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекущуюСтроку(ТекущийИндексСтроки);
	
	ДоступностьКнопокДалееНазад();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТекстПредупреждения = НСтр("ru = 'Закрыть Мастер проверки?'");
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(ЭтотОбъект, Отказ, ЗавершениеРаботы, ТекстПредупреждения, "ЗакрытьФормуБезПодтверждения");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокОбъектыМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,Элемент.ТекущиеДанные.ОбъектМетаданных);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	СохранитьТекущиеДанныеВТаблицеЗначений(ТекущийИндексСтроки);
	
	ТекущийИндексСтроки = ТекущийИндексСтроки + 1;	
	
	Если ТекущийИндексСтроки>ЭтапыПроверки.Количество()-1 Тогда
		ТекущийИндексСтроки = ЭтапыПроверки.Количество()-1;
	КонецЕсли;
	
	
	УстановитьТекущуюСтроку(ТекущийИндексСтроки);	
	
	//*
	
	ДоступностьКнопокДалееНазад();
		
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	СохранитьТекущиеДанныеВТаблицеЗначений(ТекущийИндексСтроки);	
	
	ТекущийИндексСтроки = ТекущийИндексСтроки - 1;	
	
	Если ТекущийИндексСтроки<0 Тогда
		ТекущийИндексСтроки = 0;
	КонецЕсли;
	
	УстановитьТекущуюСтроку(ТекущийИндексСтроки);	
	
	//*
	
	ДоступностьКнопокДалееНазад();

КонецПроцедуры

&НаКлиенте
Процедура ДоступностьКнопокДалееНазад() 
	
	Если ТекущийИндексСтроки = ЭтапыПроверки.Количество()-1 Тогда
		Элементы.КнопкаДалее.Доступность = Ложь;
		Элементы.КнопкаНазад.Доступность = Истина;		
	ИначеЕсли ТекущийИндексСтроки = 0 Тогда
		Элементы.КнопкаДалее.Доступность = Истина;
		Элементы.КнопкаНазад.Доступность = Ложь;
	Иначе
		Элементы.КнопкаДалее.Доступность = Истина;
		Элементы.КнопкаНазад.Доступность = Истина;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьПроверку(Команда)
	
	СохранитьТекущиеДанныеВТаблицеЗначений(ТекущийИндексСтроки);
	СохранитьТекущийСписокОбъектовМетаданных();		
	
	СтруктураПараметровВозврат = Новый Структура;
	СтруктураПараметровВозврат.Вставить("ЭтапыПроверкиАдрес", ПоместитьЭтапыПроверкиВоВременноеХранилище());
	СтруктураПараметровВозврат.Вставить("ТаблицаОбъектовМетаданныхАдрес", ПоместитьТаблицаОбъектовМетаданныхВоВременноеХранилище());
	
	Оповестить("ЗаконченаПроверкаЭтапов",СтруктураПараметровВозврат,ЭтаФорма);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПоОМ(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаКомментарийПоОМ",ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, "", НСтр("ru = 'Ввод замечаний по объекту метаданных'"), 0, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для каждого ТекСтрока Из СписокОбъектыМетаданных Цикл
		 ТекСтрока.Проверено = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для каждого ТекСтрока Из СписокОбъектыМетаданных Цикл
		 ТекСтрока.Проверено = Ложь;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьТекущуюСтроку(ИндексСтроки) 
	
	Если ЭтапыПроверки.Количество()=0 
		Или (ЭтапыПроверки.Количество()-1) < ИндексСтроки 
		Или ИндексСтроки<0 Тогда
		Возврат;	
	КонецЕсли;
	
	СтрокаТаблицы = ЭтапыПроверки.Получить(ИндексСтроки);
	
	Если СтрокаТаблицы.РезультатЭтапа=ПредопределенноеЗначение("Перечисление.РезультатЭтапаПроверки.ПустаяСсылка") Тогда
		РезультатЭтапаПроверки = 0;
	ИначеЕсли СтрокаТаблицы.РезультатЭтапа=ПредопределенноеЗначение("Перечисление.РезультатЭтапаПроверки.Принято") Тогда
		РезультатЭтапаПроверки = 1;
	ИначеЕсли СтрокаТаблицы.РезультатЭтапа=ПредопределенноеЗначение("Перечисление.РезультатЭтапаПроверки.НеПринято") Тогда
		РезультатЭтапаПроверки = 2;
	КонецЕсли;
	
	КомментарийРезультата = СтрокаТаблицы.КомментарийРезультата;
	
	СтруктураДанных = ПолучитьДанныеЭтапаПроверки(СтрокаТаблицы.ЭтапПроверки);
	
	ТипИнцидента		  = СтруктураДанных.ТипИнцидента;
	ЭтапПроверки 		  = СтруктураДанных.ПолноеНаименование;
	ЭтапПроверкиСсылка	  = СтруктураДанных.ЭтапПроверки;
	КомментарийПоПроверке = СтруктураДанных.КомментарийПоПроверке;
	
	НомерЭтапа = Строка(ИндексСтроки+1)+"/"+Строка(ЭтапыПроверки.Количество());
	
	// сохранить прошлый и установить список объектов метаданных этапа
	СохранитьТекущийСписокОбъектовМетаданных();	
	
	СписокОбъектыМетаданных.Очистить();
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ЭтапПроверки",ЭтапПроверкиСсылка);
	НайденныеСтроки = ТаблицаОбъектовМетаданныхГотовая.НайтиСтроки(ПараметрыОтбора);
	Для каждого ТекСтрокаМассива Из НайденныеСтроки Цикл
	    НовСтрока = СписокОбъектыМетаданных.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтрокаМассива);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТекущийСписокОбъектовМетаданных()

	Для каждого ТекСтрока Из СписокОбъектыМетаданных Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ЭтапПроверки",ТекСтрока.ЭтапПроверки);
		ПараметрыОтбора.Вставить("ОбъектМетаданных",ТекСтрока.ОбъектМетаданных);
		НайденныеСтроки = ТаблицаОбъектовМетаданныхГотовая.НайтиСтроки(ПараметрыОтбора);
	    Если НайденныеСтроки.Количество()>0 Тогда
			 НайденныеСтроки[0].Проверено = ТекСтрока.Проверено;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // СохранитьТекущийСписокОбъектовМетаданных()

&НаСервере
Функция ПолучитьДанныеЭтапаПроверки(ЭтапПроверки) 
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЭтапПроверки",ЭтапПроверки);
	СтруктураДанных.Вставить("ПолноеНаименование",ЭтапПроверки.ПолноеНаименование);
	СтруктураДанных.Вставить("КомментарийПоПроверке",ЭтапПроверки.КомментарийПоПроверке);
	СтруктураДанных.Вставить("ТипИнцидента",ЭтапПроверки.ТипИнцидента);
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаСервере
Процедура СохранитьТекущиеДанныеВТаблицеЗначений(ИндексСтроки) 
	
	СтрокаТаблицы = ЭтапыПроверки.Получить(ИндексСтроки);
	
	Если РезультатЭтапаПроверки=0 Тогда
		СтрокаТаблицы.РезультатЭтапа = Перечисления.РезультатЭтапаПроверки.ПустаяСсылка();
	ИначеЕсли РезультатЭтапаПроверки=1 Тогда
		СтрокаТаблицы.РезультатЭтапа = Перечисления.РезультатЭтапаПроверки.Принято;		
	ИначеЕсли РезультатЭтапаПроверки=2 Тогда
		СтрокаТаблицы.РезультатЭтапа = Перечисления.РезультатЭтапаПроверки.НеПринято;		
	КонецЕсли;
	СтрокаТаблицы.КомментарийРезультата = КомментарийРезультата; 
	
КонецПроцедуры

&НаСервере
Функция ПоместитьЭтапыПроверкиВоВременноеХранилище()

	Возврат ПоместитьВоВременноеХранилище(ЭтапыПроверки.Выгрузить(), АдресВременногоХранилища);
	
КонецФункции

&НаСервере
Функция ПоместитьТаблицаОбъектовМетаданныхВоВременноеХранилище()

	Возврат ПоместитьВоВременноеХранилище(ТаблицаОбъектовМетаданныхГотовая.Выгрузить(), ОбъектыМетаданныхАдресХранилища);
	
КонецФункции

&НаКлиенте
Процедура ПослеВводаКомментарийПоОМ(Строка, Параметры) Экспорт
	
	Если НЕ Строка = Неопределено Тогда
		
		ТекстКомментария = СтрШаблон(НСтр("ru = '#%1: %2'"), СформироватьНаименованиеОбъектаМетаданных(Элементы.СписокОбъектыМетаданных.ТекущиеДанные.ОбъектМетаданных), Строка);
		
		ВставитьРазделительВТекст("КомментарийРезультата",КомментарийРезультата,ТекстКомментария);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРазделительВТекст(ИмяЭлементаФормы, РеквизитФормы, ТекстКомментария = "") Экспорт
	
	ТекстОбщий = РеквизитФормы;
	
	ЭлементФормы = Элементы[ИмяЭлементаФормы];
	
	ДлинаТекста = СтрДлина(ТекстОбщий) + 1;
	Если ТекстОбщий<>"" Тогда
		ЭлементФормы.УстановитьГраницыВыделения(ДлинаТекста, 1, ДлинаТекста, 1);
	КонецЕсли;
	
	ТекстРазделителя = ТекстКомментария;
	ТекстРазделителя = ТекстРазделителя + Символы.ПС;
	
	ДлинаТекста = СтрДлина(ТекстОбщий + ТекстРазделителя) + 1;
	ЭлементФормы.ВыделенныйТекст = ТекстРазделителя;
	
	Если ТекстОбщий<>"" Тогда
		ЭлементФормы.УстановитьГраницыВыделения(ДлинаТекста, 1, ДлинаТекста, 1);
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = ЭлементФормы;
	
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаименованиеОбъектаМетаданных(ОбъектМетаданных)
	
	ТипОбъектаМетаданных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектМетаданных, "ТипОбъектаМетаданных");
	СоответствиеМодулю 	 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТипОбъектаМетаданных, "СоответствиеМодулю");
	
	Возврат СоответствиеМодулю+"."+Строка(ОбъектМетаданных);	

КонецФункции // СформироватьНаименованиеОбъектаМетаданных()

#КонецОбласти

