#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Зафиксировать работу по задаче
//
// Параметры:
//  ДанныеЗаполнения - Структура - содержит свойства:
//		* Дата
//		* Задача
//		* Исполнитель
//		* ФактическаяТрудоемкость
//		* РучноеДобавление - Булево - (необязательное)
//		* РаботаПоЗадаче - ДокументСсылка.РаботыПоЗадаче - (необязательное)
//
Процедура ЗафиксироватьРаботуПоЗадаче(ДанныеЗаполнения) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Проверяем наличие ранее остатков по исполнителю и учитываем в расчете
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВзаиморасчетыСОрганизациямиОстатки.Задача КАК Задача,
	               |	ВзаиморасчетыСОрганизациямиОстатки.ФактическаяТрудоемкостьОстаток КАК ОстатокПоИсполнителю
	               |ПОМЕСТИТЬ ОстаткиПоФактическимТрудозатратамИсполнителя
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСОрганизациями.Остатки(
	               |			&ДатаСреза,
	               |			Задача = &Задача
	               |				И Исполнитель = &Исполнитель) КАК ВзаиморасчетыСОрганизациямиОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РаботыПоЗадаче.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(ОстаткиПоФактическимТрудозатратамИсполнителя.ОстатокПоИсполнителю, 0) КАК ОстатокПоИсполнителю
	               |ИЗ
	               |	Документ.РаботыПоЗадаче КАК РаботыПоЗадаче
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоФактическимТрудозатратамИсполнителя КАК ОстаткиПоФактическимТрудозатратамИсполнителя
	               |		ПО РаботыПоЗадаче.Задача = ОстаткиПоФактическимТрудозатратамИсполнителя.Задача
	               |ГДЕ
	               |	РаботыПоЗадаче.Задача = &Задача
	               |	И РаботыПоЗадаче.Исполнитель = &Исполнитель
	               |	И НЕ РаботыПоЗадаче.ПометкаУдаления
	               |	И НЕ РаботыПоЗадаче.РучноеДобавление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиПоФактическимТрудозатратамИсполнителя.ОстатокПоИсполнителю КАК ОстатокПоИсполнителю
	               |ИЗ
	               |	ОстаткиПоФактическимТрудозатратамИсполнителя КАК ОстаткиПоФактическимТрудозатратамИсполнителя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗадачиПользователя.Ссылка КАК Ссылка,
	               |	ЗадачиПользователя.Проект КАК Проект,
	               |	ЗадачиПользователя.Проект.Организация КАК Организация
	               |ИЗ
	               |	Задача.ЗадачиПользователя КАК ЗадачиПользователя
	               |ГДЕ
	               |	ЗадачиПользователя.Ссылка = &Задача
	               |	И ЗадачиПользователя.Проект.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Задача", ДанныеЗаполнения.Задача);
	Запрос.УстановитьПараметр("ДатаСреза", ДанныеЗаполнения.Дата - 1);
	Запрос.УстановитьПараметр("Исполнитель", ДанныеЗаполнения.Исполнитель);
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[1].Выбрать();
	ВыборкаОстатков = Результат[2].Выбрать();
	ВыборкаРеквизитовЗадачи =  Результат[3].Выбрать();
	
	РаботаПоЗадаче = ?(ДанныеЗаполнения.Свойство("РаботаПоЗадаче"), ДанныеЗаполнения.РаботаПоЗадаче, Документы.РаботыПоЗадаче.ПустаяСсылка());
	РучноеДобавление = ?(ДанныеЗаполнения.Свойство("РучноеДобавление"), ДанныеЗаполнения.РучноеДобавление, Ложь);
	
	Если Выборка.Следующий() Тогда
	
		ОбъектДокумент = Выборка.Ссылка.ПолучитьОбъект();
		
		ДобавляемыйОстатокПоЗатратам = ДанныеЗаполнения.ФактическаяТрудоемкость - Выборка.ОстатокПоИсполнителю;
		
	ИначеЕсли ЗначениеЗаполнено(РаботаПоЗадаче) Тогда	
		// при фиксации из формы затраченного времени
		
		ОбъектДокумент = РаботаПоЗадаче.ПолучитьОбъект();
		
		ДобавляемыйОстатокПоЗатратам = ДанныеЗаполнения.ФактическаяТрудоемкость;
		
	Иначе
		
		ОбъектДокумент = Документы.РаботыПоЗадаче.СоздатьДокумент();
		
		Если ВыборкаОстатков.Следующий()
			И Не РучноеДобавление Тогда
			// ранее найденный остаток отнимается от фактической полной
			ДобавляемыйОстатокПоЗатратам = ДанныеЗаполнения.ФактическаяТрудоемкость - ВыборкаОстатков.ОстатокПоИсполнителю;
			
		Иначе
			
			ДобавляемыйОстатокПоЗатратам = ДанныеЗаполнения.ФактическаяТрудоемкость;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбъектДокумент, ДанныеЗаполнения,,"ФактическаяТрудоемкость");
	ВыборкаРеквизитовЗадачи.Следующий();
	ОбъектДокумент.Организация = ВыборкаРеквизитовЗадачи.Организация;	
	ОбъектДокумент.ФактическаяТрудоемкость = ДобавляемыйОстатокПоЗатратам;
	
	ОбъектДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	ДанныеЗаполнения.Вставить("РаботаПоЗадаче", ОбъектДокумент.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
