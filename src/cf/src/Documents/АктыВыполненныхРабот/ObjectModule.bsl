
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ВзаиморасчетыСОрганизациями.Записывать = Истина;
		
	Для Каждого ТекСтрокаСписокЗадач Из СписокЗадач Цикл
		
		Движение = Движения.ВзаиморасчетыСОрганизациями.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Задача = ТекСтрокаСписокЗадач.Задача;
		Движение.Исполнитель = ТекСтрокаСписокЗадач.Исполнитель;
		Движение.ФактическаяТрудоемкость = ТекСтрокаСписокЗадач.Трудоемкость;
		
	КонецЦикла;
	
	Движения.ВзаиморасчетыСОрганизациями.Записать();  // АПК:105 Явная запись для возможности контроля остатков. 
	
	// Контроль остатков трудоемкости.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВложенныйЗапрос.Задача КАК Задача,
	|	ВложенныйЗапрос.ФактическаяТрудоемкостьОстаток КАК ФактическаяТрудоемкостьОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСОрганизациямиОстатки.Задача КАК Задача,
	|		СУММА(ВзаиморасчетыСОрганизациямиОстатки.ФактическаяТрудоемкостьОстаток) КАК ФактическаяТрудоемкостьОстаток
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСОрганизациями.Остатки(&ДатаСреза, Задача В (&СписокЗадач)) КАК ВзаиморасчетыСОрганизациямиОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВзаиморасчетыСОрганизациямиОстатки.Задача) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ФактическаяТрудоемкостьОстаток < 0";
	
	
	Граница = Новый Граница(Дата, ВидГраницы.Включая);
	МоментВремениНаДату = Граница.Значение;
	Запрос.УстановитьПараметр("ДатаСреза", МоментВремениНаДату + 1);
	Запрос.УстановитьПараметр("СписокЗадач", СписокЗадач.ВыгрузитьКолонку("Задача"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По задаче %1: остаток выполненных часов меньше чем указано в акте.'"), Выборка.Задача);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Отказ = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

