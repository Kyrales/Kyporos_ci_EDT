
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПорядокСортировкиПараметр = ОбщегоНазначения.СкопироватьРекурсивно(Параметры.ПорядокСортировки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НаборПолейДляСортировки = ВладелецФормы.НаборПолейДляСортировкиНаКлиенте();
	
	Для каждого ЭлементСписка Из ПорядокСортировкиПараметр Цикл
		
		ОписаниеПоля = НаборПолейДляСортировки.НайтиПоЗначению(ЭлементСписка.Значение);
		
		Если ОписаниеПоля = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ПорядокСортировки.Добавить();
		НоваяСтрока.Использование = Истина;
		НоваяСтрока.Поле = ЭлементСписка.Значение;
		НоваяСтрока.Представление = ОписаниеПоля.Представление;
		НоваяСтрока.ОбратныйПорядок = ЭлементСписка.Пометка;
		
	КонецЦикла;
	
	Для каждого ЭлементСписка Из НаборПолейДляСортировки Цикл
		
		Если ПорядокСортировкиПараметр.НайтиПоЗначению(ЭлементСписка.Значение) <> Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ПорядокСортировки.Добавить();
		НоваяСтрока.Поле = ЭлементСписка.Значение;
		НоваяСтрока.Представление = ЭлементСписка.Представление;
		НоваяСтрока.ОбратныйПорядок = ЭлементСписка.Пометка;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Результат = Новый СписокЗначений;
	
	Для каждого СтрокаТаблицы Из ПорядокСортировки Цикл
		
		Если Не СтрокаТаблицы.Использование Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Результат.Добавить(СтрокаТаблицы.Поле, , СтрокаТаблицы.ОбратныйПорядок);
		
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти
