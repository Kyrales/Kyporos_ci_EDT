
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый()
		Или ИдентификаторУзла = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор() Тогда
		ИдентификаторУзла = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

// BSLLS:DataExchangeLoading-off 

Процедура ПередУдалением(Отказ)
	
	// Проверка значения свойства ОбменДанными.Загрузка отсутствует по причине того, что в расположенным ниже коде,
	// реализована логика, которая должна выполняться в том числе при установке этого свойства равным Истина
	// (на стороне кода, который выполняет попытку записи в данный план обмена).
	
	// Для плана обмена используется безопасное хранилище,
	// поэтому при удалении узла обмена необходимо также удалять соответствующую запись из хранилища
	// (в соответствии с документацией по подсистеме базовой функциональности).
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Ссылка);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// BSLLS:DataExchangeLoading-on
	
#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
